function embed(svg, target) {
    if (target) {
        var fragment = document.createDocumentFragment(),
            viewBox = !svg.getAttribute("viewBox") && target.getAttribute("viewBox");
        viewBox && svg.setAttribute("viewBox", viewBox);
        for (var clone = target.cloneNode(!0); clone.childNodes.length;) fragment.appendChild(clone.firstChild);
        svg.appendChild(fragment)
    }
}

function loadreadystatechange(xhr) {
    xhr.onreadystatechange = function() {
        if (4 === xhr.readyState) {
            var cachedDocument = xhr._cachedDocument;
            cachedDocument || (cachedDocument = xhr._cachedDocument = document.implementation.createHTMLDocument(""), cachedDocument.body.innerHTML = xhr.responseText, xhr._cachedTarget = {}), xhr._embeds.splice(0).map(function(item) {
                var target = xhr._cachedTarget[item.id];
                target || (target = xhr._cachedTarget[item.id] = cachedDocument.getElementById(item.id)), embed(item.svg, target)
            })
        }
    }, xhr.onreadystatechange()
}

function svg4everybody(rawopts) {
    function oninterval() {
        for (var index = 0; index < uses.length;) {
            var use = uses[index],
                svg = use.parentNode;
            if (svg && /svg/i.test(svg.nodeName)) {
                var src = use.getAttribute("xlink:href");
                if (LEGACY_SUPPORT && nosvg) {
                    var img = document.createElement("img");
                    img.style.cssText = "display:inline-block;height:100%;width:100%", img.setAttribute("width", svg.getAttribute("width") || svg.clientWidth), img.setAttribute("height", svg.getAttribute("height") || svg.clientHeight), img.src = fallback(src, svg, use), svg.replaceChild(img, use)
                } else if (polyfill && (!opts.validate || opts.validate(src, svg, use))) {
                    svg.removeChild(use);
                    var srcSplit = src.split("#"),
                        url = srcSplit.shift(),
                        id = srcSplit.join("#");
                    if (url.length) {
                        var xhr = requests[url];
                        xhr || (xhr = requests[url] = new XMLHttpRequest, xhr.open("GET", url), xhr.send(), xhr._embeds = []), xhr._embeds.push({
                            svg: svg,
                            id: id
                        }), loadreadystatechange(xhr)
                    } else embed(svg, document.getElementById(id))
                }
            } else ++index
        }
        requestAnimationFrame(oninterval, 67)
    }
    var nosvg, fallback, opts = Object(rawopts);
    LEGACY_SUPPORT && (fallback = opts.fallback || function(src) {
        return src.replace(/\?[^#]+/, "").replace("#", ".").replace(/^\./, "") + ".png" + (/\?[^#]+/.exec(src) || [""])[0]
    }, nosvg = "nosvg" in opts ? opts.nosvg : /\bMSIE [1-8]\b/.test(navigator.userAgent), nosvg && (document.createElement("svg"), document.createElement("use")));
    var polyfill, olderIEUA = /\bMSIE [1-8]\.0\b/,
        newerIEUA = /\bTrident\/[567]\b|\bMSIE (?:9|10)\.0\b/,
        webkitUA = /\bAppleWebKit\/(\d+)\b/,
        olderEdgeUA = /\bEdge\/12\.(\d+)\b/;
    polyfill = "polyfill" in opts ? opts.polyfill : LEGACY_SUPPORT ? olderIEUA.test(navigator.userAgent) || newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537 : newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537;
    var requests = {},
        requestAnimationFrame = window.requestAnimationFrame || setTimeout,
        uses = document.getElementsByTagName("use");
    polyfill && oninterval()
}

function elementSupportsAttribute(element, attribute) {
    var test = document.createElement(element);
    return attribute in test
}

function calculateHeight() {
    var H = $(window).height();
    return H
}

function calculateWidth() {
    var W = $(window).width();
    return W
}

function reloadPage() {
    return location.reload(), !1
}

function stopPlayScroll(yesno) {
    if (yesno) {
        $(document).on("mousewheel DOMMouseScroll", function(e) {
            preventDefault(e)
        });
        var aux = $(document).scrollTop();
        $(document).on("scroll", function(e) {
            $(document).scrollTop(aux), preventDefault(e)
        }), $(document).on("touchmove", function(e) {
            preventDefault(e)
        })
    } else $(document).off("mousewheel DOMMouseScroll"), $(document).unbind("scroll"), $(document).off("touchmove")
}

function preventDefault(e) {
    e = e || window.event, e.preventDefault && e.preventDefault(), e.returnValue = !1
}

function goTo($elemento) {
    $_body.hasClass("mobile") ? $("html, body").animate({
        scrollTop: $elemento.offset().top
    }, 1e3) : TweenMax.to(window, 1.5, {
        scrollTo: {
            y: $elemento
        },
        ease: Power4.easeInOut
    })
}

function resizeLikeCover($element) {
    $element.each(function() {
        var $this = $(this),
            picW = $this.width(),
            picH = $this.height(),
            picWH = picW / picH,
            $picParent = $this.parent(),
            parentW = $picParent.width(),
            parentH = $picParent.height(),
            parentWH = parentW / parentH;
        if (parentW > parentH && parentWH >= picWH) {
            $this.css({
                width: parentW,
                height: "auto"
            });
            var difH = parseInt($this.css("height")) - parentH,
                auxH = parseInt(difH / 2);
            $this.css({
                top: -auxH,
                left: 0
            })
        } else {
            $this.css({
                width: "auto",
                height: parentH
            });
            var difW = parseInt($this.css("width")) - parentW,
                auxW = parseInt(difW / 2);
            $this.css({
                left: -auxW,
                top: 0
            })
        }
    })
}

function validateForm($form) {
    var error = 0;
    return $form.find(".required").each(function() {
        var $this = $(this),
            defeito = this.defaultValue;
        error += check($this, defeito, error)
    }), $form.find(".password-confirm").length > 0 && $form.find(".password-confirm").each(function() {
        var $psw = $(this);
        error += validatePasswords($form, $psw)
    }), !(error > 0)
}

function resetForm($form) {
    var $formInputs = $form.find("input"),
        $formTextarea = $form.find("textarea");
    $formTextarea.each(function() {
        var $this = $(this);
        $this.removeClass("erro"), $this.parent().removeClass("erro"), $this.attr("value", "")
    }), $formInputs.each(function() {
        var $this = $(this);
        $this.removeClass("erro"), $this.parent().removeClass("erro"), $this.attr("value", "")
    })
}

function check($this, defeito, error, type) {
    var error = 0;
    if ("number" == type) return validateNumbers($this) || (error += 1), error;
    if ($this.hasClass("check-box") && (validateCheckBox($this) || (error += 1)), $this.hasClass("min-length") && (validateLength($this) || (error += 1)), $this.hasClass("exact-length") && (validateExactLength($this) || (error += 1)), $this.hasClass("month-credit-card") && (validateCreditCardMonth($this) || (error += 1)), $this.hasClass("year-credit-card") && (validateCreditCardYear($this) || (error += 1)), $this.hasClass("email") && (validateEmail($this) || (error += 1)), $this.hasClass("phone") && (validatePhone($this) || (error += 1)), $this.hasClass("birthdate") && (validateBirthdate($this) || (error += 1)), $this.hasClass("number") && (validateNumbers($this) || (error += 1)), $this.hasClass("select") && (validateSelect($this) || (error += 1)), $this.hasClass("cap") && ("" == $this.val() || $this.val() == defeito ? ($this.parent().children("span").addClass("on"), error += 1, $this.parent().addClass("erro")) : ($this.parent().children("span").removeClass("on"), $this.parent().removeClass("erro"))), "" != $this.val() && $this.val() != defeito || $this.hasClass("input-group") || (error += 1), error > 0) {
        if ($this.addClass("erro"), $this.parent().addClass("erro"), $this.hasClass("input-group")) {
            var a = $this.attr("name");
            $("input[name='" + a + "']").addClass("erro")
        }
    } else if ($this.removeClass("erro"), $this.parent().removeClass("erro"), $this.hasClass("input-group")) {
        var a = $this.attr("name");
        $("input[name='" + a + "']").removeClass("erro")
    }
    return error
}

function validatePasswords($form, $input) {
    var value = "",
        error = 0;
    return $input.length > 0 && $input.addClass("first-focus"), $form.find(".password-confirm").each(function() {
        var $this = $(this);
        "" != $this.val() || $this.hasClass("required") || (error = 0), "" == $this.val() && $this.hasClass("required") && (error += 1), $this.hasClass("min-length") && !validateLength($this) && (error += 1), "" == value ? value = $this.val() : value == $this.val() ? error > 0 ? error -= 1 : error = 0 : error += 1, $this.hasClass("first-focus") && (error > 0 ? ($this.addClass("erro"), $this.parent().addClass("erro")) : ($this.removeClass("erro"), $this.parent().removeClass("erro")))
    }), error
}

function validateCheckBox($this) {
    var a = $this.attr("name");
    return !!$("input[name='" + a + "']").is(":checked")
}

function validateLength($this) {
    var a = $this.val(),
        length = $this.attr("data-length");
    return a.length >= length
}

function validateExactLength($this) {
    var a = $this.val(),
        length = $this.attr("data-length");
    return a.length == length
}

function validateCreditCardMonth($this) {
    var a = $this.val();
    return a <= 12
}

function validateCreditCardYear($this) {
    var a = $this.val(),
        d = new Date;
    return n = d.getFullYear(), n = n.toString().substr(2), a >= n && n <= 99
}

function validateEmail($this) {
    var a = $this.val(),
        filter = new RegExp(/^[+a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,15}$/i);
    return !!filter.test(a)
}

function validatePhone($this) {
    var a = $this.val(),
        filter = /^[+]?[0-9 ]{6,}$/;
    return !!filter.test(a)
}

function validateBirthdate($this) {
    var a = $this.val(),
        filter = /^(((0[1-9]|[12]\d|3[01])\/(0[13578]|1[02])\/((19|[2-9]\d)\d{2}))|((0[1-9]|[12]\d|30)\/(0[13456789]|1[012])\/((19|[2-9]\d)\d{2}))|((0[1-9]|1\d|2[0-8])\/02\/((19|[2-9]\d)\d{2}))|(29\/02\/((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$/g;
    return !!filter.test(a)
}

function validateNumbers($this) {
    var a = $this.val(),
        filter = /^[+-]?[0-9]{1,9}(?:\.[0-9]{1,2})?$/i;
    if (filter.test(a)) {
        if ($this.hasClass("min-number")) {
            var min = Number($this.attr("data-min"));
            if (a >= min) {
                if ($this.hasClass("max-number")) {
                    var max = Number($this.attr("data-max"));
                    return a <= max
                }
                return !0
            }
            return !1
        }
        return !0
    }
    return !1
}

function validateSelect($this) {
    var a = $this.attr("name");
    return $("input[name='" + a + "']").is(":checked") ? ($this.parent().removeClass("erro"), $this.removeClass("erro"), !0) : ($this.parent().addClass("erro"), $this.addClass("erro"), !1)
}

function onlyNumber(event) {
    event.shiftKey && event.preventDefault(), 46 == event.keyCode || 8 == event.keyCode || 190 == event.keyCode || 188 == event.keyCode || (event.keyCode < 95 ? (event.keyCode < 48 || event.keyCode > 57) && event.preventDefault() : (event.keyCode < 96 || event.keyCode > 105) && event.preventDefault())
}

function preventDefault(e) {
    e = e || window.event, e.preventDefault && e.preventDefault(), e.returnValue = !1
}

function preventDefaultForScrollKeys(e) {
    if (keys[e.keyCode]) return preventDefault(e), !1
}

function disableScroll() {
    window.addEventListener && window.addEventListener("DOMMouseScroll", preventDefault, !1), window.onwheel = preventDefault, window.onmousewheel = document.onmousewheel = preventDefault, window.ontouchmove = preventDefault, document.onkeydown = preventDefaultForScrollKeys
}

function enableScroll() {
    window.removeEventListener && window.removeEventListener("DOMMouseScroll", preventDefault, !1), window.onmousewheel = document.onmousewheel = null, window.onwheel = null, window.ontouchmove = null, document.onkeydown = null
}! function(a, b) {
    "use strict";
    if ("function" != typeof a.createEvent) return !1;
    var c, d, e, f, g, h, i, j, k = "undefined" != typeof jQuery,
        l = function(a) {
            var b = a.toLowerCase(),
                c = "MS" + a;
            return navigator.msPointerEnabled ? c : b
        },
        m = !1,
        n = {
            touchstart: l("PointerDown") + " touchstart",
            touchend: l("PointerUp") + " touchend",
            touchmove: l("PointerMove") + " touchmove"
        },
        o = function(a, b, c) {
            for (var d = b.split(" "), e = d.length; e--;) a.addEventListener(d[e], c, !1)
        },
        p = function(a) {
            return a.targetTouches ? a.targetTouches[0] : a
        },
        q = function() {
            return (new Date).getTime()
        },
        r = function(b, e, f, g) {
            var h = a.createEvent("Event");
            if (h.originalEvent = f, g = g || {}, g.x = c, g.y = d, g.distance = g.distance, k && (h = jQuery.Event(e, {
                    originalEvent: f
                }), jQuery(b).trigger(h, g)), h.initEvent) {
                for (var i in g) h[i] = g[i];
                h.initEvent(e, !0, !0), b.dispatchEvent(h)
            }
            for (; b;) b["on" + e] && b["on" + e](h), b = b.parentNode
        },
        s = function(a) {
            if ("mousedown" !== a.type && (m = !0), "mousedown" !== a.type || !m) {
                var b = p(a);
                e = c = b.pageX, f = d = b.pageY, j = setTimeout(function() {
                    r(a.target, "longtap", a), h = a.target
                }, y), g = q(), B++
            }
        },
        t = function(a) {
            if ("mouseup" === a.type && m) return void(m = !1);
            var b = [],
                k = q(),
                l = f - d,
                n = e - c;
            if (clearTimeout(i), clearTimeout(j), -v >= n && b.push("swiperight"), n >= v && b.push("swipeleft"), -v >= l && b.push("swipedown"), l >= v && b.push("swipeup"), b.length) {
                for (var o = 0; o < b.length; o++) {
                    var p = b[o];
                    r(a.target, p, a, {
                        distance: {
                            x: Math.abs(n),
                            y: Math.abs(l)
                        }
                    })
                }
                B = 0
            } else e >= c - z && c + z >= e && f >= d - z && d + z >= f && g + w - k >= 0 && (r(a.target, B >= 2 && h === a.target ? "dbltap" : "tap", a), h = a.target), i = setTimeout(function() {
                B = 0
            }, x)
        },
        u = function(a) {
            if ("mousemove" !== a.type || !m) {
                var b = p(a);
                c = b.pageX, d = b.pageY
            }
        },
        v = b.SWIPE_THRESHOLD || 100,
        w = b.TAP_THRESHOLD || 150,
        x = b.DBL_TAP_THRESHOLD || 200,
        y = b.LONG_TAP_THRESHOLD || 1e3,
        z = b.TAP_PRECISION / 2 || 30,
        A = b.JUST_ON_TOUCH_DEVICES,
        B = 0;
    o(a, n.touchstart + (A ? "" : " mousedown"), s), o(a, n.touchend + (A ? "" : " mouseup"), t), o(a, n.touchmove + (A ? "" : " mousemove"), u)
}(document, window);
var _gsScope = "undefined" != typeof module && module.exports && "undefined" != typeof global ? global : this || window;
(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function() {
        "use strict";
        _gsScope._gsDefine("TweenMax", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function(a, b, c) {
                var d = function(a) {
                        var b, c = [],
                            d = a.length;
                        for (b = 0; b !== d; c.push(a[b++]));
                        return c
                    },
                    e = function(a, b, c) {
                        var d, e, f = a.cycle;
                        for (d in f) e = f[d], a[d] = "function" == typeof e ? e(c, b[c]) : e[c % e.length];
                        delete a.cycle
                    },
                    f = function(a, b, d) {
                        c.call(this, a, b, d), this._cycle = 0, this._yoyo = this.vars.yoyo === !0, this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._dirty = !0, this.render = f.prototype.render
                    },
                    g = 1e-10,
                    h = c._internals,
                    i = h.isSelector,
                    j = h.isArray,
                    k = f.prototype = c.to({}, .1, {}),
                    l = [];
                f.version = "1.19.0", k.constructor = f, k.kill()._gc = !1, f.killTweensOf = f.killDelayedCallsTo = c.killTweensOf, f.getTweensOf = c.getTweensOf, f.lagSmoothing = c.lagSmoothing, f.ticker = c.ticker, f.render = c.render, k.invalidate = function() {
                    return this._yoyo = this.vars.yoyo === !0, this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._uncache(!0), c.prototype.invalidate.call(this)
                }, k.updateTo = function(a, b) {
                    var d, e = this.ratio,
                        f = this.vars.immediateRender || a.immediateRender;
                    b && this._startTime < this._timeline._time && (this._startTime = this._timeline._time, this._uncache(!1), this._gc ? this._enabled(!0, !1) : this._timeline.insert(this, this._startTime - this._delay));
                    for (d in a) this.vars[d] = a[d];
                    if (this._initted || f)
                        if (b) this._initted = !1, f && this.render(0, !0, !0);
                        else if (this._gc && this._enabled(!0, !1), this._notifyPluginsOfEnabled && this._firstPT && c._onPluginEvent("_onDisable", this), this._time / this._duration > .998) {
                        var g = this._totalTime;
                        this.render(0, !0, !1), this._initted = !1, this.render(g, !0, !1)
                    } else if (this._initted = !1, this._init(), this._time > 0 || f)
                        for (var h, i = 1 / (1 - e), j = this._firstPT; j;) h = j.s + j.c, j.c *= i, j.s = h - j.c, j = j._next;
                    return this
                }, k.render = function(a, b, c) {
                    this._initted || 0 === this._duration && this.vars.repeat && this.invalidate();
                    var d, e, f, i, j, k, l, m, n = this._dirty ? this.totalDuration() : this._totalDuration,
                        o = this._time,
                        p = this._totalTime,
                        q = this._cycle,
                        r = this._duration,
                        s = this._rawPrevTime;
                    if (a >= n - 1e-7 ? (this._totalTime = n, this._cycle = this._repeat, this._yoyo && 0 !== (1 & this._cycle) ? (this._time = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0) : (this._time = r, this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1), this._reversed || (d = !0, e = "onComplete", c = c || this._timeline.autoRemoveChildren), 0 === r && (this._initted || !this.vars.lazy || c) && (this._startTime === this._timeline._duration && (a = 0), (0 > s || 0 >= a && a >= -1e-7 || s === g && "isPause" !== this.data) && s !== a && (c = !0, s > g && (e = "onReverseComplete")), this._rawPrevTime = m = !b || a || s === a ? a : g)) : 1e-7 > a ? (this._totalTime = this._time = this._cycle = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0, (0 !== p || 0 === r && s > 0) && (e = "onReverseComplete", d = this._reversed), 0 > a && (this._active = !1, 0 === r && (this._initted || !this.vars.lazy || c) && (s >= 0 && (c = !0), this._rawPrevTime = m = !b || a || s === a ? a : g)), this._initted || (c = !0)) : (this._totalTime = this._time = a, 0 !== this._repeat && (i = r + this._repeatDelay, this._cycle = this._totalTime / i >> 0, 0 !== this._cycle && this._cycle === this._totalTime / i && a >= p && this._cycle--, this._time = this._totalTime - this._cycle * i, this._yoyo && 0 !== (1 & this._cycle) && (this._time = r - this._time), this._time > r ? this._time = r : this._time < 0 && (this._time = 0)), this._easeType ? (j = this._time / r, k = this._easeType, l = this._easePower, (1 === k || 3 === k && j >= .5) && (j = 1 - j), 3 === k && (j *= 2), 1 === l ? j *= j : 2 === l ? j *= j * j : 3 === l ? j *= j * j * j : 4 === l && (j *= j * j * j * j), 1 === k ? this.ratio = 1 - j : 2 === k ? this.ratio = j : this._time / r < .5 ? this.ratio = j / 2 : this.ratio = 1 - j / 2) : this.ratio = this._ease.getRatio(this._time / r)), o === this._time && !c && q === this._cycle) return void(p !== this._totalTime && this._onUpdate && (b || this._callback("onUpdate")));
                    if (!this._initted) {
                        if (this._init(), !this._initted || this._gc) return;
                        if (!c && this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration)) return this._time = o, this._totalTime = p, this._rawPrevTime = s, this._cycle = q, h.lazyTweens.push(this), void(this._lazy = [a, b]);
                        this._time && !d ? this.ratio = this._ease.getRatio(this._time / r) : d && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
                    }
                    for (this._lazy !== !1 && (this._lazy = !1), this._active || !this._paused && this._time !== o && a >= 0 && (this._active = !0), 0 === p && (2 === this._initted && a > 0 && this._init(), this._startAt && (a >= 0 ? this._startAt.render(a, b, c) : e || (e = "_dummyGS")), this.vars.onStart && (0 !== this._totalTime || 0 === r) && (b || this._callback("onStart"))), f = this._firstPT; f;) f.f ? f.t[f.p](f.c * this.ratio + f.s) : f.t[f.p] = f.c * this.ratio + f.s, f = f._next;
                    this._onUpdate && (0 > a && this._startAt && this._startTime && this._startAt.render(a, b, c), b || (this._totalTime !== p || e) && this._callback("onUpdate")), this._cycle !== q && (b || this._gc || this.vars.onRepeat && this._callback("onRepeat")), e && (!this._gc || c) && (0 > a && this._startAt && !this._onUpdate && this._startTime && this._startAt.render(a, b, c), d && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !b && this.vars[e] && this._callback(e), 0 === r && this._rawPrevTime === g && m !== g && (this._rawPrevTime = 0))
                }, f.to = function(a, b, c) {
                    return new f(a, b, c)
                }, f.from = function(a, b, c) {
                    return c.runBackwards = !0, c.immediateRender = 0 != c.immediateRender, new f(a, b, c)
                }, f.fromTo = function(a, b, c, d) {
                    return d.startAt = c, d.immediateRender = 0 != d.immediateRender && 0 != c.immediateRender, new f(a, b, d)
                }, f.staggerTo = f.allTo = function(a, b, g, h, k, m, n) {
                    h = h || 0;
                    var o, p, q, r, s = 0,
                        t = [],
                        u = function() {
                            g.onComplete && g.onComplete.apply(g.onCompleteScope || this, arguments), k.apply(n || g.callbackScope || this, m || l)
                        },
                        v = g.cycle,
                        w = g.startAt && g.startAt.cycle;
                    for (j(a) || ("string" == typeof a && (a = c.selector(a) || a), i(a) && (a = d(a))), a = a || [], 0 > h && (a = d(a), a.reverse(), h *= -1), o = a.length - 1, q = 0; o >= q; q++) {
                        p = {};
                        for (r in g) p[r] = g[r];
                        if (v && (e(p, a, q), null != p.duration && (b = p.duration, delete p.duration)), w) {
                            w = p.startAt = {};
                            for (r in g.startAt) w[r] = g.startAt[r];
                            e(p.startAt, a, q)
                        }
                        p.delay = s + (p.delay || 0), q === o && k && (p.onComplete = u), t[q] = new f(a[q], b, p), s += h
                    }
                    return t
                }, f.staggerFrom = f.allFrom = function(a, b, c, d, e, g, h) {
                    return c.runBackwards = !0, c.immediateRender = 0 != c.immediateRender, f.staggerTo(a, b, c, d, e, g, h)
                }, f.staggerFromTo = f.allFromTo = function(a, b, c, d, e, g, h, i) {
                    return d.startAt = c, d.immediateRender = 0 != d.immediateRender && 0 != c.immediateRender, f.staggerTo(a, b, d, e, g, h, i)
                }, f.delayedCall = function(a, b, c, d, e) {
                    return new f(b, 0, {
                        delay: a,
                        onComplete: b,
                        onCompleteParams: c,
                        callbackScope: d,
                        onReverseComplete: b,
                        onReverseCompleteParams: c,
                        immediateRender: !1,
                        useFrames: e,
                        overwrite: 0
                    })
                }, f.set = function(a, b) {
                    return new f(a, 0, b)
                }, f.isTweening = function(a) {
                    return c.getTweensOf(a, !0).length > 0
                };
                var m = function(a, b) {
                        for (var d = [], e = 0, f = a._first; f;) f instanceof c ? d[e++] = f : (b && (d[e++] = f), d = d.concat(m(f, b)), e = d.length), f = f._next;
                        return d
                    },
                    n = f.getAllTweens = function(b) {
                        return m(a._rootTimeline, b).concat(m(a._rootFramesTimeline, b))
                    };
                f.killAll = function(a, c, d, e) {
                    null == c && (c = !0), null == d && (d = !0);
                    var f, g, h, i = n(0 != e),
                        j = i.length,
                        k = c && d && e;
                    for (h = 0; j > h; h++) g = i[h], (k || g instanceof b || (f = g.target === g.vars.onComplete) && d || c && !f) && (a ? g.totalTime(g._reversed ? 0 : g.totalDuration()) : g._enabled(!1, !1))
                }, f.killChildTweensOf = function(a, b) {
                    if (null != a) {
                        var e, g, k, l, m, n = h.tweenLookup;
                        if ("string" == typeof a && (a = c.selector(a) || a), i(a) && (a = d(a)), j(a))
                            for (l = a.length; --l > -1;) f.killChildTweensOf(a[l], b);
                        else {
                            e = [];
                            for (k in n)
                                for (g = n[k].target.parentNode; g;) g === a && (e = e.concat(n[k].tweens)), g = g.parentNode;
                            for (m = e.length, l = 0; m > l; l++) b && e[l].totalTime(e[l].totalDuration()), e[l]._enabled(!1, !1)
                        }
                    }
                };
                var o = function(a, c, d, e) {
                    c = c !== !1, d = d !== !1, e = e !== !1;
                    for (var f, g, h = n(e), i = c && d && e, j = h.length; --j > -1;) g = h[j], (i || g instanceof b || (f = g.target === g.vars.onComplete) && d || c && !f) && g.paused(a)
                };
                return f.pauseAll = function(a, b, c) {
                    o(!0, a, b, c)
                }, f.resumeAll = function(a, b, c) {
                    o(!1, a, b, c)
                }, f.globalTimeScale = function(b) {
                    var d = a._rootTimeline,
                        e = c.ticker.time;
                    return arguments.length ? (b = b || g, d._startTime = e - (e - d._startTime) * d._timeScale / b, d = a._rootFramesTimeline, e = c.ticker.frame, d._startTime = e - (e - d._startTime) * d._timeScale / b, d._timeScale = a._rootTimeline._timeScale = b, b) : d._timeScale
                }, k.progress = function(a, b) {
                    return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - a : a) + this._cycle * (this._duration + this._repeatDelay), b) : this._time / this.duration()
                }, k.totalProgress = function(a, b) {
                    return arguments.length ? this.totalTime(this.totalDuration() * a, b) : this._totalTime / this.totalDuration()
                }, k.time = function(a, b) {
                    return arguments.length ? (this._dirty && this.totalDuration(), a > this._duration && (a = this._duration), this._yoyo && 0 !== (1 & this._cycle) ? a = this._duration - a + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (a += this._cycle * (this._duration + this._repeatDelay)), this.totalTime(a, b)) : this._time
                }, k.duration = function(b) {
                    return arguments.length ? a.prototype.duration.call(this, b) : this._duration
                }, k.totalDuration = function(a) {
                    return arguments.length ? -1 === this._repeat ? this : this.duration((a - this._repeat * this._repeatDelay) / (this._repeat + 1)) : (this._dirty && (this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat, this._dirty = !1), this._totalDuration)
                }, k.repeat = function(a) {
                    return arguments.length ? (this._repeat = a, this._uncache(!0)) : this._repeat
                }, k.repeatDelay = function(a) {
                    return arguments.length ? (this._repeatDelay = a, this._uncache(!0)) : this._repeatDelay
                }, k.yoyo = function(a) {
                    return arguments.length ? (this._yoyo = a, this) : this._yoyo
                }, f
            }, !0), _gsScope._gsDefine("TimelineLite", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function(a, b, c) {
                var d = function(a) {
                        b.call(this, a), this._labels = {}, this.autoRemoveChildren = this.vars.autoRemoveChildren === !0, this.smoothChildTiming = this.vars.smoothChildTiming === !0, this._sortChildren = !0, this._onUpdate = this.vars.onUpdate;
                        var c, d, e = this.vars;
                        for (d in e) c = e[d], i(c) && -1 !== c.join("").indexOf("{self}") && (e[d] = this._swapSelfInParams(c));
                        i(e.tweens) && this.add(e.tweens, 0, e.align, e.stagger)
                    },
                    e = 1e-10,
                    f = c._internals,
                    g = d._internals = {},
                    h = f.isSelector,
                    i = f.isArray,
                    j = f.lazyTweens,
                    k = f.lazyRender,
                    l = _gsScope._gsDefine.globals,
                    m = function(a) {
                        var b, c = {};
                        for (b in a) c[b] = a[b];
                        return c
                    },
                    n = function(a, b, c) {
                        var d, e, f = a.cycle;
                        for (d in f) e = f[d], a[d] = "function" == typeof e ? e.call(b[c], c) : e[c % e.length];
                        delete a.cycle
                    },
                    o = g.pauseCallback = function() {},
                    p = function(a) {
                        var b, c = [],
                            d = a.length;
                        for (b = 0; b !== d; c.push(a[b++]));
                        return c
                    },
                    q = d.prototype = new b;
                return d.version = "1.19.0", q.constructor = d, q.kill()._gc = q._forcingPlayhead = q._hasPause = !1, q.to = function(a, b, d, e) {
                    var f = d.repeat && l.TweenMax || c;
                    return b ? this.add(new f(a, b, d), e) : this.set(a, d, e)
                }, q.from = function(a, b, d, e) {
                    return this.add((d.repeat && l.TweenMax || c).from(a, b, d), e)
                }, q.fromTo = function(a, b, d, e, f) {
                    var g = e.repeat && l.TweenMax || c;
                    return b ? this.add(g.fromTo(a, b, d, e), f) : this.set(a, e, f)
                }, q.staggerTo = function(a, b, e, f, g, i, j, k) {
                    var l, o, q = new d({
                            onComplete: i,
                            onCompleteParams: j,
                            callbackScope: k,
                            smoothChildTiming: this.smoothChildTiming
                        }),
                        r = e.cycle;
                    for ("string" == typeof a && (a = c.selector(a) || a), a = a || [], h(a) && (a = p(a)), f = f || 0, 0 > f && (a = p(a), a.reverse(), f *= -1), o = 0; o < a.length; o++) l = m(e), l.startAt && (l.startAt = m(l.startAt), l.startAt.cycle && n(l.startAt, a, o)), r && (n(l, a, o), null != l.duration && (b = l.duration, delete l.duration)), q.to(a[o], b, l, o * f);
                    return this.add(q, g)
                }, q.staggerFrom = function(a, b, c, d, e, f, g, h) {
                    return c.immediateRender = 0 != c.immediateRender, c.runBackwards = !0, this.staggerTo(a, b, c, d, e, f, g, h)
                }, q.staggerFromTo = function(a, b, c, d, e, f, g, h, i) {
                    return d.startAt = c, d.immediateRender = 0 != d.immediateRender && 0 != c.immediateRender, this.staggerTo(a, b, d, e, f, g, h, i)
                }, q.call = function(a, b, d, e) {
                    return this.add(c.delayedCall(0, a, b, d), e)
                }, q.set = function(a, b, d) {
                    return d = this._parseTimeOrLabel(d, 0, !0), null == b.immediateRender && (b.immediateRender = d === this._time && !this._paused), this.add(new c(a, 0, b), d)
                }, d.exportRoot = function(a, b) {
                    a = a || {}, null == a.smoothChildTiming && (a.smoothChildTiming = !0);
                    var e, f, g = new d(a),
                        h = g._timeline;
                    for (null == b && (b = !0), h._remove(g, !0), g._startTime = 0, g._rawPrevTime = g._time = g._totalTime = h._time, e = h._first; e;) f = e._next, b && e instanceof c && e.target === e.vars.onComplete || g.add(e, e._startTime - e._delay), e = f;
                    return h.add(g, 0), g
                }, q.add = function(e, f, g, h) {
                    var j, k, l, m, n, o;
                    if ("number" != typeof f && (f = this._parseTimeOrLabel(f, 0, !0, e)), !(e instanceof a)) {
                        if (e instanceof Array || e && e.push && i(e)) {
                            for (g = g || "normal", h = h || 0, j = f, k = e.length, l = 0; k > l; l++) i(m = e[l]) && (m = new d({
                                tweens: m
                            })), this.add(m, j), "string" != typeof m && "function" != typeof m && ("sequence" === g ? j = m._startTime + m.totalDuration() / m._timeScale : "start" === g && (m._startTime -= m.delay())), j += h;
                            return this._uncache(!0)
                        }
                        if ("string" == typeof e) return this.addLabel(e, f);
                        if ("function" != typeof e) throw "Cannot add " + e + " into the timeline; it is not a tween, timeline, function, or string.";
                        e = c.delayedCall(0, e)
                    }
                    if (b.prototype.add.call(this, e, f), (this._gc || this._time === this._duration) && !this._paused && this._duration < this.duration())
                        for (n = this, o = n.rawTime() > e._startTime; n._timeline;) o && n._timeline.smoothChildTiming ? n.totalTime(n._totalTime, !0) : n._gc && n._enabled(!0, !1), n = n._timeline;
                    return this
                }, q.remove = function(b) {
                    if (b instanceof a) {
                        this._remove(b, !1);
                        var c = b._timeline = b.vars.useFrames ? a._rootFramesTimeline : a._rootTimeline;
                        return b._startTime = (b._paused ? b._pauseTime : c._time) - (b._reversed ? b.totalDuration() - b._totalTime : b._totalTime) / b._timeScale, this
                    }
                    if (b instanceof Array || b && b.push && i(b)) {
                        for (var d = b.length; --d > -1;) this.remove(b[d]);
                        return this
                    }
                    return "string" == typeof b ? this.removeLabel(b) : this.kill(null, b)
                }, q._remove = function(a, c) {
                    b.prototype._remove.call(this, a, c);
                    var d = this._last;
                    return d ? this._time > d._startTime + d._totalDuration / d._timeScale && (this._time = this.duration(), this._totalTime = this._totalDuration) : this._time = this._totalTime = this._duration = this._totalDuration = 0, this
                }, q.append = function(a, b) {
                    return this.add(a, this._parseTimeOrLabel(null, b, !0, a))
                }, q.insert = q.insertMultiple = function(a, b, c, d) {
                    return this.add(a, b || 0, c, d)
                }, q.appendMultiple = function(a, b, c, d) {
                    return this.add(a, this._parseTimeOrLabel(null, b, !0, a), c, d)
                }, q.addLabel = function(a, b) {
                    return this._labels[a] = this._parseTimeOrLabel(b), this
                }, q.addPause = function(a, b, d, e) {
                    var f = c.delayedCall(0, o, d, e || this);
                    return f.vars.onComplete = f.vars.onReverseComplete = b, f.data = "isPause", this._hasPause = !0, this.add(f, a)
                }, q.removeLabel = function(a) {
                    return delete this._labels[a], this
                }, q.getLabelTime = function(a) {
                    return null != this._labels[a] ? this._labels[a] : -1
                }, q._parseTimeOrLabel = function(b, c, d, e) {
                    var f;
                    if (e instanceof a && e.timeline === this) this.remove(e);
                    else if (e && (e instanceof Array || e.push && i(e)))
                        for (f = e.length; --f > -1;) e[f] instanceof a && e[f].timeline === this && this.remove(e[f]);
                    if ("string" == typeof c) return this._parseTimeOrLabel(c, d && "number" == typeof b && null == this._labels[c] ? b - this.duration() : 0, d);
                    if (c = c || 0, "string" != typeof b || !isNaN(b) && null == this._labels[b]) null == b && (b = this.duration());
                    else {
                        if (f = b.indexOf("="), -1 === f) return null == this._labels[b] ? d ? this._labels[b] = this.duration() + c : c : this._labels[b] + c;
                        c = parseInt(b.charAt(f - 1) + "1", 10) * Number(b.substr(f + 1)), b = f > 1 ? this._parseTimeOrLabel(b.substr(0, f - 1), 0, d) : this.duration()
                    }
                    return Number(b) + c
                }, q.seek = function(a, b) {
                    return this.totalTime("number" == typeof a ? a : this._parseTimeOrLabel(a), b !== !1)
                }, q.stop = function() {
                    return this.paused(!0)
                }, q.gotoAndPlay = function(a, b) {
                    return this.play(a, b)
                }, q.gotoAndStop = function(a, b) {
                    return this.pause(a, b)
                }, q.render = function(a, b, c) {
                    this._gc && this._enabled(!0, !1);
                    var d, f, g, h, i, l, m, n = this._dirty ? this.totalDuration() : this._totalDuration,
                        o = this._time,
                        p = this._startTime,
                        q = this._timeScale,
                        r = this._paused;
                    if (a >= n - 1e-7) this._totalTime = this._time = n, this._reversed || this._hasPausedChild() || (f = !0, h = "onComplete", i = !!this._timeline.autoRemoveChildren, 0 === this._duration && (0 >= a && a >= -1e-7 || this._rawPrevTime < 0 || this._rawPrevTime === e) && this._rawPrevTime !== a && this._first && (i = !0, this._rawPrevTime > e && (h = "onReverseComplete"))), this._rawPrevTime = this._duration || !b || a || this._rawPrevTime === a ? a : e, a = n + 1e-4;
                    else if (1e-7 > a)
                        if (this._totalTime = this._time = 0, (0 !== o || 0 === this._duration && this._rawPrevTime !== e && (this._rawPrevTime > 0 || 0 > a && this._rawPrevTime >= 0)) && (h = "onReverseComplete", f = this._reversed), 0 > a) this._active = !1, this._timeline.autoRemoveChildren && this._reversed ? (i = f = !0, h = "onReverseComplete") : this._rawPrevTime >= 0 && this._first && (i = !0), this._rawPrevTime = a;
                        else {
                            if (this._rawPrevTime = this._duration || !b || a || this._rawPrevTime === a ? a : e, 0 === a && f)
                                for (d = this._first; d && 0 === d._startTime;) d._duration || (f = !1), d = d._next;
                            a = 0, this._initted || (i = !0)
                        } else {
                        if (this._hasPause && !this._forcingPlayhead && !b) {
                            if (a >= o)
                                for (d = this._first; d && d._startTime <= a && !l;) d._duration || "isPause" !== d.data || d.ratio || 0 === d._startTime && 0 === this._rawPrevTime || (l = d), d = d._next;
                            else
                                for (d = this._last; d && d._startTime >= a && !l;) d._duration || "isPause" === d.data && d._rawPrevTime > 0 && (l = d), d = d._prev;
                            l && (this._time = a = l._startTime, this._totalTime = a + this._cycle * (this._totalDuration + this._repeatDelay))
                        }
                        this._totalTime = this._time = this._rawPrevTime = a
                    }
                    if (this._time !== o && this._first || c || i || l) {
                        if (this._initted || (this._initted = !0), this._active || !this._paused && this._time !== o && a > 0 && (this._active = !0), 0 === o && this.vars.onStart && (0 === this._time && this._duration || b || this._callback("onStart")), m = this._time, m >= o)
                            for (d = this._first; d && (g = d._next, m === this._time && (!this._paused || r));)(d._active || d._startTime <= m && !d._paused && !d._gc) && (l === d && this.pause(), d._reversed ? d.render((d._dirty ? d.totalDuration() : d._totalDuration) - (a - d._startTime) * d._timeScale, b, c) : d.render((a - d._startTime) * d._timeScale, b, c)), d = g;
                        else
                            for (d = this._last; d && (g = d._prev, m === this._time && (!this._paused || r));) {
                                if (d._active || d._startTime <= o && !d._paused && !d._gc) {
                                    if (l === d) {
                                        for (l = d._prev; l && l.endTime() > this._time;) l.render(l._reversed ? l.totalDuration() - (a - l._startTime) * l._timeScale : (a - l._startTime) * l._timeScale, b, c), l = l._prev;
                                        l = null, this.pause()
                                    }
                                    d._reversed ? d.render((d._dirty ? d.totalDuration() : d._totalDuration) - (a - d._startTime) * d._timeScale, b, c) : d.render((a - d._startTime) * d._timeScale, b, c)
                                }
                                d = g
                            }
                        this._onUpdate && (b || (j.length && k(), this._callback("onUpdate"))), h && (this._gc || (p === this._startTime || q !== this._timeScale) && (0 === this._time || n >= this.totalDuration()) && (f && (j.length && k(), this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !b && this.vars[h] && this._callback(h)))
                    }
                }, q._hasPausedChild = function() {
                    for (var a = this._first; a;) {
                        if (a._paused || a instanceof d && a._hasPausedChild()) return !0;
                        a = a._next
                    }
                    return !1
                }, q.getChildren = function(a, b, d, e) {
                    e = e || -9999999999;
                    for (var f = [], g = this._first, h = 0; g;) g._startTime < e || (g instanceof c ? b !== !1 && (f[h++] = g) : (d !== !1 && (f[h++] = g), a !== !1 && (f = f.concat(g.getChildren(!0, b, d)), h = f.length))), g = g._next;
                    return f
                }, q.getTweensOf = function(a, b) {
                    var d, e, f = this._gc,
                        g = [],
                        h = 0;
                    for (f && this._enabled(!0, !0), d = c.getTweensOf(a), e = d.length; --e > -1;)(d[e].timeline === this || b && this._contains(d[e])) && (g[h++] = d[e]);
                    return f && this._enabled(!1, !0), g
                }, q.recent = function() {
                    return this._recent
                }, q._contains = function(a) {
                    for (var b = a.timeline; b;) {
                        if (b === this) return !0;
                        b = b.timeline
                    }
                    return !1
                }, q.shiftChildren = function(a, b, c) {
                    c = c || 0;
                    for (var d, e = this._first, f = this._labels; e;) e._startTime >= c && (e._startTime += a), e = e._next;
                    if (b)
                        for (d in f) f[d] >= c && (f[d] += a);
                    return this._uncache(!0)
                }, q._kill = function(a, b) {
                    if (!a && !b) return this._enabled(!1, !1);
                    for (var c = b ? this.getTweensOf(b) : this.getChildren(!0, !0, !1), d = c.length, e = !1; --d > -1;) c[d]._kill(a, b) && (e = !0);
                    return e
                }, q.clear = function(a) {
                    var b = this.getChildren(!1, !0, !0),
                        c = b.length;
                    for (this._time = this._totalTime = 0; --c > -1;) b[c]._enabled(!1, !1);
                    return a !== !1 && (this._labels = {}), this._uncache(!0)
                }, q.invalidate = function() {
                    for (var b = this._first; b;) b.invalidate(), b = b._next;
                    return a.prototype.invalidate.call(this)
                }, q._enabled = function(a, c) {
                    if (a === this._gc)
                        for (var d = this._first; d;) d._enabled(a, !0), d = d._next;
                    return b.prototype._enabled.call(this, a, c)
                }, q.totalTime = function(b, c, d) {
                    this._forcingPlayhead = !0;
                    var e = a.prototype.totalTime.apply(this, arguments);
                    return this._forcingPlayhead = !1, e
                }, q.duration = function(a) {
                    return arguments.length ? (0 !== this.duration() && 0 !== a && this.timeScale(this._duration / a), this) : (this._dirty && this.totalDuration(), this._duration)
                }, q.totalDuration = function(a) {
                    if (!arguments.length) {
                        if (this._dirty) {
                            for (var b, c, d = 0, e = this._last, f = 999999999999; e;) b = e._prev, e._dirty && e.totalDuration(), e._startTime > f && this._sortChildren && !e._paused ? this.add(e, e._startTime - e._delay) : f = e._startTime, e._startTime < 0 && !e._paused && (d -= e._startTime, this._timeline.smoothChildTiming && (this._startTime += e._startTime / this._timeScale), this.shiftChildren(-e._startTime, !1, -9999999999), f = 0), c = e._startTime + e._totalDuration / e._timeScale, c > d && (d = c), e = b;
                            this._duration = this._totalDuration = d, this._dirty = !1;
                        }
                        return this._totalDuration
                    }
                    return a && this.totalDuration() ? this.timeScale(this._totalDuration / a) : this
                }, q.paused = function(b) {
                    if (!b)
                        for (var c = this._first, d = this._time; c;) c._startTime === d && "isPause" === c.data && (c._rawPrevTime = 0), c = c._next;
                    return a.prototype.paused.apply(this, arguments)
                }, q.usesFrames = function() {
                    for (var b = this._timeline; b._timeline;) b = b._timeline;
                    return b === a._rootFramesTimeline
                }, q.rawTime = function() {
                    return this._paused ? this._totalTime : (this._timeline.rawTime() - this._startTime) * this._timeScale
                }, d
            }, !0), _gsScope._gsDefine("TimelineMax", ["TimelineLite", "TweenLite", "easing.Ease"], function(a, b, c) {
                var d = function(b) {
                        a.call(this, b), this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._cycle = 0, this._yoyo = this.vars.yoyo === !0, this._dirty = !0
                    },
                    e = 1e-10,
                    f = b._internals,
                    g = f.lazyTweens,
                    h = f.lazyRender,
                    i = _gsScope._gsDefine.globals,
                    j = new c(null, null, 1, 0),
                    k = d.prototype = new a;
                return k.constructor = d, k.kill()._gc = !1, d.version = "1.19.0", k.invalidate = function() {
                    return this._yoyo = this.vars.yoyo === !0, this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._uncache(!0), a.prototype.invalidate.call(this)
                }, k.addCallback = function(a, c, d, e) {
                    return this.add(b.delayedCall(0, a, d, e), c)
                }, k.removeCallback = function(a, b) {
                    if (a)
                        if (null == b) this._kill(null, a);
                        else
                            for (var c = this.getTweensOf(a, !1), d = c.length, e = this._parseTimeOrLabel(b); --d > -1;) c[d]._startTime === e && c[d]._enabled(!1, !1);
                    return this
                }, k.removePause = function(b) {
                    return this.removeCallback(a._internals.pauseCallback, b)
                }, k.tweenTo = function(a, c) {
                    c = c || {};
                    var d, e, f, g = {
                            ease: j,
                            useFrames: this.usesFrames(),
                            immediateRender: !1
                        },
                        h = c.repeat && i.TweenMax || b;
                    for (e in c) g[e] = c[e];
                    return g.time = this._parseTimeOrLabel(a), d = Math.abs(Number(g.time) - this._time) / this._timeScale || .001, f = new h(this, d, g), g.onStart = function() {
                        f.target.paused(!0), f.vars.time !== f.target.time() && d === f.duration() && f.duration(Math.abs(f.vars.time - f.target.time()) / f.target._timeScale), c.onStart && f._callback("onStart")
                    }, f
                }, k.tweenFromTo = function(a, b, c) {
                    c = c || {}, a = this._parseTimeOrLabel(a), c.startAt = {
                        onComplete: this.seek,
                        onCompleteParams: [a],
                        callbackScope: this
                    }, c.immediateRender = c.immediateRender !== !1;
                    var d = this.tweenTo(b, c);
                    return d.duration(Math.abs(d.vars.time - a) / this._timeScale || .001)
                }, k.render = function(a, b, c) {
                    this._gc && this._enabled(!0, !1);
                    var d, f, i, j, k, l, m, n, o = this._dirty ? this.totalDuration() : this._totalDuration,
                        p = this._duration,
                        q = this._time,
                        r = this._totalTime,
                        s = this._startTime,
                        t = this._timeScale,
                        u = this._rawPrevTime,
                        v = this._paused,
                        w = this._cycle;
                    if (a >= o - 1e-7) this._locked || (this._totalTime = o, this._cycle = this._repeat), this._reversed || this._hasPausedChild() || (f = !0, j = "onComplete", k = !!this._timeline.autoRemoveChildren, 0 === this._duration && (0 >= a && a >= -1e-7 || 0 > u || u === e) && u !== a && this._first && (k = !0, u > e && (j = "onReverseComplete"))), this._rawPrevTime = this._duration || !b || a || this._rawPrevTime === a ? a : e, this._yoyo && 0 !== (1 & this._cycle) ? this._time = a = 0 : (this._time = p, a = p + 1e-4);
                    else if (1e-7 > a)
                        if (this._locked || (this._totalTime = this._cycle = 0), this._time = 0, (0 !== q || 0 === p && u !== e && (u > 0 || 0 > a && u >= 0) && !this._locked) && (j = "onReverseComplete", f = this._reversed), 0 > a) this._active = !1, this._timeline.autoRemoveChildren && this._reversed ? (k = f = !0, j = "onReverseComplete") : u >= 0 && this._first && (k = !0), this._rawPrevTime = a;
                        else {
                            if (this._rawPrevTime = p || !b || a || this._rawPrevTime === a ? a : e, 0 === a && f)
                                for (d = this._first; d && 0 === d._startTime;) d._duration || (f = !1), d = d._next;
                            a = 0, this._initted || (k = !0)
                        } else if (0 === p && 0 > u && (k = !0), this._time = this._rawPrevTime = a, this._locked || (this._totalTime = a, 0 !== this._repeat && (l = p + this._repeatDelay, this._cycle = this._totalTime / l >> 0, 0 !== this._cycle && this._cycle === this._totalTime / l && a >= r && this._cycle--, this._time = this._totalTime - this._cycle * l, this._yoyo && 0 !== (1 & this._cycle) && (this._time = p - this._time), this._time > p ? (this._time = p, a = p + 1e-4) : this._time < 0 ? this._time = a = 0 : a = this._time)), this._hasPause && !this._forcingPlayhead && !b) {
                        if (a = this._time, a >= q)
                            for (d = this._first; d && d._startTime <= a && !m;) d._duration || "isPause" !== d.data || d.ratio || 0 === d._startTime && 0 === this._rawPrevTime || (m = d), d = d._next;
                        else
                            for (d = this._last; d && d._startTime >= a && !m;) d._duration || "isPause" === d.data && d._rawPrevTime > 0 && (m = d), d = d._prev;
                        m && (this._time = a = m._startTime, this._totalTime = a + this._cycle * (this._totalDuration + this._repeatDelay))
                    }
                    if (this._cycle !== w && !this._locked) {
                        var x = this._yoyo && 0 !== (1 & w),
                            y = x === (this._yoyo && 0 !== (1 & this._cycle)),
                            z = this._totalTime,
                            A = this._cycle,
                            B = this._rawPrevTime,
                            C = this._time;
                        if (this._totalTime = w * p, this._cycle < w ? x = !x : this._totalTime += p, this._time = q, this._rawPrevTime = 0 === p ? u - 1e-4 : u, this._cycle = w, this._locked = !0, q = x ? 0 : p, this.render(q, b, 0 === p), b || this._gc || this.vars.onRepeat && this._callback("onRepeat"), q !== this._time) return;
                        if (y && (q = x ? p + 1e-4 : -1e-4, this.render(q, !0, !1)), this._locked = !1, this._paused && !v) return;
                        this._time = C, this._totalTime = z, this._cycle = A, this._rawPrevTime = B
                    }
                    if (!(this._time !== q && this._first || c || k || m)) return void(r !== this._totalTime && this._onUpdate && (b || this._callback("onUpdate")));
                    if (this._initted || (this._initted = !0), this._active || !this._paused && this._totalTime !== r && a > 0 && (this._active = !0), 0 === r && this.vars.onStart && (0 === this._totalTime && this._totalDuration || b || this._callback("onStart")), n = this._time, n >= q)
                        for (d = this._first; d && (i = d._next, n === this._time && (!this._paused || v));)(d._active || d._startTime <= this._time && !d._paused && !d._gc) && (m === d && this.pause(), d._reversed ? d.render((d._dirty ? d.totalDuration() : d._totalDuration) - (a - d._startTime) * d._timeScale, b, c) : d.render((a - d._startTime) * d._timeScale, b, c)), d = i;
                    else
                        for (d = this._last; d && (i = d._prev, n === this._time && (!this._paused || v));) {
                            if (d._active || d._startTime <= q && !d._paused && !d._gc) {
                                if (m === d) {
                                    for (m = d._prev; m && m.endTime() > this._time;) m.render(m._reversed ? m.totalDuration() - (a - m._startTime) * m._timeScale : (a - m._startTime) * m._timeScale, b, c), m = m._prev;
                                    m = null, this.pause()
                                }
                                d._reversed ? d.render((d._dirty ? d.totalDuration() : d._totalDuration) - (a - d._startTime) * d._timeScale, b, c) : d.render((a - d._startTime) * d._timeScale, b, c)
                            }
                            d = i
                        }
                    this._onUpdate && (b || (g.length && h(), this._callback("onUpdate"))), j && (this._locked || this._gc || (s === this._startTime || t !== this._timeScale) && (0 === this._time || o >= this.totalDuration()) && (f && (g.length && h(), this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !b && this.vars[j] && this._callback(j)))
                }, k.getActive = function(a, b, c) {
                    null == a && (a = !0), null == b && (b = !0), null == c && (c = !1);
                    var d, e, f = [],
                        g = this.getChildren(a, b, c),
                        h = 0,
                        i = g.length;
                    for (d = 0; i > d; d++) e = g[d], e.isActive() && (f[h++] = e);
                    return f
                }, k.getLabelAfter = function(a) {
                    a || 0 !== a && (a = this._time);
                    var b, c = this.getLabelsArray(),
                        d = c.length;
                    for (b = 0; d > b; b++)
                        if (c[b].time > a) return c[b].name;
                    return null
                }, k.getLabelBefore = function(a) {
                    null == a && (a = this._time);
                    for (var b = this.getLabelsArray(), c = b.length; --c > -1;)
                        if (b[c].time < a) return b[c].name;
                    return null
                }, k.getLabelsArray = function() {
                    var a, b = [],
                        c = 0;
                    for (a in this._labels) b[c++] = {
                        time: this._labels[a],
                        name: a
                    };
                    return b.sort(function(a, b) {
                        return a.time - b.time
                    }), b
                }, k.progress = function(a, b) {
                    return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - a : a) + this._cycle * (this._duration + this._repeatDelay), b) : this._time / this.duration()
                }, k.totalProgress = function(a, b) {
                    return arguments.length ? this.totalTime(this.totalDuration() * a, b) : this._totalTime / this.totalDuration()
                }, k.totalDuration = function(b) {
                    return arguments.length ? -1 !== this._repeat && b ? this.timeScale(this.totalDuration() / b) : this : (this._dirty && (a.prototype.totalDuration.call(this), this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat), this._totalDuration)
                }, k.time = function(a, b) {
                    return arguments.length ? (this._dirty && this.totalDuration(), a > this._duration && (a = this._duration), this._yoyo && 0 !== (1 & this._cycle) ? a = this._duration - a + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (a += this._cycle * (this._duration + this._repeatDelay)), this.totalTime(a, b)) : this._time
                }, k.repeat = function(a) {
                    return arguments.length ? (this._repeat = a, this._uncache(!0)) : this._repeat
                }, k.repeatDelay = function(a) {
                    return arguments.length ? (this._repeatDelay = a, this._uncache(!0)) : this._repeatDelay
                }, k.yoyo = function(a) {
                    return arguments.length ? (this._yoyo = a, this) : this._yoyo
                }, k.currentLabel = function(a) {
                    return arguments.length ? this.seek(a, !0) : this.getLabelBefore(this._time + 1e-8)
                }, d
            }, !0),
            function() {
                var a = 180 / Math.PI,
                    b = [],
                    c = [],
                    d = [],
                    e = {},
                    f = _gsScope._gsDefine.globals,
                    g = function(a, b, c, d) {
                        c === d && (c = d - (d - b) / 1e6), a === b && (b = a + (c - a) / 1e6), this.a = a, this.b = b, this.c = c, this.d = d, this.da = d - a, this.ca = c - a, this.ba = b - a
                    },
                    h = ",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",
                    i = function(a, b, c, d) {
                        var e = {
                                a: a
                            },
                            f = {},
                            g = {},
                            h = {
                                c: d
                            },
                            i = (a + b) / 2,
                            j = (b + c) / 2,
                            k = (c + d) / 2,
                            l = (i + j) / 2,
                            m = (j + k) / 2,
                            n = (m - l) / 8;
                        return e.b = i + (a - i) / 4, f.b = l + n, e.c = f.a = (e.b + f.b) / 2, f.c = g.a = (l + m) / 2, g.b = m - n, h.b = k + (d - k) / 4, g.c = h.a = (g.b + h.b) / 2, [e, f, g, h]
                    },
                    j = function(a, e, f, g, h) {
                        var j, k, l, m, n, o, p, q, r, s, t, u, v, w = a.length - 1,
                            x = 0,
                            y = a[0].a;
                        for (j = 0; w > j; j++) n = a[x], k = n.a, l = n.d, m = a[x + 1].d, h ? (t = b[j], u = c[j], v = (u + t) * e * .25 / (g ? .5 : d[j] || .5), o = l - (l - k) * (g ? .5 * e : 0 !== t ? v / t : 0), p = l + (m - l) * (g ? .5 * e : 0 !== u ? v / u : 0), q = l - (o + ((p - o) * (3 * t / (t + u) + .5) / 4 || 0))) : (o = l - (l - k) * e * .5, p = l + (m - l) * e * .5, q = l - (o + p) / 2), o += q, p += q, n.c = r = o, 0 !== j ? n.b = y : n.b = y = n.a + .6 * (n.c - n.a), n.da = l - k, n.ca = r - k, n.ba = y - k, f ? (s = i(k, y, r, l), a.splice(x, 1, s[0], s[1], s[2], s[3]), x += 4) : x++, y = p;
                        n = a[x], n.b = y, n.c = y + .4 * (n.d - y), n.da = n.d - n.a, n.ca = n.c - n.a, n.ba = y - n.a, f && (s = i(n.a, y, n.c, n.d), a.splice(x, 1, s[0], s[1], s[2], s[3]))
                    },
                    k = function(a, d, e, f) {
                        var h, i, j, k, l, m, n = [];
                        if (f)
                            for (a = [f].concat(a), i = a.length; --i > -1;) "string" == typeof(m = a[i][d]) && "=" === m.charAt(1) && (a[i][d] = f[d] + Number(m.charAt(0) + m.substr(2)));
                        if (h = a.length - 2, 0 > h) return n[0] = new g(a[0][d], 0, 0, a[-1 > h ? 0 : 1][d]), n;
                        for (i = 0; h > i; i++) j = a[i][d], k = a[i + 1][d], n[i] = new g(j, 0, 0, k), e && (l = a[i + 2][d], b[i] = (b[i] || 0) + (k - j) * (k - j), c[i] = (c[i] || 0) + (l - k) * (l - k));
                        return n[i] = new g(a[i][d], 0, 0, a[i + 1][d]), n
                    },
                    l = function(a, f, g, i, l, m) {
                        var n, o, p, q, r, s, t, u, v = {},
                            w = [],
                            x = m || a[0];
                        l = "string" == typeof l ? "," + l + "," : h, null == f && (f = 1);
                        for (o in a[0]) w.push(o);
                        if (a.length > 1) {
                            for (u = a[a.length - 1], t = !0, n = w.length; --n > -1;)
                                if (o = w[n], Math.abs(x[o] - u[o]) > .05) {
                                    t = !1;
                                    break
                                }
                            t && (a = a.concat(), m && a.unshift(m), a.push(a[1]), m = a[a.length - 3])
                        }
                        for (b.length = c.length = d.length = 0, n = w.length; --n > -1;) o = w[n], e[o] = -1 !== l.indexOf("," + o + ","), v[o] = k(a, o, e[o], m);
                        for (n = b.length; --n > -1;) b[n] = Math.sqrt(b[n]), c[n] = Math.sqrt(c[n]);
                        if (!i) {
                            for (n = w.length; --n > -1;)
                                if (e[o])
                                    for (p = v[w[n]], s = p.length - 1, q = 0; s > q; q++) r = p[q + 1].da / c[q] + p[q].da / b[q] || 0, d[q] = (d[q] || 0) + r * r;
                            for (n = d.length; --n > -1;) d[n] = Math.sqrt(d[n])
                        }
                        for (n = w.length, q = g ? 4 : 1; --n > -1;) o = w[n], p = v[o], j(p, f, g, i, e[o]), t && (p.splice(0, q), p.splice(p.length - q, q));
                        return v
                    },
                    m = function(a, b, c) {
                        b = b || "soft";
                        var d, e, f, h, i, j, k, l, m, n, o, p = {},
                            q = "cubic" === b ? 3 : 2,
                            r = "soft" === b,
                            s = [];
                        if (r && c && (a = [c].concat(a)), null == a || a.length < q + 1) throw "invalid Bezier data";
                        for (m in a[0]) s.push(m);
                        for (j = s.length; --j > -1;) {
                            for (m = s[j], p[m] = i = [], n = 0, l = a.length, k = 0; l > k; k++) d = null == c ? a[k][m] : "string" == typeof(o = a[k][m]) && "=" === o.charAt(1) ? c[m] + Number(o.charAt(0) + o.substr(2)) : Number(o), r && k > 1 && l - 1 > k && (i[n++] = (d + i[n - 2]) / 2), i[n++] = d;
                            for (l = n - q + 1, n = 0, k = 0; l > k; k += q) d = i[k], e = i[k + 1], f = i[k + 2], h = 2 === q ? 0 : i[k + 3], i[n++] = o = 3 === q ? new g(d, e, f, h) : new g(d, (2 * e + d) / 3, (2 * e + f) / 3, f);
                            i.length = n
                        }
                        return p
                    },
                    n = function(a, b, c) {
                        for (var d, e, f, g, h, i, j, k, l, m, n, o = 1 / c, p = a.length; --p > -1;)
                            for (m = a[p], f = m.a, g = m.d - f, h = m.c - f, i = m.b - f, d = e = 0, k = 1; c >= k; k++) j = o * k, l = 1 - j, d = e - (e = (j * j * g + 3 * l * (j * h + l * i)) * j), n = p * c + k - 1, b[n] = (b[n] || 0) + d * d
                    },
                    o = function(a, b) {
                        b = b >> 0 || 6;
                        var c, d, e, f, g = [],
                            h = [],
                            i = 0,
                            j = 0,
                            k = b - 1,
                            l = [],
                            m = [];
                        for (c in a) n(a[c], g, b);
                        for (e = g.length, d = 0; e > d; d++) i += Math.sqrt(g[d]), f = d % b, m[f] = i, f === k && (j += i, f = d / b >> 0, l[f] = m, h[f] = j, i = 0, m = []);
                        return {
                            length: j,
                            lengths: h,
                            segments: l
                        }
                    },
                    p = _gsScope._gsDefine.plugin({
                        propName: "bezier",
                        priority: -1,
                        version: "1.3.7",
                        API: 2,
                        global: !0,
                        init: function(a, b, c) {
                            this._target = a, b instanceof Array && (b = {
                                values: b
                            }), this._func = {}, this._mod = {}, this._props = [], this._timeRes = null == b.timeResolution ? 6 : parseInt(b.timeResolution, 10);
                            var d, e, f, g, h, i = b.values || [],
                                j = {},
                                k = i[0],
                                n = b.autoRotate || c.vars.orientToBezier;
                            this._autoRotate = n ? n instanceof Array ? n : [
                                ["x", "y", "rotation", n === !0 ? 0 : Number(n) || 0]
                            ] : null;
                            for (d in k) this._props.push(d);
                            for (f = this._props.length; --f > -1;) d = this._props[f], this._overwriteProps.push(d), e = this._func[d] = "function" == typeof a[d], j[d] = e ? a[d.indexOf("set") || "function" != typeof a["get" + d.substr(3)] ? d : "get" + d.substr(3)]() : parseFloat(a[d]), h || j[d] !== i[0][d] && (h = j);
                            if (this._beziers = "cubic" !== b.type && "quadratic" !== b.type && "soft" !== b.type ? l(i, isNaN(b.curviness) ? 1 : b.curviness, !1, "thruBasic" === b.type, b.correlate, h) : m(i, b.type, j), this._segCount = this._beziers[d].length, this._timeRes) {
                                var p = o(this._beziers, this._timeRes);
                                this._length = p.length, this._lengths = p.lengths, this._segments = p.segments, this._l1 = this._li = this._s1 = this._si = 0, this._l2 = this._lengths[0], this._curSeg = this._segments[0], this._s2 = this._curSeg[0], this._prec = 1 / this._curSeg.length
                            }
                            if (n = this._autoRotate)
                                for (this._initialRotations = [], n[0] instanceof Array || (this._autoRotate = n = [n]), f = n.length; --f > -1;) {
                                    for (g = 0; 3 > g; g++) d = n[f][g], this._func[d] = "function" == typeof a[d] && a[d.indexOf("set") || "function" != typeof a["get" + d.substr(3)] ? d : "get" + d.substr(3)];
                                    d = n[f][2], this._initialRotations[f] = (this._func[d] ? this._func[d].call(this._target) : this._target[d]) || 0, this._overwriteProps.push(d)
                                }
                            return this._startRatio = c.vars.runBackwards ? 1 : 0, !0
                        },
                        set: function(b) {
                            var c, d, e, f, g, h, i, j, k, l, m = this._segCount,
                                n = this._func,
                                o = this._target,
                                p = b !== this._startRatio;
                            if (this._timeRes) {
                                if (k = this._lengths, l = this._curSeg, b *= this._length, e = this._li, b > this._l2 && m - 1 > e) {
                                    for (j = m - 1; j > e && (this._l2 = k[++e]) <= b;);
                                    this._l1 = k[e - 1], this._li = e, this._curSeg = l = this._segments[e], this._s2 = l[this._s1 = this._si = 0]
                                } else if (b < this._l1 && e > 0) {
                                    for (; e > 0 && (this._l1 = k[--e]) >= b;);
                                    0 === e && b < this._l1 ? this._l1 = 0 : e++, this._l2 = k[e], this._li = e, this._curSeg = l = this._segments[e], this._s1 = l[(this._si = l.length - 1) - 1] || 0, this._s2 = l[this._si]
                                }
                                if (c = e, b -= this._l1, e = this._si, b > this._s2 && e < l.length - 1) {
                                    for (j = l.length - 1; j > e && (this._s2 = l[++e]) <= b;);
                                    this._s1 = l[e - 1], this._si = e
                                } else if (b < this._s1 && e > 0) {
                                    for (; e > 0 && (this._s1 = l[--e]) >= b;);
                                    0 === e && b < this._s1 ? this._s1 = 0 : e++, this._s2 = l[e], this._si = e
                                }
                                h = (e + (b - this._s1) / (this._s2 - this._s1)) * this._prec || 0
                            } else c = 0 > b ? 0 : b >= 1 ? m - 1 : m * b >> 0, h = (b - c * (1 / m)) * m;
                            for (d = 1 - h, e = this._props.length; --e > -1;) f = this._props[e], g = this._beziers[f][c], i = (h * h * g.da + 3 * d * (h * g.ca + d * g.ba)) * h + g.a, this._mod[f] && (i = this._mod[f](i, o)), n[f] ? o[f](i) : o[f] = i;
                            if (this._autoRotate) {
                                var q, r, s, t, u, v, w, x = this._autoRotate;
                                for (e = x.length; --e > -1;) f = x[e][2], v = x[e][3] || 0, w = x[e][4] === !0 ? 1 : a, g = this._beziers[x[e][0]], q = this._beziers[x[e][1]], g && q && (g = g[c], q = q[c], r = g.a + (g.b - g.a) * h, t = g.b + (g.c - g.b) * h, r += (t - r) * h, t += (g.c + (g.d - g.c) * h - t) * h, s = q.a + (q.b - q.a) * h, u = q.b + (q.c - q.b) * h, s += (u - s) * h, u += (q.c + (q.d - q.c) * h - u) * h, i = p ? Math.atan2(u - s, t - r) * w + v : this._initialRotations[e], this._mod[f] && (i = this._mod[f](i, o)), n[f] ? o[f](i) : o[f] = i)
                            }
                        }
                    }),
                    q = p.prototype;
                p.bezierThrough = l, p.cubicToQuadratic = i, p._autoCSS = !0, p.quadraticToCubic = function(a, b, c) {
                    return new g(a, (2 * b + a) / 3, (2 * b + c) / 3, c)
                }, p._cssRegister = function() {
                    var a = f.CSSPlugin;
                    if (a) {
                        var b = a._internals,
                            c = b._parseToProxy,
                            d = b._setPluginRatio,
                            e = b.CSSPropTween;
                        b._registerComplexSpecialProp("bezier", {
                            parser: function(a, b, f, g, h, i) {
                                b instanceof Array && (b = {
                                    values: b
                                }), i = new p;
                                var j, k, l, m = b.values,
                                    n = m.length - 1,
                                    o = [],
                                    q = {};
                                if (0 > n) return h;
                                for (j = 0; n >= j; j++) l = c(a, m[j], g, h, i, n !== j), o[j] = l.end;
                                for (k in b) q[k] = b[k];
                                return q.values = o, h = new e(a, "bezier", 0, 0, l.pt, 2), h.data = l, h.plugin = i, h.setRatio = d, 0 === q.autoRotate && (q.autoRotate = !0), !q.autoRotate || q.autoRotate instanceof Array || (j = q.autoRotate === !0 ? 0 : Number(q.autoRotate), q.autoRotate = null != l.end.left ? [
                                    ["left", "top", "rotation", j, !1]
                                ] : null != l.end.x && [
                                    ["x", "y", "rotation", j, !1]
                                ]), q.autoRotate && (g._transform || g._enableTransforms(!1), l.autoRotate = g._target._gsTransform, l.proxy.rotation = l.autoRotate.rotation || 0, g._overwriteProps.push("rotation")), i._onInitTween(l.proxy, q, g._tween), h
                            }
                        })
                    }
                }, q._mod = function(a) {
                    for (var b, c = this._overwriteProps, d = c.length; --d > -1;) b = a[c[d]], b && "function" == typeof b && (this._mod[c[d]] = b)
                }, q._kill = function(a) {
                    var b, c, d = this._props;
                    for (b in this._beziers)
                        if (b in a)
                            for (delete this._beziers[b], delete this._func[b], c = d.length; --c > -1;) d[c] === b && d.splice(c, 1);
                    if (d = this._autoRotate)
                        for (c = d.length; --c > -1;) a[d[c][2]] && d.splice(c, 1);
                    return this._super._kill.call(this, a)
                }
            }(), _gsScope._gsDefine("plugins.CSSPlugin", ["plugins.TweenPlugin", "TweenLite"], function(a, b) {
                var c, d, e, f, g = function() {
                        a.call(this, "css"), this._overwriteProps.length = 0, this.setRatio = g.prototype.setRatio
                    },
                    h = _gsScope._gsDefine.globals,
                    i = {},
                    j = g.prototype = new a("css");
                j.constructor = g, g.version = "1.19.0", g.API = 2, g.defaultTransformPerspective = 0, g.defaultSkewType = "compensated", g.defaultSmoothOrigin = !0, j = "px", g.suffixMap = {
                    top: j,
                    right: j,
                    bottom: j,
                    left: j,
                    width: j,
                    height: j,
                    fontSize: j,
                    padding: j,
                    margin: j,
                    perspective: j,
                    lineHeight: ""
                };
                var k, l, m, n, o, p, q, r, s = /(?:\-|\.|\b)(\d|\.|e\-)+/g,
                    t = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,
                    u = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,
                    v = /(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g,
                    w = /(?:\d|\-|\+|=|#|\.)*/g,
                    x = /opacity *= *([^)]*)/i,
                    y = /opacity:([^;]*)/i,
                    z = /alpha\(opacity *=.+?\)/i,
                    A = /^(rgb|hsl)/,
                    B = /([A-Z])/g,
                    C = /-([a-z])/gi,
                    D = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,
                    E = function(a, b) {
                        return b.toUpperCase()
                    },
                    F = /(?:Left|Right|Width)/i,
                    G = /(M11|M12|M21|M22)=[\d\-\.e]+/gi,
                    H = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,
                    I = /,(?=[^\)]*(?:\(|$))/gi,
                    J = /[\s,\(]/i,
                    K = Math.PI / 180,
                    L = 180 / Math.PI,
                    M = {},
                    N = document,
                    O = function(a) {
                        return N.createElementNS ? N.createElementNS("http://www.w3.org/1999/xhtml", a) : N.createElement(a)
                    },
                    P = O("div"),
                    Q = O("img"),
                    R = g._internals = {
                        _specialProps: i
                    },
                    S = navigator.userAgent,
                    T = function() {
                        var a = S.indexOf("Android"),
                            b = O("a");
                        return m = -1 !== S.indexOf("Safari") && -1 === S.indexOf("Chrome") && (-1 === a || Number(S.substr(a + 8, 1)) > 3), o = m && Number(S.substr(S.indexOf("Version/") + 8, 1)) < 6, n = -1 !== S.indexOf("Firefox"), (/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(S) || /Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(S)) && (p = parseFloat(RegExp.$1)), !!b && (b.style.cssText = "top:1px;opacity:.55;", /^0.55/.test(b.style.opacity))
                    }(),
                    U = function(a) {
                        return x.test("string" == typeof a ? a : (a.currentStyle ? a.currentStyle.filter : a.style.filter) || "") ? parseFloat(RegExp.$1) / 100 : 1
                    },
                    V = function(a) {
                        window.console && console.log(a)
                    },
                    W = "",
                    X = "",
                    Y = function(a, b) {
                        b = b || P;
                        var c, d, e = b.style;
                        if (void 0 !== e[a]) return a;
                        for (a = a.charAt(0).toUpperCase() + a.substr(1), c = ["O", "Moz", "ms", "Ms", "Webkit"], d = 5; --d > -1 && void 0 === e[c[d] + a];);
                        return d >= 0 ? (X = 3 === d ? "ms" : c[d], W = "-" + X.toLowerCase() + "-", X + a) : null
                    },
                    Z = N.defaultView ? N.defaultView.getComputedStyle : function() {},
                    $ = g.getStyle = function(a, b, c, d, e) {
                        var f;
                        return T || "opacity" !== b ? (!d && a.style[b] ? f = a.style[b] : (c = c || Z(a)) ? f = c[b] || c.getPropertyValue(b) || c.getPropertyValue(b.replace(B, "-$1").toLowerCase()) : a.currentStyle && (f = a.currentStyle[b]), null == e || f && "none" !== f && "auto" !== f && "auto auto" !== f ? f : e) : U(a)
                    },
                    _ = R.convertToPixels = function(a, c, d, e, f) {
                        if ("px" === e || !e) return d;
                        if ("auto" === e || !d) return 0;
                        var h, i, j, k = F.test(c),
                            l = a,
                            m = P.style,
                            n = 0 > d,
                            o = 1 === d;
                        if (n && (d = -d), o && (d *= 100), "%" === e && -1 !== c.indexOf("border")) h = d / 100 * (k ? a.clientWidth : a.clientHeight);
                        else {
                            if (m.cssText = "border:0 solid red;position:" + $(a, "position") + ";line-height:0;", "%" !== e && l.appendChild && "v" !== e.charAt(0) && "rem" !== e) m[k ? "borderLeftWidth" : "borderTopWidth"] = d + e;
                            else {
                                if (l = a.parentNode || N.body, i = l._gsCache, j = b.ticker.frame, i && k && i.time === j) return i.width * d / 100;
                                m[k ? "width" : "height"] = d + e
                            }
                            l.appendChild(P), h = parseFloat(P[k ? "offsetWidth" : "offsetHeight"]), l.removeChild(P), k && "%" === e && g.cacheWidths !== !1 && (i = l._gsCache = l._gsCache || {}, i.time = j, i.width = h / d * 100), 0 !== h || f || (h = _(a, c, d, e, !0))
                        }
                        return o && (h /= 100), n ? -h : h
                    },
                    aa = R.calculateOffset = function(a, b, c) {
                        if ("absolute" !== $(a, "position", c)) return 0;
                        var d = "left" === b ? "Left" : "Top",
                            e = $(a, "margin" + d, c);
                        return a["offset" + d] - (_(a, b, parseFloat(e), e.replace(w, "")) || 0)
                    },
                    ba = function(a, b) {
                        var c, d, e, f = {};
                        if (b = b || Z(a, null))
                            if (c = b.length)
                                for (; --c > -1;) e = b[c], (-1 === e.indexOf("-transform") || Ca === e) && (f[e.replace(C, E)] = b.getPropertyValue(e));
                            else
                                for (c in b)(-1 === c.indexOf("Transform") || Ba === c) && (f[c] = b[c]);
                        else if (b = a.currentStyle || a.style)
                            for (c in b) "string" == typeof c && void 0 === f[c] && (f[c.replace(C, E)] = b[c]);
                        return T || (f.opacity = U(a)), d = Pa(a, b, !1), f.rotation = d.rotation, f.skewX = d.skewX, f.scaleX = d.scaleX, f.scaleY = d.scaleY, f.x = d.x, f.y = d.y, Ea && (f.z = d.z, f.rotationX = d.rotationX, f.rotationY = d.rotationY, f.scaleZ = d.scaleZ), f.filters && delete f.filters, f
                    },
                    ca = function(a, b, c, d, e) {
                        var f, g, h, i = {},
                            j = a.style;
                        for (g in c) "cssText" !== g && "length" !== g && isNaN(g) && (b[g] !== (f = c[g]) || e && e[g]) && -1 === g.indexOf("Origin") && ("number" == typeof f || "string" == typeof f) && (i[g] = "auto" !== f || "left" !== g && "top" !== g ? "" !== f && "auto" !== f && "none" !== f || "string" != typeof b[g] || "" === b[g].replace(v, "") ? f : 0 : aa(a, g), void 0 !== j[g] && (h = new ra(j, g, j[g], h)));
                        if (d)
                            for (g in d) "className" !== g && (i[g] = d[g]);
                        return {
                            difs: i,
                            firstMPT: h
                        }
                    },
                    da = {
                        width: ["Left", "Right"],
                        height: ["Top", "Bottom"]
                    },
                    ea = ["marginLeft", "marginRight", "marginTop", "marginBottom"],
                    fa = function(a, b, c) {
                        if ("svg" === (a.nodeName + "").toLowerCase()) return (c || Z(a))[b] || 0;
                        if (a.getBBox && Ma(a)) return a.getBBox()[b] || 0;
                        var d = parseFloat("width" === b ? a.offsetWidth : a.offsetHeight),
                            e = da[b],
                            f = e.length;
                        for (c = c || Z(a, null); --f > -1;) d -= parseFloat($(a, "padding" + e[f], c, !0)) || 0, d -= parseFloat($(a, "border" + e[f] + "Width", c, !0)) || 0;
                        return d
                    },
                    ga = function(a, b) {
                        if ("contain" === a || "auto" === a || "auto auto" === a) return a + " ";
                        (null == a || "" === a) && (a = "0 0");
                        var c, d = a.split(" "),
                            e = -1 !== a.indexOf("left") ? "0%" : -1 !== a.indexOf("right") ? "100%" : d[0],
                            f = -1 !== a.indexOf("top") ? "0%" : -1 !== a.indexOf("bottom") ? "100%" : d[1];
                        if (d.length > 3 && !b) {
                            for (d = a.split(", ").join(",").split(","), a = [], c = 0; c < d.length; c++) a.push(ga(d[c]));
                            return a.join(",")
                        }
                        return null == f ? f = "center" === e ? "50%" : "0" : "center" === f && (f = "50%"), ("center" === e || isNaN(parseFloat(e)) && -1 === (e + "").indexOf("=")) && (e = "50%"), a = e + " " + f + (d.length > 2 ? " " + d[2] : ""), b && (b.oxp = -1 !== e.indexOf("%"), b.oyp = -1 !== f.indexOf("%"), b.oxr = "=" === e.charAt(1), b.oyr = "=" === f.charAt(1), b.ox = parseFloat(e.replace(v, "")), b.oy = parseFloat(f.replace(v, "")), b.v = a), b || a
                    },
                    ha = function(a, b) {
                        return "function" == typeof a && (a = a(r, q)), "string" == typeof a && "=" === a.charAt(1) ? parseInt(a.charAt(0) + "1", 10) * parseFloat(a.substr(2)) : parseFloat(a) - parseFloat(b) || 0
                    },
                    ia = function(a, b) {
                        return "function" == typeof a && (a = a(r, q)), null == a ? b : "string" == typeof a && "=" === a.charAt(1) ? parseInt(a.charAt(0) + "1", 10) * parseFloat(a.substr(2)) + b : parseFloat(a) || 0
                    },
                    ja = function(a, b, c, d) {
                        var e, f, g, h, i, j = 1e-6;
                        return "function" == typeof a && (a = a(r, q)), null == a ? h = b : "number" == typeof a ? h = a : (e = 360, f = a.split("_"), i = "=" === a.charAt(1), g = (i ? parseInt(a.charAt(0) + "1", 10) * parseFloat(f[0].substr(2)) : parseFloat(f[0])) * (-1 === a.indexOf("rad") ? 1 : L) - (i ? 0 : b), f.length && (d && (d[c] = b + g), -1 !== a.indexOf("short") && (g %= e, g !== g % (e / 2) && (g = 0 > g ? g + e : g - e)), -1 !== a.indexOf("_cw") && 0 > g ? g = (g + 9999999999 * e) % e - (g / e | 0) * e : -1 !== a.indexOf("ccw") && g > 0 && (g = (g - 9999999999 * e) % e - (g / e | 0) * e)), h = b + g), j > h && h > -j && (h = 0), h
                    },
                    ka = {
                        aqua: [0, 255, 255],
                        lime: [0, 255, 0],
                        silver: [192, 192, 192],
                        black: [0, 0, 0],
                        maroon: [128, 0, 0],
                        teal: [0, 128, 128],
                        blue: [0, 0, 255],
                        navy: [0, 0, 128],
                        white: [255, 255, 255],
                        fuchsia: [255, 0, 255],
                        olive: [128, 128, 0],
                        yellow: [255, 255, 0],
                        orange: [255, 165, 0],
                        gray: [128, 128, 128],
                        purple: [128, 0, 128],
                        green: [0, 128, 0],
                        red: [255, 0, 0],
                        pink: [255, 192, 203],
                        cyan: [0, 255, 255],
                        transparent: [255, 255, 255, 0]
                    },
                    la = function(a, b, c) {
                        return a = 0 > a ? a + 1 : a > 1 ? a - 1 : a, 255 * (1 > 6 * a ? b + (c - b) * a * 6 : .5 > a ? c : 2 > 3 * a ? b + (c - b) * (2 / 3 - a) * 6 : b) + .5 | 0
                    },
                    ma = g.parseColor = function(a, b) {
                        var c, d, e, f, g, h, i, j, k, l, m;
                        if (a)
                            if ("number" == typeof a) c = [a >> 16, a >> 8 & 255, 255 & a];
                            else {
                                if ("," === a.charAt(a.length - 1) && (a = a.substr(0, a.length - 1)), ka[a]) c = ka[a];
                                else if ("#" === a.charAt(0)) 4 === a.length && (d = a.charAt(1), e = a.charAt(2), f = a.charAt(3), a = "#" + d + d + e + e + f + f), a = parseInt(a.substr(1), 16), c = [a >> 16, a >> 8 & 255, 255 & a];
                                else if ("hsl" === a.substr(0, 3))
                                    if (c = m = a.match(s), b) {
                                        if (-1 !== a.indexOf("=")) return a.match(t)
                                    } else g = Number(c[0]) % 360 / 360, h = Number(c[1]) / 100, i = Number(c[2]) / 100, e = .5 >= i ? i * (h + 1) : i + h - i * h, d = 2 * i - e, c.length > 3 && (c[3] = Number(a[3])), c[0] = la(g + 1 / 3, d, e), c[1] = la(g, d, e), c[2] = la(g - 1 / 3, d, e);
                                else c = a.match(s) || ka.transparent;
                                c[0] = Number(c[0]), c[1] = Number(c[1]), c[2] = Number(c[2]), c.length > 3 && (c[3] = Number(c[3]))
                            } else c = ka.black;
                        return b && !m && (d = c[0] / 255, e = c[1] / 255, f = c[2] / 255, j = Math.max(d, e, f), k = Math.min(d, e, f), i = (j + k) / 2, j === k ? g = h = 0 : (l = j - k, h = i > .5 ? l / (2 - j - k) : l / (j + k), g = j === d ? (e - f) / l + (f > e ? 6 : 0) : j === e ? (f - d) / l + 2 : (d - e) / l + 4, g *= 60), c[0] = g + .5 | 0, c[1] = 100 * h + .5 | 0, c[2] = 100 * i + .5 | 0), c
                    },
                    na = function(a, b) {
                        var c, d, e, f = a.match(oa) || [],
                            g = 0,
                            h = f.length ? "" : a;
                        for (c = 0; c < f.length; c++) d = f[c], e = a.substr(g, a.indexOf(d, g) - g), g += e.length + d.length, d = ma(d, b), 3 === d.length && d.push(1), h += e + (b ? "hsla(" + d[0] + "," + d[1] + "%," + d[2] + "%," + d[3] : "rgba(" + d.join(",")) + ")";
                        return h + a.substr(g)
                    },
                    oa = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";
                for (j in ka) oa += "|" + j + "\\b";
                oa = new RegExp(oa + ")", "gi"), g.colorStringFilter = function(a) {
                    var b, c = a[0] + a[1];
                    oa.test(c) && (b = -1 !== c.indexOf("hsl(") || -1 !== c.indexOf("hsla("), a[0] = na(a[0], b), a[1] = na(a[1], b)), oa.lastIndex = 0
                }, b.defaultStringFilter || (b.defaultStringFilter = g.colorStringFilter);
                var pa = function(a, b, c, d) {
                        if (null == a) return function(a) {
                            return a
                        };
                        var e, f = b ? (a.match(oa) || [""])[0] : "",
                            g = a.split(f).join("").match(u) || [],
                            h = a.substr(0, a.indexOf(g[0])),
                            i = ")" === a.charAt(a.length - 1) ? ")" : "",
                            j = -1 !== a.indexOf(" ") ? " " : ",",
                            k = g.length,
                            l = k > 0 ? g[0].replace(s, "") : "";
                        return k ? e = b ? function(a) {
                            var b, m, n, o;
                            if ("number" == typeof a) a += l;
                            else if (d && I.test(a)) {
                                for (o = a.replace(I, "|").split("|"), n = 0; n < o.length; n++) o[n] = e(o[n]);
                                return o.join(",")
                            }
                            if (b = (a.match(oa) || [f])[0], m = a.split(b).join("").match(u) || [], n = m.length, k > n--)
                                for (; ++n < k;) m[n] = c ? m[(n - 1) / 2 | 0] : g[n];
                            return h + m.join(j) + j + b + i + (-1 !== a.indexOf("inset") ? " inset" : "")
                        } : function(a) {
                            var b, f, m;
                            if ("number" == typeof a) a += l;
                            else if (d && I.test(a)) {
                                for (f = a.replace(I, "|").split("|"), m = 0; m < f.length; m++) f[m] = e(f[m]);
                                return f.join(",")
                            }
                            if (b = a.match(u) || [], m = b.length, k > m--)
                                for (; ++m < k;) b[m] = c ? b[(m - 1) / 2 | 0] : g[m];
                            return h + b.join(j) + i
                        } : function(a) {
                            return a
                        }
                    },
                    qa = function(a) {
                        return a = a.split(","),
                            function(b, c, d, e, f, g, h) {
                                var i, j = (c + "").split(" ");
                                for (h = {}, i = 0; 4 > i; i++) h[a[i]] = j[i] = j[i] || j[(i - 1) / 2 >> 0];
                                return e.parse(b, h, f, g)
                            }
                    },
                    ra = (R._setPluginRatio = function(a) {
                        this.plugin.setRatio(a);
                        for (var b, c, d, e, f, g = this.data, h = g.proxy, i = g.firstMPT, j = 1e-6; i;) b = h[i.v], i.r ? b = Math.round(b) : j > b && b > -j && (b = 0), i.t[i.p] = b, i = i._next;
                        if (g.autoRotate && (g.autoRotate.rotation = g.mod ? g.mod(h.rotation, this.t) : h.rotation), 1 === a || 0 === a)
                            for (i = g.firstMPT, f = 1 === a ? "e" : "b"; i;) {
                                if (c = i.t, c.type) {
                                    if (1 === c.type) {
                                        for (e = c.xs0 + c.s + c.xs1, d = 1; d < c.l; d++) e += c["xn" + d] + c["xs" + (d + 1)];
                                        c[f] = e
                                    }
                                } else c[f] = c.s + c.xs0;
                                i = i._next
                            }
                    }, function(a, b, c, d, e) {
                        this.t = a, this.p = b, this.v = c, this.r = e, d && (d._prev = this, this._next = d)
                    }),
                    sa = (R._parseToProxy = function(a, b, c, d, e, f) {
                        var g, h, i, j, k, l = d,
                            m = {},
                            n = {},
                            o = c._transform,
                            p = M;
                        for (c._transform = null, M = b, d = k = c.parse(a, b, d, e), M = p, f && (c._transform = o, l && (l._prev = null, l._prev && (l._prev._next = null))); d && d !== l;) {
                            if (d.type <= 1 && (h = d.p, n[h] = d.s + d.c, m[h] = d.s, f || (j = new ra(d, "s", h, j, d.r), d.c = 0), 1 === d.type))
                                for (g = d.l; --g > 0;) i = "xn" + g, h = d.p + "_" + i, n[h] = d.data[i], m[h] = d[i], f || (j = new ra(d, i, h, j, d.rxp[i]));
                            d = d._next
                        }
                        return {
                            proxy: m,
                            end: n,
                            firstMPT: j,
                            pt: k
                        }
                    }, R.CSSPropTween = function(a, b, d, e, g, h, i, j, k, l, m) {
                        this.t = a, this.p = b, this.s = d, this.c = e, this.n = i || b, a instanceof sa || f.push(this.n), this.r = j, this.type = h || 0, k && (this.pr = k, c = !0), this.b = void 0 === l ? d : l, this.e = void 0 === m ? d + e : m, g && (this._next = g, g._prev = this)
                    }),
                    ta = function(a, b, c, d, e, f) {
                        var g = new sa(a, b, c, d - c, e, (-1), f);
                        return g.b = c, g.e = g.xs0 = d, g
                    },
                    ua = g.parseComplex = function(a, b, c, d, e, f, h, i, j, l) {
                        c = c || f || "", "function" == typeof d && (d = d(r, q)), h = new sa(a, b, 0, 0, h, l ? 2 : 1, null, (!1), i, c, d), d += "", e && oa.test(d + c) && (d = [c, d], g.colorStringFilter(d), c = d[0], d = d[1]);
                        var m, n, o, p, u, v, w, x, y, z, A, B, C, D = c.split(", ").join(",").split(" "),
                            E = d.split(", ").join(",").split(" "),
                            F = D.length,
                            G = k !== !1;
                        for ((-1 !== d.indexOf(",") || -1 !== c.indexOf(",")) && (D = D.join(" ").replace(I, ", ").split(" "), E = E.join(" ").replace(I, ", ").split(" "), F = D.length), F !== E.length && (D = (f || "").split(" "), F = D.length), h.plugin = j, h.setRatio = l, oa.lastIndex = 0, m = 0; F > m; m++)
                            if (p = D[m], u = E[m], x = parseFloat(p), x || 0 === x) h.appendXtra("", x, ha(u, x), u.replace(t, ""), G && -1 !== u.indexOf("px"), !0);
                            else if (e && oa.test(p)) B = u.indexOf(")") + 1, B = ")" + (B ? u.substr(B) : ""), C = -1 !== u.indexOf("hsl") && T, p = ma(p, C), u = ma(u, C), y = p.length + u.length > 6, y && !T && 0 === u[3] ? (h["xs" + h.l] += h.l ? " transparent" : "transparent", h.e = h.e.split(E[m]).join("transparent")) : (T || (y = !1), C ? h.appendXtra(y ? "hsla(" : "hsl(", p[0], ha(u[0], p[0]), ",", !1, !0).appendXtra("", p[1], ha(u[1], p[1]), "%,", !1).appendXtra("", p[2], ha(u[2], p[2]), y ? "%," : "%" + B, !1) : h.appendXtra(y ? "rgba(" : "rgb(", p[0], u[0] - p[0], ",", !0, !0).appendXtra("", p[1], u[1] - p[1], ",", !0).appendXtra("", p[2], u[2] - p[2], y ? "," : B, !0), y && (p = p.length < 4 ? 1 : p[3], h.appendXtra("", p, (u.length < 4 ? 1 : u[3]) - p, B, !1))), oa.lastIndex = 0;
                        else if (v = p.match(s)) {
                            if (w = u.match(t), !w || w.length !== v.length) return h;
                            for (o = 0, n = 0; n < v.length; n++) A = v[n], z = p.indexOf(A, o), h.appendXtra(p.substr(o, z - o), Number(A), ha(w[n], A), "", G && "px" === p.substr(z + A.length, 2), 0 === n), o = z + A.length;
                            h["xs" + h.l] += p.substr(o)
                        } else h["xs" + h.l] += h.l || h["xs" + h.l] ? " " + u : u;
                        if (-1 !== d.indexOf("=") && h.data) {
                            for (B = h.xs0 + h.data.s, m = 1; m < h.l; m++) B += h["xs" + m] + h.data["xn" + m];
                            h.e = B + h["xs" + m]
                        }
                        return h.l || (h.type = -1, h.xs0 = h.e), h.xfirst || h
                    },
                    va = 9;
                for (j = sa.prototype, j.l = j.pr = 0; --va > 0;) j["xn" + va] = 0, j["xs" + va] = "";
                j.xs0 = "", j._next = j._prev = j.xfirst = j.data = j.plugin = j.setRatio = j.rxp = null, j.appendXtra = function(a, b, c, d, e, f) {
                    var g = this,
                        h = g.l;
                    return g["xs" + h] += f && (h || g["xs" + h]) ? " " + a : a || "", c || 0 === h || g.plugin ? (g.l++, g.type = g.setRatio ? 2 : 1, g["xs" + g.l] = d || "", h > 0 ? (g.data["xn" + h] = b + c, g.rxp["xn" + h] = e, g["xn" + h] = b, g.plugin || (g.xfirst = new sa(g, "xn" + h, b, c, g.xfirst || g, 0, g.n, e, g.pr), g.xfirst.xs0 = 0), g) : (g.data = {
                        s: b + c
                    }, g.rxp = {}, g.s = b, g.c = c, g.r = e, g)) : (g["xs" + h] += b + (d || ""), g)
                };
                var wa = function(a, b) {
                        b = b || {}, this.p = b.prefix ? Y(a) || a : a, i[a] = i[this.p] = this, this.format = b.formatter || pa(b.defaultValue, b.color, b.collapsible, b.multi), b.parser && (this.parse = b.parser), this.clrs = b.color, this.multi = b.multi, this.keyword = b.keyword, this.dflt = b.defaultValue, this.pr = b.priority || 0
                    },
                    xa = R._registerComplexSpecialProp = function(a, b, c) {
                        "object" != typeof b && (b = {
                            parser: c
                        });
                        var d, e, f = a.split(","),
                            g = b.defaultValue;
                        for (c = c || [g], d = 0; d < f.length; d++) b.prefix = 0 === d && b.prefix, b.defaultValue = c[d] || g, e = new wa(f[d], b)
                    },
                    ya = R._registerPluginProp = function(a) {
                        if (!i[a]) {
                            var b = a.charAt(0).toUpperCase() + a.substr(1) + "Plugin";
                            xa(a, {
                                parser: function(a, c, d, e, f, g, j) {
                                    var k = h.com.greensock.plugins[b];
                                    return k ? (k._cssRegister(), i[d].parse(a, c, d, e, f, g, j)) : (V("Error: " + b + " js file not loaded."), f)
                                }
                            })
                        }
                    };
                j = wa.prototype, j.parseComplex = function(a, b, c, d, e, f) {
                    var g, h, i, j, k, l, m = this.keyword;
                    if (this.multi && (I.test(c) || I.test(b) ? (h = b.replace(I, "|").split("|"), i = c.replace(I, "|").split("|")) : m && (h = [b], i = [c])), i) {
                        for (j = i.length > h.length ? i.length : h.length, g = 0; j > g; g++) b = h[g] = h[g] || this.dflt, c = i[g] = i[g] || this.dflt, m && (k = b.indexOf(m), l = c.indexOf(m), k !== l && (-1 === l ? h[g] = h[g].split(m).join("") : -1 === k && (h[g] += " " + m)));
                        b = h.join(", "), c = i.join(", ")
                    }
                    return ua(a, this.p, b, c, this.clrs, this.dflt, d, this.pr, e, f)
                }, j.parse = function(a, b, c, d, f, g, h) {
                    return this.parseComplex(a.style, this.format($(a, this.p, e, !1, this.dflt)), this.format(b), f, g)
                }, g.registerSpecialProp = function(a, b, c) {
                    xa(a, {
                        parser: function(a, d, e, f, g, h, i) {
                            var j = new sa(a, e, 0, 0, g, 2, e, (!1), c);
                            return j.plugin = h, j.setRatio = b(a, d, f._tween, e), j
                        },
                        priority: c
                    })
                }, g.useSVGTransformAttr = m || n;
                var za, Aa = "scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","),
                    Ba = Y("transform"),
                    Ca = W + "transform",
                    Da = Y("transformOrigin"),
                    Ea = null !== Y("perspective"),
                    Fa = R.Transform = function() {
                        this.perspective = parseFloat(g.defaultTransformPerspective) || 0, this.force3D = !(g.defaultForce3D === !1 || !Ea) && (g.defaultForce3D || "auto")
                    },
                    Ga = window.SVGElement,
                    Ha = function(a, b, c) {
                        var d, e = N.createElementNS("http://www.w3.org/2000/svg", a),
                            f = /([a-z])([A-Z])/g;
                        for (d in c) e.setAttributeNS(null, d.replace(f, "$1-$2").toLowerCase(), c[d]);
                        return b.appendChild(e), e
                    },
                    Ia = N.documentElement,
                    Ja = function() {
                        var a, b, c, d = p || /Android/i.test(S) && !window.chrome;
                        return N.createElementNS && !d && (a = Ha("svg", Ia), b = Ha("rect", a, {
                                width: 100,
                                height: 50,
                                x: 100
                            }), c = b.getBoundingClientRect().width, b.style[Da] = "50% 50%",
                            b.style[Ba] = "scaleX(0.5)", d = c === b.getBoundingClientRect().width && !(n && Ea), Ia.removeChild(a)), d
                    }(),
                    Ka = function(a, b, c, d, e, f) {
                        var h, i, j, k, l, m, n, o, p, q, r, s, t, u, v = a._gsTransform,
                            w = Oa(a, !0);
                        v && (t = v.xOrigin, u = v.yOrigin), (!d || (h = d.split(" ")).length < 2) && (n = a.getBBox(), b = ga(b).split(" "), h = [(-1 !== b[0].indexOf("%") ? parseFloat(b[0]) / 100 * n.width : parseFloat(b[0])) + n.x, (-1 !== b[1].indexOf("%") ? parseFloat(b[1]) / 100 * n.height : parseFloat(b[1])) + n.y]), c.xOrigin = k = parseFloat(h[0]), c.yOrigin = l = parseFloat(h[1]), d && w !== Na && (m = w[0], n = w[1], o = w[2], p = w[3], q = w[4], r = w[5], s = m * p - n * o, i = k * (p / s) + l * (-o / s) + (o * r - p * q) / s, j = k * (-n / s) + l * (m / s) - (m * r - n * q) / s, k = c.xOrigin = h[0] = i, l = c.yOrigin = h[1] = j), v && (f && (c.xOffset = v.xOffset, c.yOffset = v.yOffset, v = c), e || e !== !1 && g.defaultSmoothOrigin !== !1 ? (i = k - t, j = l - u, v.xOffset += i * w[0] + j * w[2] - i, v.yOffset += i * w[1] + j * w[3] - j) : v.xOffset = v.yOffset = 0), f || a.setAttribute("data-svg-origin", h.join(" "))
                    },
                    La = function(a) {
                        try {
                            return a.getBBox()
                        } catch (a) {}
                    },
                    Ma = function(a) {
                        return !!(Ga && a.getBBox && a.getCTM && La(a) && (!a.parentNode || a.parentNode.getBBox && a.parentNode.getCTM))
                    },
                    Na = [1, 0, 0, 1, 0, 0],
                    Oa = function(a, b) {
                        var c, d, e, f, g, h, i = a._gsTransform || new Fa,
                            j = 1e5,
                            k = a.style;
                        if (Ba ? d = $(a, Ca, null, !0) : a.currentStyle && (d = a.currentStyle.filter.match(G), d = d && 4 === d.length ? [d[0].substr(4), Number(d[2].substr(4)), Number(d[1].substr(4)), d[3].substr(4), i.x || 0, i.y || 0].join(",") : ""), c = !d || "none" === d || "matrix(1, 0, 0, 1, 0, 0)" === d, c && Ba && ((h = "none" === Z(a).display) || !a.parentNode) && (h && (f = k.display, k.display = "block"), a.parentNode || (g = 1, Ia.appendChild(a)), d = $(a, Ca, null, !0), c = !d || "none" === d || "matrix(1, 0, 0, 1, 0, 0)" === d, f ? k.display = f : h && Ta(k, "display"), g && Ia.removeChild(a)), (i.svg || a.getBBox && Ma(a)) && (c && -1 !== (k[Ba] + "").indexOf("matrix") && (d = k[Ba], c = 0), e = a.getAttribute("transform"), c && e && (-1 !== e.indexOf("matrix") ? (d = e, c = 0) : -1 !== e.indexOf("translate") && (d = "matrix(1,0,0,1," + e.match(/(?:\-|\b)[\d\-\.e]+\b/gi).join(",") + ")", c = 0))), c) return Na;
                        for (e = (d || "").match(s) || [], va = e.length; --va > -1;) f = Number(e[va]), e[va] = (g = f - (f |= 0)) ? (g * j + (0 > g ? -.5 : .5) | 0) / j + f : f;
                        return b && e.length > 6 ? [e[0], e[1], e[4], e[5], e[12], e[13]] : e
                    },
                    Pa = R.getTransform = function(a, c, d, e) {
                        if (a._gsTransform && d && !e) return a._gsTransform;
                        var f, h, i, j, k, l, m = d ? a._gsTransform || new Fa : new Fa,
                            n = m.scaleX < 0,
                            o = 2e-5,
                            p = 1e5,
                            q = Ea ? parseFloat($(a, Da, c, !1, "0 0 0").split(" ")[2]) || m.zOrigin || 0 : 0,
                            r = parseFloat(g.defaultTransformPerspective) || 0;
                        if (m.svg = !(!a.getBBox || !Ma(a)), m.svg && (Ka(a, $(a, Da, c, !1, "50% 50%") + "", m, a.getAttribute("data-svg-origin")), za = g.useSVGTransformAttr || Ja), f = Oa(a), f !== Na) {
                            if (16 === f.length) {
                                var s, t, u, v, w, x = f[0],
                                    y = f[1],
                                    z = f[2],
                                    A = f[3],
                                    B = f[4],
                                    C = f[5],
                                    D = f[6],
                                    E = f[7],
                                    F = f[8],
                                    G = f[9],
                                    H = f[10],
                                    I = f[12],
                                    J = f[13],
                                    K = f[14],
                                    M = f[11],
                                    N = Math.atan2(D, H);
                                m.zOrigin && (K = -m.zOrigin, I = F * K - f[12], J = G * K - f[13], K = H * K + m.zOrigin - f[14]), m.rotationX = N * L, N && (v = Math.cos(-N), w = Math.sin(-N), s = B * v + F * w, t = C * v + G * w, u = D * v + H * w, F = B * -w + F * v, G = C * -w + G * v, H = D * -w + H * v, M = E * -w + M * v, B = s, C = t, D = u), N = Math.atan2(-z, H), m.rotationY = N * L, N && (v = Math.cos(-N), w = Math.sin(-N), s = x * v - F * w, t = y * v - G * w, u = z * v - H * w, G = y * w + G * v, H = z * w + H * v, M = A * w + M * v, x = s, y = t, z = u), N = Math.atan2(y, x), m.rotation = N * L, N && (v = Math.cos(-N), w = Math.sin(-N), x = x * v + B * w, t = y * v + C * w, C = y * -w + C * v, D = z * -w + D * v, y = t), m.rotationX && Math.abs(m.rotationX) + Math.abs(m.rotation) > 359.9 && (m.rotationX = m.rotation = 0, m.rotationY = 180 - m.rotationY), m.scaleX = (Math.sqrt(x * x + y * y) * p + .5 | 0) / p, m.scaleY = (Math.sqrt(C * C + G * G) * p + .5 | 0) / p, m.scaleZ = (Math.sqrt(D * D + H * H) * p + .5 | 0) / p, m.rotationX || m.rotationY ? m.skewX = 0 : (m.skewX = B || C ? Math.atan2(B, C) * L + m.rotation : m.skewX || 0, Math.abs(m.skewX) > 90 && Math.abs(m.skewX) < 270 && (n ? (m.scaleX *= -1, m.skewX += m.rotation <= 0 ? 180 : -180, m.rotation += m.rotation <= 0 ? 180 : -180) : (m.scaleY *= -1, m.skewX += m.skewX <= 0 ? 180 : -180))), m.perspective = M ? 1 / (0 > M ? -M : M) : 0, m.x = I, m.y = J, m.z = K, m.svg && (m.x -= m.xOrigin - (m.xOrigin * x - m.yOrigin * B), m.y -= m.yOrigin - (m.yOrigin * y - m.xOrigin * C))
                            } else if (!Ea || e || !f.length || m.x !== f[4] || m.y !== f[5] || !m.rotationX && !m.rotationY) {
                                var O = f.length >= 6,
                                    P = O ? f[0] : 1,
                                    Q = f[1] || 0,
                                    R = f[2] || 0,
                                    S = O ? f[3] : 1;
                                m.x = f[4] || 0, m.y = f[5] || 0, i = Math.sqrt(P * P + Q * Q), j = Math.sqrt(S * S + R * R), k = P || Q ? Math.atan2(Q, P) * L : m.rotation || 0, l = R || S ? Math.atan2(R, S) * L + k : m.skewX || 0, Math.abs(l) > 90 && Math.abs(l) < 270 && (n ? (i *= -1, l += 0 >= k ? 180 : -180, k += 0 >= k ? 180 : -180) : (j *= -1, l += 0 >= l ? 180 : -180)), m.scaleX = i, m.scaleY = j, m.rotation = k, m.skewX = l, Ea && (m.rotationX = m.rotationY = m.z = 0, m.perspective = r, m.scaleZ = 1), m.svg && (m.x -= m.xOrigin - (m.xOrigin * P + m.yOrigin * R), m.y -= m.yOrigin - (m.xOrigin * Q + m.yOrigin * S))
                            }
                            m.zOrigin = q;
                            for (h in m) m[h] < o && m[h] > -o && (m[h] = 0)
                        }
                        return d && (a._gsTransform = m, m.svg && (za && a.style[Ba] ? b.delayedCall(.001, function() {
                            Ta(a.style, Ba)
                        }) : !za && a.getAttribute("transform") && b.delayedCall(.001, function() {
                            a.removeAttribute("transform")
                        }))), m
                    },
                    Qa = function(a) {
                        var b, c, d = this.data,
                            e = -d.rotation * K,
                            f = e + d.skewX * K,
                            g = 1e5,
                            h = (Math.cos(e) * d.scaleX * g | 0) / g,
                            i = (Math.sin(e) * d.scaleX * g | 0) / g,
                            j = (Math.sin(f) * -d.scaleY * g | 0) / g,
                            k = (Math.cos(f) * d.scaleY * g | 0) / g,
                            l = this.t.style,
                            m = this.t.currentStyle;
                        if (m) {
                            c = i, i = -j, j = -c, b = m.filter, l.filter = "";
                            var n, o, q = this.t.offsetWidth,
                                r = this.t.offsetHeight,
                                s = "absolute" !== m.position,
                                t = "progid:DXImageTransform.Microsoft.Matrix(M11=" + h + ", M12=" + i + ", M21=" + j + ", M22=" + k,
                                u = d.x + q * d.xPercent / 100,
                                v = d.y + r * d.yPercent / 100;
                            if (null != d.ox && (n = (d.oxp ? q * d.ox * .01 : d.ox) - q / 2, o = (d.oyp ? r * d.oy * .01 : d.oy) - r / 2, u += n - (n * h + o * i), v += o - (n * j + o * k)), s ? (n = q / 2, o = r / 2, t += ", Dx=" + (n - (n * h + o * i) + u) + ", Dy=" + (o - (n * j + o * k) + v) + ")") : t += ", sizingMethod='auto expand')", -1 !== b.indexOf("DXImageTransform.Microsoft.Matrix(") ? l.filter = b.replace(H, t) : l.filter = t + " " + b, (0 === a || 1 === a) && 1 === h && 0 === i && 0 === j && 1 === k && (s && -1 === t.indexOf("Dx=0, Dy=0") || x.test(b) && 100 !== parseFloat(RegExp.$1) || -1 === b.indexOf(b.indexOf("Alpha")) && l.removeAttribute("filter")), !s) {
                                var y, z, A, B = 8 > p ? 1 : -1;
                                for (n = d.ieOffsetX || 0, o = d.ieOffsetY || 0, d.ieOffsetX = Math.round((q - ((0 > h ? -h : h) * q + (0 > i ? -i : i) * r)) / 2 + u), d.ieOffsetY = Math.round((r - ((0 > k ? -k : k) * r + (0 > j ? -j : j) * q)) / 2 + v), va = 0; 4 > va; va++) z = ea[va], y = m[z], c = -1 !== y.indexOf("px") ? parseFloat(y) : _(this.t, z, parseFloat(y), y.replace(w, "")) || 0, A = c !== d[z] ? 2 > va ? -d.ieOffsetX : -d.ieOffsetY : 2 > va ? n - d.ieOffsetX : o - d.ieOffsetY, l[z] = (d[z] = Math.round(c - A * (0 === va || 2 === va ? 1 : B))) + "px"
                            }
                        }
                    },
                    Ra = R.set3DTransformRatio = R.setTransformRatio = function(a) {
                        var b, c, d, e, f, g, h, i, j, k, l, m, o, p, q, r, s, t, u, v, w, x, y, z = this.data,
                            A = this.t.style,
                            B = z.rotation,
                            C = z.rotationX,
                            D = z.rotationY,
                            E = z.scaleX,
                            F = z.scaleY,
                            G = z.scaleZ,
                            H = z.x,
                            I = z.y,
                            J = z.z,
                            L = z.svg,
                            M = z.perspective,
                            N = z.force3D;
                        if (((1 === a || 0 === a) && "auto" === N && (this.tween._totalTime === this.tween._totalDuration || !this.tween._totalTime) || !N) && !J && !M && !D && !C && 1 === G || za && L || !Ea) return void(B || z.skewX || L ? (B *= K, x = z.skewX * K, y = 1e5, b = Math.cos(B) * E, e = Math.sin(B) * E, c = Math.sin(B - x) * -F, f = Math.cos(B - x) * F, x && "simple" === z.skewType && (s = Math.tan(x - z.skewY * K), s = Math.sqrt(1 + s * s), c *= s, f *= s, z.skewY && (s = Math.tan(z.skewY * K), s = Math.sqrt(1 + s * s), b *= s, e *= s)), L && (H += z.xOrigin - (z.xOrigin * b + z.yOrigin * c) + z.xOffset, I += z.yOrigin - (z.xOrigin * e + z.yOrigin * f) + z.yOffset, za && (z.xPercent || z.yPercent) && (p = this.t.getBBox(), H += .01 * z.xPercent * p.width, I += .01 * z.yPercent * p.height), p = 1e-6, p > H && H > -p && (H = 0), p > I && I > -p && (I = 0)), u = (b * y | 0) / y + "," + (e * y | 0) / y + "," + (c * y | 0) / y + "," + (f * y | 0) / y + "," + H + "," + I + ")", L && za ? this.t.setAttribute("transform", "matrix(" + u) : A[Ba] = (z.xPercent || z.yPercent ? "translate(" + z.xPercent + "%," + z.yPercent + "%) matrix(" : "matrix(") + u) : A[Ba] = (z.xPercent || z.yPercent ? "translate(" + z.xPercent + "%," + z.yPercent + "%) matrix(" : "matrix(") + E + ",0,0," + F + "," + H + "," + I + ")");
                        if (n && (p = 1e-4, p > E && E > -p && (E = G = 2e-5), p > F && F > -p && (F = G = 2e-5), !M || z.z || z.rotationX || z.rotationY || (M = 0)), B || z.skewX) B *= K, q = b = Math.cos(B), r = e = Math.sin(B), z.skewX && (B -= z.skewX * K, q = Math.cos(B), r = Math.sin(B), "simple" === z.skewType && (s = Math.tan((z.skewX - z.skewY) * K), s = Math.sqrt(1 + s * s), q *= s, r *= s, z.skewY && (s = Math.tan(z.skewY * K), s = Math.sqrt(1 + s * s), b *= s, e *= s))), c = -r, f = q;
                        else {
                            if (!(D || C || 1 !== G || M || L)) return void(A[Ba] = (z.xPercent || z.yPercent ? "translate(" + z.xPercent + "%," + z.yPercent + "%) translate3d(" : "translate3d(") + H + "px," + I + "px," + J + "px)" + (1 !== E || 1 !== F ? " scale(" + E + "," + F + ")" : ""));
                            b = f = 1, c = e = 0
                        }
                        j = 1, d = g = h = i = k = l = 0, m = M ? -1 / M : 0, o = z.zOrigin, p = 1e-6, v = ",", w = "0", B = D * K, B && (q = Math.cos(B), r = Math.sin(B), h = -r, k = m * -r, d = b * r, g = e * r, j = q, m *= q, b *= q, e *= q), B = C * K, B && (q = Math.cos(B), r = Math.sin(B), s = c * q + d * r, t = f * q + g * r, i = j * r, l = m * r, d = c * -r + d * q, g = f * -r + g * q, j *= q, m *= q, c = s, f = t), 1 !== G && (d *= G, g *= G, j *= G, m *= G), 1 !== F && (c *= F, f *= F, i *= F, l *= F), 1 !== E && (b *= E, e *= E, h *= E, k *= E), (o || L) && (o && (H += d * -o, I += g * -o, J += j * -o + o), L && (H += z.xOrigin - (z.xOrigin * b + z.yOrigin * c) + z.xOffset, I += z.yOrigin - (z.xOrigin * e + z.yOrigin * f) + z.yOffset), p > H && H > -p && (H = w), p > I && I > -p && (I = w), p > J && J > -p && (J = 0)), u = z.xPercent || z.yPercent ? "translate(" + z.xPercent + "%," + z.yPercent + "%) matrix3d(" : "matrix3d(", u += (p > b && b > -p ? w : b) + v + (p > e && e > -p ? w : e) + v + (p > h && h > -p ? w : h), u += v + (p > k && k > -p ? w : k) + v + (p > c && c > -p ? w : c) + v + (p > f && f > -p ? w : f), C || D || 1 !== G ? (u += v + (p > i && i > -p ? w : i) + v + (p > l && l > -p ? w : l) + v + (p > d && d > -p ? w : d), u += v + (p > g && g > -p ? w : g) + v + (p > j && j > -p ? w : j) + v + (p > m && m > -p ? w : m) + v) : u += ",0,0,0,0,1,0,", u += H + v + I + v + J + v + (M ? 1 + -J / M : 1) + ")", A[Ba] = u
                    };
                j = Fa.prototype, j.x = j.y = j.z = j.skewX = j.skewY = j.rotation = j.rotationX = j.rotationY = j.zOrigin = j.xPercent = j.yPercent = j.xOffset = j.yOffset = 0, j.scaleX = j.scaleY = j.scaleZ = 1, xa("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin", {
                    parser: function(a, b, c, d, f, h, i) {
                        if (d._lastParsedTransform === i) return f;
                        d._lastParsedTransform = i;
                        var j;
                        "function" == typeof i[c] && (j = i[c], i[c] = b);
                        var k, l, m, n, o, p, s, t, u, v = a._gsTransform,
                            w = a.style,
                            x = 1e-6,
                            y = Aa.length,
                            z = i,
                            A = {},
                            B = "transformOrigin",
                            C = Pa(a, e, !0, z.parseTransform),
                            D = z.transform && ("function" == typeof z.transform ? z.transform(r, q) : z.transform);
                        if (d._transform = C, D && "string" == typeof D && Ba) l = P.style, l[Ba] = D, l.display = "block", l.position = "absolute", N.body.appendChild(P), k = Pa(P, null, !1), C.svg && (p = C.xOrigin, s = C.yOrigin, k.x -= C.xOffset, k.y -= C.yOffset, (z.transformOrigin || z.svgOrigin) && (D = {}, Ka(a, ga(z.transformOrigin), D, z.svgOrigin, z.smoothOrigin, !0), p = D.xOrigin, s = D.yOrigin, k.x -= D.xOffset - C.xOffset, k.y -= D.yOffset - C.yOffset), (p || s) && (t = Oa(P, !0), k.x -= p - (p * t[0] + s * t[2]), k.y -= s - (p * t[1] + s * t[3]))), N.body.removeChild(P), k.perspective || (k.perspective = C.perspective), null != z.xPercent && (k.xPercent = ia(z.xPercent, C.xPercent)), null != z.yPercent && (k.yPercent = ia(z.yPercent, C.yPercent));
                        else if ("object" == typeof z) {
                            if (k = {
                                    scaleX: ia(null != z.scaleX ? z.scaleX : z.scale, C.scaleX),
                                    scaleY: ia(null != z.scaleY ? z.scaleY : z.scale, C.scaleY),
                                    scaleZ: ia(z.scaleZ, C.scaleZ),
                                    x: ia(z.x, C.x),
                                    y: ia(z.y, C.y),
                                    z: ia(z.z, C.z),
                                    xPercent: ia(z.xPercent, C.xPercent),
                                    yPercent: ia(z.yPercent, C.yPercent),
                                    perspective: ia(z.transformPerspective, C.perspective)
                                }, o = z.directionalRotation, null != o)
                                if ("object" == typeof o)
                                    for (l in o) z[l] = o[l];
                                else z.rotation = o;
                                "string" == typeof z.x && -1 !== z.x.indexOf("%") && (k.x = 0, k.xPercent = ia(z.x, C.xPercent)), "string" == typeof z.y && -1 !== z.y.indexOf("%") && (k.y = 0, k.yPercent = ia(z.y, C.yPercent)), k.rotation = ja("rotation" in z ? z.rotation : "shortRotation" in z ? z.shortRotation + "_short" : "rotationZ" in z ? z.rotationZ : C.rotation - C.skewY, C.rotation - C.skewY, "rotation", A), Ea && (k.rotationX = ja("rotationX" in z ? z.rotationX : "shortRotationX" in z ? z.shortRotationX + "_short" : C.rotationX || 0, C.rotationX, "rotationX", A), k.rotationY = ja("rotationY" in z ? z.rotationY : "shortRotationY" in z ? z.shortRotationY + "_short" : C.rotationY || 0, C.rotationY, "rotationY", A)), k.skewX = ja(z.skewX, C.skewX - C.skewY), (k.skewY = ja(z.skewY, C.skewY)) && (k.skewX += k.skewY, k.rotation += k.skewY)
                        }
                        for (Ea && null != z.force3D && (C.force3D = z.force3D, n = !0), C.skewType = z.skewType || C.skewType || g.defaultSkewType, m = C.force3D || C.z || C.rotationX || C.rotationY || k.z || k.rotationX || k.rotationY || k.perspective, m || null == z.scale || (k.scaleZ = 1); --y > -1;) u = Aa[y], D = k[u] - C[u], (D > x || -x > D || null != z[u] || null != M[u]) && (n = !0, f = new sa(C, u, C[u], D, f), u in A && (f.e = A[u]), f.xs0 = 0, f.plugin = h, d._overwriteProps.push(f.n));
                        return D = z.transformOrigin, C.svg && (D || z.svgOrigin) && (p = C.xOffset, s = C.yOffset, Ka(a, ga(D), k, z.svgOrigin, z.smoothOrigin), f = ta(C, "xOrigin", (v ? C : k).xOrigin, k.xOrigin, f, B), f = ta(C, "yOrigin", (v ? C : k).yOrigin, k.yOrigin, f, B), (p !== C.xOffset || s !== C.yOffset) && (f = ta(C, "xOffset", v ? p : C.xOffset, C.xOffset, f, B), f = ta(C, "yOffset", v ? s : C.yOffset, C.yOffset, f, B)), D = za ? null : "0px 0px"), (D || Ea && m && C.zOrigin) && (Ba ? (n = !0, u = Da, D = (D || $(a, u, e, !1, "50% 50%")) + "", f = new sa(w, u, 0, 0, f, (-1), B), f.b = w[u], f.plugin = h, Ea ? (l = C.zOrigin, D = D.split(" "), C.zOrigin = (D.length > 2 && (0 === l || "0px" !== D[2]) ? parseFloat(D[2]) : l) || 0, f.xs0 = f.e = D[0] + " " + (D[1] || "50%") + " 0px", f = new sa(C, "zOrigin", 0, 0, f, (-1), f.n), f.b = l, f.xs0 = f.e = C.zOrigin) : f.xs0 = f.e = D) : ga(D + "", C)), n && (d._transformType = C.svg && za || !m && 3 !== this._transformType ? 2 : 3), j && (i[c] = j), f
                    },
                    prefix: !0
                }), xa("boxShadow", {
                    defaultValue: "0px 0px 0px 0px #999",
                    prefix: !0,
                    color: !0,
                    multi: !0,
                    keyword: "inset"
                }), xa("borderRadius", {
                    defaultValue: "0px",
                    parser: function(a, b, c, f, g, h) {
                        b = this.format(b);
                        var i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y = ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomRightRadius", "borderBottomLeftRadius"],
                            z = a.style;
                        for (q = parseFloat(a.offsetWidth), r = parseFloat(a.offsetHeight), i = b.split(" "), j = 0; j < y.length; j++) this.p.indexOf("border") && (y[j] = Y(y[j])), m = l = $(a, y[j], e, !1, "0px"), -1 !== m.indexOf(" ") && (l = m.split(" "), m = l[0], l = l[1]), n = k = i[j], o = parseFloat(m), t = m.substr((o + "").length), u = "=" === n.charAt(1), u ? (p = parseInt(n.charAt(0) + "1", 10), n = n.substr(2), p *= parseFloat(n), s = n.substr((p + "").length - (0 > p ? 1 : 0)) || "") : (p = parseFloat(n), s = n.substr((p + "").length)), "" === s && (s = d[c] || t), s !== t && (v = _(a, "borderLeft", o, t), w = _(a, "borderTop", o, t), "%" === s ? (m = v / q * 100 + "%", l = w / r * 100 + "%") : "em" === s ? (x = _(a, "borderLeft", 1, "em"), m = v / x + "em", l = w / x + "em") : (m = v + "px", l = w + "px"), u && (n = parseFloat(m) + p + s, k = parseFloat(l) + p + s)), g = ua(z, y[j], m + " " + l, n + " " + k, !1, "0px", g);
                        return g
                    },
                    prefix: !0,
                    formatter: pa("0px 0px 0px 0px", !1, !0)
                }), xa("borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius", {
                    defaultValue: "0px",
                    parser: function(a, b, c, d, f, g) {
                        return ua(a.style, c, this.format($(a, c, e, !1, "0px 0px")), this.format(b), !1, "0px", f)
                    },
                    prefix: !0,
                    formatter: pa("0px 0px", !1, !0)
                }), xa("backgroundPosition", {
                    defaultValue: "0 0",
                    parser: function(a, b, c, d, f, g) {
                        var h, i, j, k, l, m, n = "background-position",
                            o = e || Z(a, null),
                            q = this.format((o ? p ? o.getPropertyValue(n + "-x") + " " + o.getPropertyValue(n + "-y") : o.getPropertyValue(n) : a.currentStyle.backgroundPositionX + " " + a.currentStyle.backgroundPositionY) || "0 0"),
                            r = this.format(b);
                        if (-1 !== q.indexOf("%") != (-1 !== r.indexOf("%")) && r.split(",").length < 2 && (m = $(a, "backgroundImage").replace(D, ""), m && "none" !== m)) {
                            for (h = q.split(" "), i = r.split(" "), Q.setAttribute("src", m), j = 2; --j > -1;) q = h[j], k = -1 !== q.indexOf("%"), k !== (-1 !== i[j].indexOf("%")) && (l = 0 === j ? a.offsetWidth - Q.width : a.offsetHeight - Q.height, h[j] = k ? parseFloat(q) / 100 * l + "px" : parseFloat(q) / l * 100 + "%");
                            q = h.join(" ")
                        }
                        return this.parseComplex(a.style, q, r, f, g)
                    },
                    formatter: ga
                }), xa("backgroundSize", {
                    defaultValue: "0 0",
                    formatter: function(a) {
                        return a += "", ga(-1 === a.indexOf(" ") ? a + " " + a : a)
                    }
                }), xa("perspective", {
                    defaultValue: "0px",
                    prefix: !0
                }), xa("perspectiveOrigin", {
                    defaultValue: "50% 50%",
                    prefix: !0
                }), xa("transformStyle", {
                    prefix: !0
                }), xa("backfaceVisibility", {
                    prefix: !0
                }), xa("userSelect", {
                    prefix: !0
                }), xa("margin", {
                    parser: qa("marginTop,marginRight,marginBottom,marginLeft")
                }), xa("padding", {
                    parser: qa("paddingTop,paddingRight,paddingBottom,paddingLeft")
                }), xa("clip", {
                    defaultValue: "rect(0px,0px,0px,0px)",
                    parser: function(a, b, c, d, f, g) {
                        var h, i, j;
                        return 9 > p ? (i = a.currentStyle, j = 8 > p ? " " : ",", h = "rect(" + i.clipTop + j + i.clipRight + j + i.clipBottom + j + i.clipLeft + ")", b = this.format(b).split(",").join(j)) : (h = this.format($(a, this.p, e, !1, this.dflt)), b = this.format(b)), this.parseComplex(a.style, h, b, f, g)
                    }
                }), xa("textShadow", {
                    defaultValue: "0px 0px 0px #999",
                    color: !0,
                    multi: !0
                }), xa("autoRound,strictUnits", {
                    parser: function(a, b, c, d, e) {
                        return e
                    }
                }), xa("border", {
                    defaultValue: "0px solid #000",
                    parser: function(a, b, c, d, f, g) {
                        var h = $(a, "borderTopWidth", e, !1, "0px"),
                            i = this.format(b).split(" "),
                            j = i[0].replace(w, "");
                        return "px" !== j && (h = parseFloat(h) / _(a, "borderTopWidth", 1, j) + j), this.parseComplex(a.style, this.format(h + " " + $(a, "borderTopStyle", e, !1, "solid") + " " + $(a, "borderTopColor", e, !1, "#000")), i.join(" "), f, g)
                    },
                    color: !0,
                    formatter: function(a) {
                        var b = a.split(" ");
                        return b[0] + " " + (b[1] || "solid") + " " + (a.match(oa) || ["#000"])[0]
                    }
                }), xa("borderWidth", {
                    parser: qa("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")
                }), xa("float,cssFloat,styleFloat", {
                    parser: function(a, b, c, d, e, f) {
                        var g = a.style,
                            h = "cssFloat" in g ? "cssFloat" : "styleFloat";
                        return new sa(g, h, 0, 0, e, (-1), c, (!1), 0, g[h], b)
                    }
                });
                var Sa = function(a) {
                    var b, c = this.t,
                        d = c.filter || $(this.data, "filter") || "",
                        e = this.s + this.c * a | 0;
                    100 === e && (-1 === d.indexOf("atrix(") && -1 === d.indexOf("radient(") && -1 === d.indexOf("oader(") ? (c.removeAttribute("filter"), b = !$(this.data, "filter")) : (c.filter = d.replace(z, ""), b = !0)), b || (this.xn1 && (c.filter = d = d || "alpha(opacity=" + e + ")"), -1 === d.indexOf("pacity") ? 0 === e && this.xn1 || (c.filter = d + " alpha(opacity=" + e + ")") : c.filter = d.replace(x, "opacity=" + e))
                };
                xa("opacity,alpha,autoAlpha", {
                    defaultValue: "1",
                    parser: function(a, b, c, d, f, g) {
                        var h = parseFloat($(a, "opacity", e, !1, "1")),
                            i = a.style,
                            j = "autoAlpha" === c;
                        return "string" == typeof b && "=" === b.charAt(1) && (b = ("-" === b.charAt(0) ? -1 : 1) * parseFloat(b.substr(2)) + h), j && 1 === h && "hidden" === $(a, "visibility", e) && 0 !== b && (h = 0), T ? f = new sa(i, "opacity", h, b - h, f) : (f = new sa(i, "opacity", 100 * h, 100 * (b - h), f), f.xn1 = j ? 1 : 0, i.zoom = 1, f.type = 2, f.b = "alpha(opacity=" + f.s + ")", f.e = "alpha(opacity=" + (f.s + f.c) + ")", f.data = a, f.plugin = g, f.setRatio = Sa), j && (f = new sa(i, "visibility", 0, 0, f, (-1), null, (!1), 0, 0 !== h ? "inherit" : "hidden", 0 === b ? "hidden" : "inherit"), f.xs0 = "inherit", d._overwriteProps.push(f.n), d._overwriteProps.push(c)), f
                    }
                });
                var Ta = function(a, b) {
                        b && (a.removeProperty ? (("ms" === b.substr(0, 2) || "webkit" === b.substr(0, 6)) && (b = "-" + b), a.removeProperty(b.replace(B, "-$1").toLowerCase())) : a.removeAttribute(b))
                    },
                    Ua = function(a) {
                        if (this.t._gsClassPT = this, 1 === a || 0 === a) {
                            this.t.setAttribute("class", 0 === a ? this.b : this.e);
                            for (var b = this.data, c = this.t.style; b;) b.v ? c[b.p] = b.v : Ta(c, b.p), b = b._next;
                            1 === a && this.t._gsClassPT === this && (this.t._gsClassPT = null)
                        } else this.t.getAttribute("class") !== this.e && this.t.setAttribute("class", this.e)
                    };
                xa("className", {
                    parser: function(a, b, d, f, g, h, i) {
                        var j, k, l, m, n, o = a.getAttribute("class") || "",
                            p = a.style.cssText;
                        if (g = f._classNamePT = new sa(a, d, 0, 0, g, 2), g.setRatio = Ua, g.pr = -11, c = !0, g.b = o, k = ba(a, e), l = a._gsClassPT) {
                            for (m = {}, n = l.data; n;) m[n.p] = 1, n = n._next;
                            l.setRatio(1)
                        }
                        return a._gsClassPT = g, g.e = "=" !== b.charAt(1) ? b : o.replace(new RegExp("(?:\\s|^)" + b.substr(2) + "(?![\\w-])"), "") + ("+" === b.charAt(0) ? " " + b.substr(2) : ""), a.setAttribute("class", g.e), j = ca(a, k, ba(a), i, m), a.setAttribute("class", o), g.data = j.firstMPT, a.style.cssText = p, g = g.xfirst = f.parse(a, j.difs, g, h)
                    }
                });
                var Va = function(a) {
                    if ((1 === a || 0 === a) && this.data._totalTime === this.data._totalDuration && "isFromStart" !== this.data.data) {
                        var b, c, d, e, f, g = this.t.style,
                            h = i.transform.parse;
                        if ("all" === this.e) g.cssText = "", e = !0;
                        else
                            for (b = this.e.split(" ").join("").split(","), d = b.length; --d > -1;) c = b[d], i[c] && (i[c].parse === h ? e = !0 : c = "transformOrigin" === c ? Da : i[c].p), Ta(g, c);
                        e && (Ta(g, Ba), f = this.t._gsTransform, f && (f.svg && (this.t.removeAttribute("data-svg-origin"), this.t.removeAttribute("transform")), delete this.t._gsTransform))
                    }
                };
                for (xa("clearProps", {
                        parser: function(a, b, d, e, f) {
                            return f = new sa(a, d, 0, 0, f, 2), f.setRatio = Va, f.e = b, f.pr = -10, f.data = e._tween, c = !0, f
                        }
                    }), j = "bezier,throwProps,physicsProps,physics2D".split(","), va = j.length; va--;) ya(j[va]);
                j = g.prototype, j._firstPT = j._lastParsedTransform = j._transform = null, j._onInitTween = function(a, b, h, j) {
                    if (!a.nodeType) return !1;
                    this._target = q = a, this._tween = h, this._vars = b, r = j, k = b.autoRound, c = !1, d = b.suffixMap || g.suffixMap, e = Z(a, ""), f = this._overwriteProps;
                    var n, p, s, t, u, v, w, x, z, A = a.style;
                    if (l && "" === A.zIndex && (n = $(a, "zIndex", e), ("auto" === n || "" === n) && this._addLazySet(A, "zIndex", 0)), "string" == typeof b && (t = A.cssText, n = ba(a, e), A.cssText = t + ";" + b, n = ca(a, n, ba(a)).difs, !T && y.test(b) && (n.opacity = parseFloat(RegExp.$1)), b = n, A.cssText = t), b.className ? this._firstPT = p = i.className.parse(a, b.className, "className", this, null, null, b) : this._firstPT = p = this.parse(a, b, null), this._transformType) {
                        for (z = 3 === this._transformType, Ba ? m && (l = !0, "" === A.zIndex && (w = $(a, "zIndex", e), ("auto" === w || "" === w) && this._addLazySet(A, "zIndex", 0)), o && this._addLazySet(A, "WebkitBackfaceVisibility", this._vars.WebkitBackfaceVisibility || (z ? "visible" : "hidden"))) : A.zoom = 1, s = p; s && s._next;) s = s._next;
                        x = new sa(a, "transform", 0, 0, null, 2), this._linkCSSP(x, null, s), x.setRatio = Ba ? Ra : Qa, x.data = this._transform || Pa(a, e, !0), x.tween = h, x.pr = -1, f.pop()
                    }
                    if (c) {
                        for (; p;) {
                            for (v = p._next, s = t; s && s.pr > p.pr;) s = s._next;
                            (p._prev = s ? s._prev : u) ? p._prev._next = p: t = p, (p._next = s) ? s._prev = p : u = p, p = v
                        }
                        this._firstPT = t
                    }
                    return !0
                }, j.parse = function(a, b, c, f) {
                    var g, h, j, l, m, n, o, p, s, t, u = a.style;
                    for (g in b) n = b[g], "function" == typeof n && (n = n(r, q)), h = i[g], h ? c = h.parse(a, n, g, this, c, f, b) : (m = $(a, g, e) + "", s = "string" == typeof n, "color" === g || "fill" === g || "stroke" === g || -1 !== g.indexOf("Color") || s && A.test(n) ? (s || (n = ma(n), n = (n.length > 3 ? "rgba(" : "rgb(") + n.join(",") + ")"), c = ua(u, g, m, n, !0, "transparent", c, 0, f)) : s && J.test(n) ? c = ua(u, g, m, n, !0, null, c, 0, f) : (j = parseFloat(m), o = j || 0 === j ? m.substr((j + "").length) : "", ("" === m || "auto" === m) && ("width" === g || "height" === g ? (j = fa(a, g, e), o = "px") : "left" === g || "top" === g ? (j = aa(a, g, e), o = "px") : (j = "opacity" !== g ? 0 : 1, o = "")), t = s && "=" === n.charAt(1), t ? (l = parseInt(n.charAt(0) + "1", 10), n = n.substr(2), l *= parseFloat(n), p = n.replace(w, "")) : (l = parseFloat(n), p = s ? n.replace(w, "") : ""), "" === p && (p = g in d ? d[g] : o), n = l || 0 === l ? (t ? l + j : l) + p : b[g], o !== p && "" !== p && (l || 0 === l) && j && (j = _(a, g, j, o), "%" === p ? (j /= _(a, g, 100, "%") / 100, b.strictUnits !== !0 && (m = j + "%")) : "em" === p || "rem" === p || "vw" === p || "vh" === p ? j /= _(a, g, 1, p) : "px" !== p && (l = _(a, g, l, p), p = "px"), t && (l || 0 === l) && (n = l + j + p)), t && (l += j), !j && 0 !== j || !l && 0 !== l ? void 0 !== u[g] && (n || n + "" != "NaN" && null != n) ? (c = new sa(u, g, l || j || 0, 0, c, (-1), g, (!1), 0, m, n), c.xs0 = "none" !== n || "display" !== g && -1 === g.indexOf("Style") ? n : m) : V("invalid " + g + " tween value: " + b[g]) : (c = new sa(u, g, j, l - j, c, 0, g, k !== !1 && ("px" === p || "zIndex" === g), 0, m, n), c.xs0 = p))), f && c && !c.plugin && (c.plugin = f);
                    return c
                }, j.setRatio = function(a) {
                    var b, c, d, e = this._firstPT,
                        f = 1e-6;
                    if (1 !== a || this._tween._time !== this._tween._duration && 0 !== this._tween._time)
                        if (a || this._tween._time !== this._tween._duration && 0 !== this._tween._time || this._tween._rawPrevTime === -1e-6)
                            for (; e;) {
                                if (b = e.c * a + e.s, e.r ? b = Math.round(b) : f > b && b > -f && (b = 0), e.type)
                                    if (1 === e.type)
                                        if (d = e.l, 2 === d) e.t[e.p] = e.xs0 + b + e.xs1 + e.xn1 + e.xs2;
                                        else if (3 === d) e.t[e.p] = e.xs0 + b + e.xs1 + e.xn1 + e.xs2 + e.xn2 + e.xs3;
                                else if (4 === d) e.t[e.p] = e.xs0 + b + e.xs1 + e.xn1 + e.xs2 + e.xn2 + e.xs3 + e.xn3 + e.xs4;
                                else if (5 === d) e.t[e.p] = e.xs0 + b + e.xs1 + e.xn1 + e.xs2 + e.xn2 + e.xs3 + e.xn3 + e.xs4 + e.xn4 + e.xs5;
                                else {
                                    for (c = e.xs0 + b + e.xs1, d = 1; d < e.l; d++) c += e["xn" + d] + e["xs" + (d + 1)];
                                    e.t[e.p] = c
                                } else -1 === e.type ? e.t[e.p] = e.xs0 : e.setRatio && e.setRatio(a);
                                else e.t[e.p] = b + e.xs0;
                                e = e._next
                            } else
                                for (; e;) 2 !== e.type ? e.t[e.p] = e.b : e.setRatio(a), e = e._next;
                        else
                            for (; e;) {
                                if (2 !== e.type)
                                    if (e.r && -1 !== e.type)
                                        if (b = Math.round(e.s + e.c), e.type) {
                                            if (1 === e.type) {
                                                for (d = e.l, c = e.xs0 + b + e.xs1, d = 1; d < e.l; d++) c += e["xn" + d] + e["xs" + (d + 1)];
                                                e.t[e.p] = c
                                            }
                                        } else e.t[e.p] = b + e.xs0;
                                else e.t[e.p] = e.e;
                                else e.setRatio(a);
                                e = e._next
                            }
                }, j._enableTransforms = function(a) {
                    this._transform = this._transform || Pa(this._target, e, !0), this._transformType = this._transform.svg && za || !a && 3 !== this._transformType ? 2 : 3
                };
                var Wa = function(a) {
                    this.t[this.p] = this.e, this.data._linkCSSP(this, this._next, null, !0)
                };
                j._addLazySet = function(a, b, c) {
                    var d = this._firstPT = new sa(a, b, 0, 0, this._firstPT, 2);
                    d.e = c, d.setRatio = Wa, d.data = this
                }, j._linkCSSP = function(a, b, c, d) {
                    return a && (b && (b._prev = a), a._next && (a._next._prev = a._prev), a._prev ? a._prev._next = a._next : this._firstPT === a && (this._firstPT = a._next, d = !0), c ? c._next = a : d || null !== this._firstPT || (this._firstPT = a), a._next = b, a._prev = c), a
                }, j._mod = function(a) {
                    for (var b = this._firstPT; b;) "function" == typeof a[b.p] && a[b.p] === Math.round && (b.r = 1), b = b._next
                }, j._kill = function(b) {
                    var c, d, e, f = b;
                    if (b.autoAlpha || b.alpha) {
                        f = {};
                        for (d in b) f[d] = b[d];
                        f.opacity = 1, f.autoAlpha && (f.visibility = 1)
                    }
                    for (b.className && (c = this._classNamePT) && (e = c.xfirst, e && e._prev ? this._linkCSSP(e._prev, c._next, e._prev._prev) : e === this._firstPT && (this._firstPT = c._next), c._next && this._linkCSSP(c._next, c._next._next, e._prev), this._classNamePT = null), c = this._firstPT; c;) c.plugin && c.plugin !== d && c.plugin._kill && (c.plugin._kill(b), d = c.plugin), c = c._next;
                    return a.prototype._kill.call(this, f)
                };
                var Xa = function(a, b, c) {
                    var d, e, f, g;
                    if (a.slice)
                        for (e = a.length; --e > -1;) Xa(a[e], b, c);
                    else
                        for (d = a.childNodes, e = d.length; --e > -1;) f = d[e], g = f.type, f.style && (b.push(ba(f)), c && c.push(f)), 1 !== g && 9 !== g && 11 !== g || !f.childNodes.length || Xa(f, b, c)
                };
                return g.cascadeTo = function(a, c, d) {
                    var e, f, g, h, i = b.to(a, c, d),
                        j = [i],
                        k = [],
                        l = [],
                        m = [],
                        n = b._internals.reservedProps;
                    for (a = i._targets || i.target, Xa(a, k, m), i.render(c, !0, !0), Xa(a, l), i.render(0, !0, !0), i._enabled(!0), e = m.length; --e > -1;)
                        if (f = ca(m[e], k[e], l[e]), f.firstMPT) {
                            f = f.difs;
                            for (g in d) n[g] && (f[g] = d[g]);
                            h = {};
                            for (g in f) h[g] = k[e][g];
                            j.push(b.fromTo(m[e], c, h, f))
                        }
                    return j
                }, a.activate([g]), g
            }, !0),
            function() {
                var a = _gsScope._gsDefine.plugin({
                        propName: "roundProps",
                        version: "1.6.0",
                        priority: -1,
                        API: 2,
                        init: function(a, b, c) {
                            return this._tween = c, !0
                        }
                    }),
                    b = function(a) {
                        for (; a;) a.f || a.blob || (a.m = Math.round), a = a._next
                    },
                    c = a.prototype;
                c._onInitAllProps = function() {
                    for (var a, c, d, e = this._tween, f = e.vars.roundProps.join ? e.vars.roundProps : e.vars.roundProps.split(","), g = f.length, h = {}, i = e._propLookup.roundProps; --g > -1;) h[f[g]] = Math.round;
                    for (g = f.length; --g > -1;)
                        for (a = f[g], c = e._firstPT; c;) d = c._next, c.pg ? c.t._mod(h) : c.n === a && (2 === c.f && c.t ? b(c.t._firstPT) : (this._add(c.t, a, c.s, c.c), d && (d._prev = c._prev), c._prev ? c._prev._next = d : e._firstPT === c && (e._firstPT = d), c._next = c._prev = null, e._propLookup[a] = i)), c = d;
                    return !1
                }, c._add = function(a, b, c, d) {
                    this._addTween(a, b, c, c + d, b, Math.round), this._overwriteProps.push(b)
                }
            }(),
            function() {
                _gsScope._gsDefine.plugin({
                    propName: "attr",
                    API: 2,
                    version: "0.6.0",
                    init: function(a, b, c, d) {
                        var e, f;
                        if ("function" != typeof a.setAttribute) return !1;
                        for (e in b) f = b[e], "function" == typeof f && (f = f(d, a)), this._addTween(a, "setAttribute", a.getAttribute(e) + "", f + "", e, !1, e), this._overwriteProps.push(e);
                        return !0
                    }
                })
            }(), _gsScope._gsDefine.plugin({
                propName: "directionalRotation",
                version: "0.3.0",
                API: 2,
                init: function(a, b, c, d) {
                    "object" != typeof b && (b = {
                        rotation: b
                    }), this.finals = {};
                    var e, f, g, h, i, j, k = b.useRadians === !0 ? 2 * Math.PI : 360,
                        l = 1e-6;
                    for (e in b) "useRadians" !== e && (h = b[e], "function" == typeof h && (h = h(d, a)), j = (h + "").split("_"), f = j[0], g = parseFloat("function" != typeof a[e] ? a[e] : a[e.indexOf("set") || "function" != typeof a["get" + e.substr(3)] ? e : "get" + e.substr(3)]()), h = this.finals[e] = "string" == typeof f && "=" === f.charAt(1) ? g + parseInt(f.charAt(0) + "1", 10) * Number(f.substr(2)) : Number(f) || 0, i = h - g, j.length && (f = j.join("_"), -1 !== f.indexOf("short") && (i %= k, i !== i % (k / 2) && (i = 0 > i ? i + k : i - k)), -1 !== f.indexOf("_cw") && 0 > i ? i = (i + 9999999999 * k) % k - (i / k | 0) * k : -1 !== f.indexOf("ccw") && i > 0 && (i = (i - 9999999999 * k) % k - (i / k | 0) * k)), (i > l || -l > i) && (this._addTween(a, e, g, g + i, e), this._overwriteProps.push(e)));
                    return !0
                },
                set: function(a) {
                    var b;
                    if (1 !== a) this._super.setRatio.call(this, a);
                    else
                        for (b = this._firstPT; b;) b.f ? b.t[b.p](this.finals[b.p]) : b.t[b.p] = this.finals[b.p], b = b._next
                }
            })._autoCSS = !0, _gsScope._gsDefine("easing.Back", ["easing.Ease"], function(a) {
                var b, c, d, e = _gsScope.GreenSockGlobals || _gsScope,
                    f = e.com.greensock,
                    g = 2 * Math.PI,
                    h = Math.PI / 2,
                    i = f._class,
                    j = function(b, c) {
                        var d = i("easing." + b, function() {}, !0),
                            e = d.prototype = new a;
                        return e.constructor = d, e.getRatio = c, d
                    },
                    k = a.register || function() {},
                    l = function(a, b, c, d, e) {
                        var f = i("easing." + a, {
                            easeOut: new b,
                            easeIn: new c,
                            easeInOut: new d
                        }, !0);
                        return k(f, a), f
                    },
                    m = function(a, b, c) {
                        this.t = a, this.v = b, c && (this.next = c, c.prev = this, this.c = c.v - b, this.gap = c.t - a)
                    },
                    n = function(b, c) {
                        var d = i("easing." + b, function(a) {
                                this._p1 = a || 0 === a ? a : 1.70158, this._p2 = 1.525 * this._p1
                            }, !0),
                            e = d.prototype = new a;
                        return e.constructor = d, e.getRatio = c, e.config = function(a) {
                            return new d(a)
                        }, d
                    },
                    o = l("Back", n("BackOut", function(a) {
                        return (a -= 1) * a * ((this._p1 + 1) * a + this._p1) + 1
                    }), n("BackIn", function(a) {
                        return a * a * ((this._p1 + 1) * a - this._p1)
                    }), n("BackInOut", function(a) {
                        return (a *= 2) < 1 ? .5 * a * a * ((this._p2 + 1) * a - this._p2) : .5 * ((a -= 2) * a * ((this._p2 + 1) * a + this._p2) + 2)
                    })),
                    p = i("easing.SlowMo", function(a, b, c) {
                        b = b || 0 === b ? b : .7, null == a ? a = .7 : a > 1 && (a = 1), this._p = 1 !== a ? b : 0, this._p1 = (1 - a) / 2, this._p2 = a, this._p3 = this._p1 + this._p2, this._calcEnd = c === !0
                    }, !0),
                    q = p.prototype = new a;
                return q.constructor = p, q.getRatio = function(a) {
                    var b = a + (.5 - a) * this._p;
                    return a < this._p1 ? this._calcEnd ? 1 - (a = 1 - a / this._p1) * a : b - (a = 1 - a / this._p1) * a * a * a * b : a > this._p3 ? this._calcEnd ? 1 - (a = (a - this._p3) / this._p1) * a : b + (a - b) * (a = (a - this._p3) / this._p1) * a * a * a : this._calcEnd ? 1 : b
                }, p.ease = new p(.7, .7), q.config = p.config = function(a, b, c) {
                    return new p(a, b, c)
                }, b = i("easing.SteppedEase", function(a) {
                    a = a || 1, this._p1 = 1 / a, this._p2 = a + 1
                }, !0), q = b.prototype = new a, q.constructor = b, q.getRatio = function(a) {
                    return 0 > a ? a = 0 : a >= 1 && (a = .999999999), (this._p2 * a >> 0) * this._p1
                }, q.config = b.config = function(a) {
                    return new b(a)
                }, c = i("easing.RoughEase", function(b) {
                    b = b || {};
                    for (var c, d, e, f, g, h, i = b.taper || "none", j = [], k = 0, l = 0 | (b.points || 20), n = l, o = b.randomize !== !1, p = b.clamp === !0, q = b.template instanceof a ? b.template : null, r = "number" == typeof b.strength ? .4 * b.strength : .4; --n > -1;) c = o ? Math.random() : 1 / l * n, d = q ? q.getRatio(c) : c, "none" === i ? e = r : "out" === i ? (f = 1 - c, e = f * f * r) : "in" === i ? e = c * c * r : .5 > c ? (f = 2 * c, e = f * f * .5 * r) : (f = 2 * (1 - c), e = f * f * .5 * r), o ? d += Math.random() * e - .5 * e : n % 2 ? d += .5 * e : d -= .5 * e, p && (d > 1 ? d = 1 : 0 > d && (d = 0)), j[k++] = {
                        x: c,
                        y: d
                    };
                    for (j.sort(function(a, b) {
                            return a.x - b.x
                        }), h = new m(1, 1, null), n = l; --n > -1;) g = j[n], h = new m(g.x, g.y, h);
                    this._prev = new m(0, 0, 0 !== h.t ? h : h.next)
                }, !0), q = c.prototype = new a, q.constructor = c, q.getRatio = function(a) {
                    var b = this._prev;
                    if (a > b.t) {
                        for (; b.next && a >= b.t;) b = b.next;
                        b = b.prev
                    } else
                        for (; b.prev && a <= b.t;) b = b.prev;
                    return this._prev = b, b.v + (a - b.t) / b.gap * b.c
                }, q.config = function(a) {
                    return new c(a)
                }, c.ease = new c, l("Bounce", j("BounceOut", function(a) {
                    return 1 / 2.75 > a ? 7.5625 * a * a : 2 / 2.75 > a ? 7.5625 * (a -= 1.5 / 2.75) * a + .75 : 2.5 / 2.75 > a ? 7.5625 * (a -= 2.25 / 2.75) * a + .9375 : 7.5625 * (a -= 2.625 / 2.75) * a + .984375
                }), j("BounceIn", function(a) {
                    return (a = 1 - a) < 1 / 2.75 ? 1 - 7.5625 * a * a : 2 / 2.75 > a ? 1 - (7.5625 * (a -= 1.5 / 2.75) * a + .75) : 2.5 / 2.75 > a ? 1 - (7.5625 * (a -= 2.25 / 2.75) * a + .9375) : 1 - (7.5625 * (a -= 2.625 / 2.75) * a + .984375)
                }), j("BounceInOut", function(a) {
                    var b = .5 > a;
                    return a = b ? 1 - 2 * a : 2 * a - 1, a = 1 / 2.75 > a ? 7.5625 * a * a : 2 / 2.75 > a ? 7.5625 * (a -= 1.5 / 2.75) * a + .75 : 2.5 / 2.75 > a ? 7.5625 * (a -= 2.25 / 2.75) * a + .9375 : 7.5625 * (a -= 2.625 / 2.75) * a + .984375, b ? .5 * (1 - a) : .5 * a + .5
                })), l("Circ", j("CircOut", function(a) {
                    return Math.sqrt(1 - (a -= 1) * a)
                }), j("CircIn", function(a) {
                    return -(Math.sqrt(1 - a * a) - 1)
                }), j("CircInOut", function(a) {
                    return (a *= 2) < 1 ? -.5 * (Math.sqrt(1 - a * a) - 1) : .5 * (Math.sqrt(1 - (a -= 2) * a) + 1)
                })), d = function(b, c, d) {
                    var e = i("easing." + b, function(a, b) {
                            this._p1 = a >= 1 ? a : 1, this._p2 = (b || d) / (1 > a ? a : 1), this._p3 = this._p2 / g * (Math.asin(1 / this._p1) || 0), this._p2 = g / this._p2
                        }, !0),
                        f = e.prototype = new a;
                    return f.constructor = e, f.getRatio = c, f.config = function(a, b) {
                        return new e(a, b)
                    }, e
                }, l("Elastic", d("ElasticOut", function(a) {
                    return this._p1 * Math.pow(2, -10 * a) * Math.sin((a - this._p3) * this._p2) + 1
                }, .3), d("ElasticIn", function(a) {
                    return -(this._p1 * Math.pow(2, 10 * (a -= 1)) * Math.sin((a - this._p3) * this._p2))
                }, .3), d("ElasticInOut", function(a) {
                    return (a *= 2) < 1 ? -.5 * (this._p1 * Math.pow(2, 10 * (a -= 1)) * Math.sin((a - this._p3) * this._p2)) : this._p1 * Math.pow(2, -10 * (a -= 1)) * Math.sin((a - this._p3) * this._p2) * .5 + 1
                }, .45)), l("Expo", j("ExpoOut", function(a) {
                    return 1 - Math.pow(2, -10 * a)
                }), j("ExpoIn", function(a) {
                    return Math.pow(2, 10 * (a - 1)) - .001
                }), j("ExpoInOut", function(a) {
                    return (a *= 2) < 1 ? .5 * Math.pow(2, 10 * (a - 1)) : .5 * (2 - Math.pow(2, -10 * (a - 1)))
                })), l("Sine", j("SineOut", function(a) {
                    return Math.sin(a * h)
                }), j("SineIn", function(a) {
                    return -Math.cos(a * h) + 1
                }), j("SineInOut", function(a) {
                    return -.5 * (Math.cos(Math.PI * a) - 1)
                })), i("easing.EaseLookup", {
                    find: function(b) {
                        return a.map[b]
                    }
                }, !0), k(e.SlowMo, "SlowMo", "ease,"), k(c, "RoughEase", "ease,"), k(b, "SteppedEase", "ease,"), o
            }, !0)
    }), _gsScope._gsDefine && _gsScope._gsQueue.pop()(),
    function(a, b) {
        "use strict";
        var c = {},
            d = a.GreenSockGlobals = a.GreenSockGlobals || a;
        if (!d.TweenLite) {
            var e, f, g, h, i, j = function(a) {
                    var b, c = a.split("."),
                        e = d;
                    for (b = 0; b < c.length; b++) e[c[b]] = e = e[c[b]] || {};
                    return e
                },
                k = j("com.greensock"),
                l = 1e-10,
                m = function(a) {
                    var b, c = [],
                        d = a.length;
                    for (b = 0; b !== d; c.push(a[b++]));
                    return c
                },
                n = function() {},
                o = function() {
                    var a = Object.prototype.toString,
                        b = a.call([]);
                    return function(c) {
                        return null != c && (c instanceof Array || "object" == typeof c && !!c.push && a.call(c) === b);
                    }
                }(),
                p = {},
                q = function(e, f, g, h) {
                    this.sc = p[e] ? p[e].sc : [], p[e] = this, this.gsClass = null, this.func = g;
                    var i = [];
                    this.check = function(k) {
                        for (var l, m, n, o, r, s = f.length, t = s; --s > -1;)(l = p[f[s]] || new q(f[s], [])).gsClass ? (i[s] = l.gsClass, t--) : k && l.sc.push(this);
                        if (0 === t && g) {
                            if (m = ("com.greensock." + e).split("."), n = m.pop(), o = j(m.join("."))[n] = this.gsClass = g.apply(g, i), h)
                                if (d[n] = c[n] = o, r = "undefined" != typeof module && module.exports, !r && "function" == typeof define && define.amd) define((a.GreenSockAMDPath ? a.GreenSockAMDPath + "/" : "") + e.split(".").pop(), [], function() {
                                    return o
                                });
                                else if (r)
                                if (e === b) {
                                    module.exports = c[b] = o;
                                    for (s in c) o[s] = c[s]
                                } else c[b] && (c[b][n] = o);
                            for (s = 0; s < this.sc.length; s++) this.sc[s].check()
                        }
                    }, this.check(!0)
                },
                r = a._gsDefine = function(a, b, c, d) {
                    return new q(a, b, c, d)
                },
                s = k._class = function(a, b, c) {
                    return b = b || function() {}, r(a, [], function() {
                        return b
                    }, c), b
                };
            r.globals = d;
            var t = [0, 0, 1, 1],
                u = s("easing.Ease", function(a, b, c, d) {
                    this._func = a, this._type = c || 0, this._power = d || 0, this._params = b ? t.concat(b) : t
                }, !0),
                v = u.map = {},
                w = u.register = function(a, b, c, d) {
                    for (var e, f, g, h, i = b.split(","), j = i.length, l = (c || "easeIn,easeOut,easeInOut").split(","); --j > -1;)
                        for (f = i[j], e = d ? s("easing." + f, null, !0) : k.easing[f] || {}, g = l.length; --g > -1;) h = l[g], v[f + "." + h] = v[h + f] = e[h] = a.getRatio ? a : a[h] || new a
                };
            for (g = u.prototype, g._calcEnd = !1, g.getRatio = function(a) {
                    if (this._func) return this._params[0] = a, this._func.apply(null, this._params);
                    var b = this._type,
                        c = this._power,
                        d = 1 === b ? 1 - a : 2 === b ? a : .5 > a ? 2 * a : 2 * (1 - a);
                    return 1 === c ? d *= d : 2 === c ? d *= d * d : 3 === c ? d *= d * d * d : 4 === c && (d *= d * d * d * d), 1 === b ? 1 - d : 2 === b ? d : .5 > a ? d / 2 : 1 - d / 2
                }, e = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"], f = e.length; --f > -1;) g = e[f] + ",Power" + f, w(new u(null, null, 1, f), g, "easeOut", !0), w(new u(null, null, 2, f), g, "easeIn" + (0 === f ? ",easeNone" : "")), w(new u(null, null, 3, f), g, "easeInOut");
            v.linear = k.easing.Linear.easeIn, v.swing = k.easing.Quad.easeInOut;
            var x = s("events.EventDispatcher", function(a) {
                this._listeners = {}, this._eventTarget = a || this
            });
            g = x.prototype, g.addEventListener = function(a, b, c, d, e) {
                e = e || 0;
                var f, g, j = this._listeners[a],
                    k = 0;
                for (this !== h || i || h.wake(), null == j && (this._listeners[a] = j = []), g = j.length; --g > -1;) f = j[g], f.c === b && f.s === c ? j.splice(g, 1) : 0 === k && f.pr < e && (k = g + 1);
                j.splice(k, 0, {
                    c: b,
                    s: c,
                    up: d,
                    pr: e
                })
            }, g.removeEventListener = function(a, b) {
                var c, d = this._listeners[a];
                if (d)
                    for (c = d.length; --c > -1;)
                        if (d[c].c === b) return void d.splice(c, 1)
            }, g.dispatchEvent = function(a) {
                var b, c, d, e = this._listeners[a];
                if (e)
                    for (b = e.length, b > 1 && (e = e.slice(0)), c = this._eventTarget; --b > -1;) d = e[b], d && (d.up ? d.c.call(d.s || c, {
                        type: a,
                        target: c
                    }) : d.c.call(d.s || c))
            };
            var y = a.requestAnimationFrame,
                z = a.cancelAnimationFrame,
                A = Date.now || function() {
                    return (new Date).getTime()
                },
                B = A();
            for (e = ["ms", "moz", "webkit", "o"], f = e.length; --f > -1 && !y;) y = a[e[f] + "RequestAnimationFrame"], z = a[e[f] + "CancelAnimationFrame"] || a[e[f] + "CancelRequestAnimationFrame"];
            s("Ticker", function(a, b) {
                var c, d, e, f, g, j = this,
                    k = A(),
                    m = !(b === !1 || !y) && "auto",
                    o = 500,
                    p = 33,
                    q = "tick",
                    r = function(a) {
                        var b, h, i = A() - B;
                        i > o && (k += i - p), B += i, j.time = (B - k) / 1e3, b = j.time - g, (!c || b > 0 || a === !0) && (j.frame++, g += b + (b >= f ? .004 : f - b), h = !0), a !== !0 && (e = d(r)), h && j.dispatchEvent(q)
                    };
                x.call(j), j.time = j.frame = 0, j.tick = function() {
                    r(!0)
                }, j.lagSmoothing = function(a, b) {
                    o = a || 1 / l, p = Math.min(b, o, 0)
                }, j.sleep = function() {
                    null != e && (m && z ? z(e) : clearTimeout(e), d = n, e = null, j === h && (i = !1))
                }, j.wake = function(a) {
                    null !== e ? j.sleep() : a ? k += -B + (B = A()) : j.frame > 10 && (B = A() - o + 5), d = 0 === c ? n : m && y ? y : function(a) {
                        return setTimeout(a, 1e3 * (g - j.time) + 1 | 0)
                    }, j === h && (i = !0), r(2)
                }, j.fps = function(a) {
                    return arguments.length ? (c = a, f = 1 / (c || 60), g = this.time + f, void j.wake()) : c
                }, j.useRAF = function(a) {
                    return arguments.length ? (j.sleep(), m = a, void j.fps(c)) : m
                }, j.fps(a), setTimeout(function() {
                    "auto" === m && j.frame < 5 && "hidden" !== document.visibilityState && j.useRAF(!1)
                }, 1500)
            }), g = k.Ticker.prototype = new k.events.EventDispatcher, g.constructor = k.Ticker;
            var C = s("core.Animation", function(a, b) {
                if (this.vars = b = b || {}, this._duration = this._totalDuration = a || 0, this._delay = Number(b.delay) || 0, this._timeScale = 1, this._active = b.immediateRender === !0, this.data = b.data, this._reversed = b.reversed === !0, V) {
                    i || h.wake();
                    var c = this.vars.useFrames ? U : V;
                    c.add(this, c._time), this.vars.paused && this.paused(!0)
                }
            });
            h = C.ticker = new k.Ticker, g = C.prototype, g._dirty = g._gc = g._initted = g._paused = !1, g._totalTime = g._time = 0, g._rawPrevTime = -1, g._next = g._last = g._onUpdate = g._timeline = g.timeline = null, g._paused = !1;
            var D = function() {
                i && A() - B > 2e3 && h.wake(), setTimeout(D, 2e3)
            };
            D(), g.play = function(a, b) {
                return null != a && this.seek(a, b), this.reversed(!1).paused(!1)
            }, g.pause = function(a, b) {
                return null != a && this.seek(a, b), this.paused(!0)
            }, g.resume = function(a, b) {
                return null != a && this.seek(a, b), this.paused(!1)
            }, g.seek = function(a, b) {
                return this.totalTime(Number(a), b !== !1)
            }, g.restart = function(a, b) {
                return this.reversed(!1).paused(!1).totalTime(a ? -this._delay : 0, b !== !1, !0)
            }, g.reverse = function(a, b) {
                return null != a && this.seek(a || this.totalDuration(), b), this.reversed(!0).paused(!1)
            }, g.render = function(a, b, c) {}, g.invalidate = function() {
                return this._time = this._totalTime = 0, this._initted = this._gc = !1, this._rawPrevTime = -1, (this._gc || !this.timeline) && this._enabled(!0), this
            }, g.isActive = function() {
                var a, b = this._timeline,
                    c = this._startTime;
                return !b || !this._gc && !this._paused && b.isActive() && (a = b.rawTime()) >= c && a < c + this.totalDuration() / this._timeScale
            }, g._enabled = function(a, b) {
                return i || h.wake(), this._gc = !a, this._active = this.isActive(), b !== !0 && (a && !this.timeline ? this._timeline.add(this, this._startTime - this._delay) : !a && this.timeline && this._timeline._remove(this, !0)), !1
            }, g._kill = function(a, b) {
                return this._enabled(!1, !1)
            }, g.kill = function(a, b) {
                return this._kill(a, b), this
            }, g._uncache = function(a) {
                for (var b = a ? this : this.timeline; b;) b._dirty = !0, b = b.timeline;
                return this
            }, g._swapSelfInParams = function(a) {
                for (var b = a.length, c = a.concat(); --b > -1;) "{self}" === a[b] && (c[b] = this);
                return c
            }, g._callback = function(a) {
                var b = this.vars,
                    c = b[a],
                    d = b[a + "Params"],
                    e = b[a + "Scope"] || b.callbackScope || this,
                    f = d ? d.length : 0;
                switch (f) {
                    case 0:
                        c.call(e);
                        break;
                    case 1:
                        c.call(e, d[0]);
                        break;
                    case 2:
                        c.call(e, d[0], d[1]);
                        break;
                    default:
                        c.apply(e, d)
                }
            }, g.eventCallback = function(a, b, c, d) {
                if ("on" === (a || "").substr(0, 2)) {
                    var e = this.vars;
                    if (1 === arguments.length) return e[a];
                    null == b ? delete e[a] : (e[a] = b, e[a + "Params"] = o(c) && -1 !== c.join("").indexOf("{self}") ? this._swapSelfInParams(c) : c, e[a + "Scope"] = d), "onUpdate" === a && (this._onUpdate = b)
                }
                return this
            }, g.delay = function(a) {
                return arguments.length ? (this._timeline.smoothChildTiming && this.startTime(this._startTime + a - this._delay), this._delay = a, this) : this._delay
            }, g.duration = function(a) {
                return arguments.length ? (this._duration = this._totalDuration = a, this._uncache(!0), this._timeline.smoothChildTiming && this._time > 0 && this._time < this._duration && 0 !== a && this.totalTime(this._totalTime * (a / this._duration), !0), this) : (this._dirty = !1, this._duration)
            }, g.totalDuration = function(a) {
                return this._dirty = !1, arguments.length ? this.duration(a) : this._totalDuration
            }, g.time = function(a, b) {
                return arguments.length ? (this._dirty && this.totalDuration(), this.totalTime(a > this._duration ? this._duration : a, b)) : this._time
            }, g.totalTime = function(a, b, c) {
                if (i || h.wake(), !arguments.length) return this._totalTime;
                if (this._timeline) {
                    if (0 > a && !c && (a += this.totalDuration()), this._timeline.smoothChildTiming) {
                        this._dirty && this.totalDuration();
                        var d = this._totalDuration,
                            e = this._timeline;
                        if (a > d && !c && (a = d), this._startTime = (this._paused ? this._pauseTime : e._time) - (this._reversed ? d - a : a) / this._timeScale, e._dirty || this._uncache(!1), e._timeline)
                            for (; e._timeline;) e._timeline._time !== (e._startTime + e._totalTime) / e._timeScale && e.totalTime(e._totalTime, !0), e = e._timeline
                    }
                    this._gc && this._enabled(!0, !1), (this._totalTime !== a || 0 === this._duration) && (I.length && X(), this.render(a, b, !1), I.length && X())
                }
                return this
            }, g.progress = g.totalProgress = function(a, b) {
                var c = this.duration();
                return arguments.length ? this.totalTime(c * a, b) : c ? this._time / c : this.ratio
            }, g.startTime = function(a) {
                return arguments.length ? (a !== this._startTime && (this._startTime = a, this.timeline && this.timeline._sortChildren && this.timeline.add(this, a - this._delay)), this) : this._startTime
            }, g.endTime = function(a) {
                return this._startTime + (0 != a ? this.totalDuration() : this.duration()) / this._timeScale
            }, g.timeScale = function(a) {
                if (!arguments.length) return this._timeScale;
                if (a = a || l, this._timeline && this._timeline.smoothChildTiming) {
                    var b = this._pauseTime,
                        c = b || 0 === b ? b : this._timeline.totalTime();
                    this._startTime = c - (c - this._startTime) * this._timeScale / a
                }
                return this._timeScale = a, this._uncache(!1)
            }, g.reversed = function(a) {
                return arguments.length ? (a != this._reversed && (this._reversed = a, this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, !0)), this) : this._reversed
            }, g.paused = function(a) {
                if (!arguments.length) return this._paused;
                var b, c, d = this._timeline;
                return a != this._paused && d && (i || a || h.wake(), b = d.rawTime(), c = b - this._pauseTime, !a && d.smoothChildTiming && (this._startTime += c, this._uncache(!1)), this._pauseTime = a ? b : null, this._paused = a, this._active = this.isActive(), !a && 0 !== c && this._initted && this.duration() && (b = d.smoothChildTiming ? this._totalTime : (b - this._startTime) / this._timeScale, this.render(b, b === this._totalTime, !0))), this._gc && !a && this._enabled(!0, !1), this
            };
            var E = s("core.SimpleTimeline", function(a) {
                C.call(this, 0, a), this.autoRemoveChildren = this.smoothChildTiming = !0
            });
            g = E.prototype = new C, g.constructor = E, g.kill()._gc = !1, g._first = g._last = g._recent = null, g._sortChildren = !1, g.add = g.insert = function(a, b, c, d) {
                var e, f;
                if (a._startTime = Number(b || 0) + a._delay, a._paused && this !== a._timeline && (a._pauseTime = a._startTime + (this.rawTime() - a._startTime) / a._timeScale), a.timeline && a.timeline._remove(a, !0), a.timeline = a._timeline = this, a._gc && a._enabled(!0, !0), e = this._last, this._sortChildren)
                    for (f = a._startTime; e && e._startTime > f;) e = e._prev;
                return e ? (a._next = e._next, e._next = a) : (a._next = this._first, this._first = a), a._next ? a._next._prev = a : this._last = a, a._prev = e, this._recent = a, this._timeline && this._uncache(!0), this
            }, g._remove = function(a, b) {
                return a.timeline === this && (b || a._enabled(!1, !0), a._prev ? a._prev._next = a._next : this._first === a && (this._first = a._next), a._next ? a._next._prev = a._prev : this._last === a && (this._last = a._prev), a._next = a._prev = a.timeline = null, a === this._recent && (this._recent = this._last), this._timeline && this._uncache(!0)), this
            }, g.render = function(a, b, c) {
                var d, e = this._first;
                for (this._totalTime = this._time = this._rawPrevTime = a; e;) d = e._next, (e._active || a >= e._startTime && !e._paused) && (e._reversed ? e.render((e._dirty ? e.totalDuration() : e._totalDuration) - (a - e._startTime) * e._timeScale, b, c) : e.render((a - e._startTime) * e._timeScale, b, c)), e = d
            }, g.rawTime = function() {
                return i || h.wake(), this._totalTime
            };
            var F = s("TweenLite", function(b, c, d) {
                    if (C.call(this, c, d), this.render = F.prototype.render, null == b) throw "Cannot tween a null target.";
                    this.target = b = "string" != typeof b ? b : F.selector(b) || b;
                    var e, f, g, h = b.jquery || b.length && b !== a && b[0] && (b[0] === a || b[0].nodeType && b[0].style && !b.nodeType),
                        i = this.vars.overwrite;
                    if (this._overwrite = i = null == i ? T[F.defaultOverwrite] : "number" == typeof i ? i >> 0 : T[i], (h || b instanceof Array || b.push && o(b)) && "number" != typeof b[0])
                        for (this._targets = g = m(b), this._propLookup = [], this._siblings = [], e = 0; e < g.length; e++) f = g[e], f ? "string" != typeof f ? f.length && f !== a && f[0] && (f[0] === a || f[0].nodeType && f[0].style && !f.nodeType) ? (g.splice(e--, 1), this._targets = g = g.concat(m(f))) : (this._siblings[e] = Y(f, this, !1), 1 === i && this._siblings[e].length > 1 && $(f, this, null, 1, this._siblings[e])) : (f = g[e--] = F.selector(f), "string" == typeof f && g.splice(e + 1, 1)) : g.splice(e--, 1);
                    else this._propLookup = {}, this._siblings = Y(b, this, !1), 1 === i && this._siblings.length > 1 && $(b, this, null, 1, this._siblings);
                    (this.vars.immediateRender || 0 === c && 0 === this._delay && this.vars.immediateRender !== !1) && (this._time = -l, this.render(Math.min(0, -this._delay)))
                }, !0),
                G = function(b) {
                    return b && b.length && b !== a && b[0] && (b[0] === a || b[0].nodeType && b[0].style && !b.nodeType)
                },
                H = function(a, b) {
                    var c, d = {};
                    for (c in a) S[c] || c in b && "transform" !== c && "x" !== c && "y" !== c && "width" !== c && "height" !== c && "className" !== c && "border" !== c || !(!P[c] || P[c] && P[c]._autoCSS) || (d[c] = a[c], delete a[c]);
                    a.css = d
                };
            g = F.prototype = new C, g.constructor = F, g.kill()._gc = !1, g.ratio = 0, g._firstPT = g._targets = g._overwrittenProps = g._startAt = null, g._notifyPluginsOfEnabled = g._lazy = !1, F.version = "1.19.0", F.defaultEase = g._ease = new u(null, null, 1, 1), F.defaultOverwrite = "auto", F.ticker = h, F.autoSleep = 120, F.lagSmoothing = function(a, b) {
                h.lagSmoothing(a, b)
            }, F.selector = a.$ || a.jQuery || function(b) {
                var c = a.$ || a.jQuery;
                return c ? (F.selector = c, c(b)) : "undefined" == typeof document ? b : document.querySelectorAll ? document.querySelectorAll(b) : document.getElementById("#" === b.charAt(0) ? b.substr(1) : b)
            };
            var I = [],
                J = {},
                K = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,
                L = function(a) {
                    for (var b, c = this._firstPT, d = 1e-6; c;) b = c.blob ? a ? this.join("") : this.start : c.c * a + c.s, c.m ? b = c.m(b, this._target || c.t) : d > b && b > -d && (b = 0), c.f ? c.fp ? c.t[c.p](c.fp, b) : c.t[c.p](b) : c.t[c.p] = b, c = c._next
                },
                M = function(a, b, c, d) {
                    var e, f, g, h, i, j, k, l = [a, b],
                        m = 0,
                        n = "",
                        o = 0;
                    for (l.start = a, c && (c(l), a = l[0], b = l[1]), l.length = 0, e = a.match(K) || [], f = b.match(K) || [], d && (d._next = null, d.blob = 1, l._firstPT = l._applyPT = d), i = f.length, h = 0; i > h; h++) k = f[h], j = b.substr(m, b.indexOf(k, m) - m), n += j || !h ? j : ",", m += j.length, o ? o = (o + 1) % 5 : "rgba(" === j.substr(-5) && (o = 1), k === e[h] || e.length <= h ? n += k : (n && (l.push(n), n = ""), g = parseFloat(e[h]), l.push(g), l._firstPT = {
                        _next: l._firstPT,
                        t: l,
                        p: l.length - 1,
                        s: g,
                        c: ("=" === k.charAt(1) ? parseInt(k.charAt(0) + "1", 10) * parseFloat(k.substr(2)) : parseFloat(k) - g) || 0,
                        f: 0,
                        m: o && 4 > o ? Math.round : 0
                    }), m += k.length;
                    return n += b.substr(m), n && l.push(n), l.setRatio = L, l
                },
                N = function(a, b, c, d, e, f, g, h, i) {
                    "function" == typeof d && (d = d(i || 0, a));
                    var j, k, l = "get" === c ? a[b] : c,
                        m = typeof a[b],
                        n = "string" == typeof d && "=" === d.charAt(1),
                        o = {
                            t: a,
                            p: b,
                            s: l,
                            f: "function" === m,
                            pg: 0,
                            n: e || b,
                            m: f ? "function" == typeof f ? f : Math.round : 0,
                            pr: 0,
                            c: n ? parseInt(d.charAt(0) + "1", 10) * parseFloat(d.substr(2)) : parseFloat(d) - l || 0
                        };
                    return "number" !== m && ("function" === m && "get" === c && (k = b.indexOf("set") || "function" != typeof a["get" + b.substr(3)] ? b : "get" + b.substr(3), o.s = l = g ? a[k](g) : a[k]()), "string" == typeof l && (g || isNaN(l)) ? (o.fp = g, j = M(l, d, h || F.defaultStringFilter, o), o = {
                        t: j,
                        p: "setRatio",
                        s: 0,
                        c: 1,
                        f: 2,
                        pg: 0,
                        n: e || b,
                        pr: 0,
                        m: 0
                    }) : n || (o.s = parseFloat(l), o.c = parseFloat(d) - o.s || 0)), o.c ? ((o._next = this._firstPT) && (o._next._prev = o), this._firstPT = o, o) : void 0
                },
                O = F._internals = {
                    isArray: o,
                    isSelector: G,
                    lazyTweens: I,
                    blobDif: M
                },
                P = F._plugins = {},
                Q = O.tweenLookup = {},
                R = 0,
                S = O.reservedProps = {
                    ease: 1,
                    delay: 1,
                    overwrite: 1,
                    onComplete: 1,
                    onCompleteParams: 1,
                    onCompleteScope: 1,
                    useFrames: 1,
                    runBackwards: 1,
                    startAt: 1,
                    onUpdate: 1,
                    onUpdateParams: 1,
                    onUpdateScope: 1,
                    onStart: 1,
                    onStartParams: 1,
                    onStartScope: 1,
                    onReverseComplete: 1,
                    onReverseCompleteParams: 1,
                    onReverseCompleteScope: 1,
                    onRepeat: 1,
                    onRepeatParams: 1,
                    onRepeatScope: 1,
                    easeParams: 1,
                    yoyo: 1,
                    immediateRender: 1,
                    repeat: 1,
                    repeatDelay: 1,
                    data: 1,
                    paused: 1,
                    reversed: 1,
                    autoCSS: 1,
                    lazy: 1,
                    onOverwrite: 1,
                    callbackScope: 1,
                    stringFilter: 1,
                    id: 1
                },
                T = {
                    none: 0,
                    all: 1,
                    auto: 2,
                    concurrent: 3,
                    allOnStart: 4,
                    preexisting: 5,
                    true: 1,
                    false: 0
                },
                U = C._rootFramesTimeline = new E,
                V = C._rootTimeline = new E,
                W = 30,
                X = O.lazyRender = function() {
                    var a, b = I.length;
                    for (J = {}; --b > -1;) a = I[b], a && a._lazy !== !1 && (a.render(a._lazy[0], a._lazy[1], !0), a._lazy = !1);
                    I.length = 0
                };
            V._startTime = h.time, U._startTime = h.frame, V._active = U._active = !0, setTimeout(X, 1), C._updateRoot = F.render = function() {
                var a, b, c;
                if (I.length && X(), V.render((h.time - V._startTime) * V._timeScale, !1, !1), U.render((h.frame - U._startTime) * U._timeScale, !1, !1), I.length && X(), h.frame >= W) {
                    W = h.frame + (parseInt(F.autoSleep, 10) || 120);
                    for (c in Q) {
                        for (b = Q[c].tweens, a = b.length; --a > -1;) b[a]._gc && b.splice(a, 1);
                        0 === b.length && delete Q[c]
                    }
                    if (c = V._first, (!c || c._paused) && F.autoSleep && !U._first && 1 === h._listeners.tick.length) {
                        for (; c && c._paused;) c = c._next;
                        c || h.sleep()
                    }
                }
            }, h.addEventListener("tick", C._updateRoot);
            var Y = function(a, b, c) {
                    var d, e, f = a._gsTweenID;
                    if (Q[f || (a._gsTweenID = f = "t" + R++)] || (Q[f] = {
                            target: a,
                            tweens: []
                        }), b && (d = Q[f].tweens, d[e = d.length] = b, c))
                        for (; --e > -1;) d[e] === b && d.splice(e, 1);
                    return Q[f].tweens
                },
                Z = function(a, b, c, d) {
                    var e, f, g = a.vars.onOverwrite;
                    return g && (e = g(a, b, c, d)), g = F.onOverwrite, g && (f = g(a, b, c, d)), e !== !1 && f !== !1
                },
                $ = function(a, b, c, d, e) {
                    var f, g, h, i;
                    if (1 === d || d >= 4) {
                        for (i = e.length, f = 0; i > f; f++)
                            if ((h = e[f]) !== b) h._gc || h._kill(null, a, b) && (g = !0);
                            else if (5 === d) break;
                        return g
                    }
                    var j, k = b._startTime + l,
                        m = [],
                        n = 0,
                        o = 0 === b._duration;
                    for (f = e.length; --f > -1;)(h = e[f]) === b || h._gc || h._paused || (h._timeline !== b._timeline ? (j = j || _(b, 0, o), 0 === _(h, j, o) && (m[n++] = h)) : h._startTime <= k && h._startTime + h.totalDuration() / h._timeScale > k && ((o || !h._initted) && k - h._startTime <= 2e-10 || (m[n++] = h)));
                    for (f = n; --f > -1;)
                        if (h = m[f], 2 === d && h._kill(c, a, b) && (g = !0), 2 !== d || !h._firstPT && h._initted) {
                            if (2 !== d && !Z(h, b)) continue;
                            h._enabled(!1, !1) && (g = !0)
                        }
                    return g
                },
                _ = function(a, b, c) {
                    for (var d = a._timeline, e = d._timeScale, f = a._startTime; d._timeline;) {
                        if (f += d._startTime, e *= d._timeScale, d._paused) return -100;
                        d = d._timeline
                    }
                    return f /= e, f > b ? f - b : c && f === b || !a._initted && 2 * l > f - b ? l : (f += a.totalDuration() / a._timeScale / e) > b + l ? 0 : f - b - l
                };
            g._init = function() {
                var a, b, c, d, e, f, g = this.vars,
                    h = this._overwrittenProps,
                    i = this._duration,
                    j = !!g.immediateRender,
                    k = g.ease;
                if (g.startAt) {
                    this._startAt && (this._startAt.render(-1, !0), this._startAt.kill()), e = {};
                    for (d in g.startAt) e[d] = g.startAt[d];
                    if (e.overwrite = !1, e.immediateRender = !0, e.lazy = j && g.lazy !== !1, e.startAt = e.delay = null, this._startAt = F.to(this.target, 0, e), j)
                        if (this._time > 0) this._startAt = null;
                        else if (0 !== i) return
                } else if (g.runBackwards && 0 !== i)
                    if (this._startAt) this._startAt.render(-1, !0), this._startAt.kill(), this._startAt = null;
                    else {
                        0 !== this._time && (j = !1), c = {};
                        for (d in g) S[d] && "autoCSS" !== d || (c[d] = g[d]);
                        if (c.overwrite = 0, c.data = "isFromStart", c.lazy = j && g.lazy !== !1, c.immediateRender = j, this._startAt = F.to(this.target, 0, c), j) {
                            if (0 === this._time) return
                        } else this._startAt._init(), this._startAt._enabled(!1), this.vars.immediateRender && (this._startAt = null)
                    }
                if (this._ease = k = k ? k instanceof u ? k : "function" == typeof k ? new u(k, g.easeParams) : v[k] || F.defaultEase : F.defaultEase, g.easeParams instanceof Array && k.config && (this._ease = k.config.apply(k, g.easeParams)), this._easeType = this._ease._type, this._easePower = this._ease._power, this._firstPT = null, this._targets)
                    for (f = this._targets.length, a = 0; f > a; a++) this._initProps(this._targets[a], this._propLookup[a] = {}, this._siblings[a], h ? h[a] : null, a) && (b = !0);
                else b = this._initProps(this.target, this._propLookup, this._siblings, h, 0);
                if (b && F._onPluginEvent("_onInitAllProps", this), h && (this._firstPT || "function" != typeof this.target && this._enabled(!1, !1)), g.runBackwards)
                    for (c = this._firstPT; c;) c.s += c.c, c.c = -c.c, c = c._next;
                this._onUpdate = g.onUpdate, this._initted = !0
            }, g._initProps = function(b, c, d, e, f) {
                var g, h, i, j, k, l;
                if (null == b) return !1;
                J[b._gsTweenID] && X(), this.vars.css || b.style && b !== a && b.nodeType && P.css && this.vars.autoCSS !== !1 && H(this.vars, b);
                for (g in this.vars)
                    if (l = this.vars[g], S[g]) l && (l instanceof Array || l.push && o(l)) && -1 !== l.join("").indexOf("{self}") && (this.vars[g] = l = this._swapSelfInParams(l, this));
                    else if (P[g] && (j = new P[g])._onInitTween(b, this.vars[g], this, f)) {
                    for (this._firstPT = k = {
                            _next: this._firstPT,
                            t: j,
                            p: "setRatio",
                            s: 0,
                            c: 1,
                            f: 1,
                            n: g,
                            pg: 1,
                            pr: j._priority,
                            m: 0
                        }, h = j._overwriteProps.length; --h > -1;) c[j._overwriteProps[h]] = this._firstPT;
                    (j._priority || j._onInitAllProps) && (i = !0), (j._onDisable || j._onEnable) && (this._notifyPluginsOfEnabled = !0), k._next && (k._next._prev = k)
                } else c[g] = N.call(this, b, g, "get", l, g, 0, null, this.vars.stringFilter, f);
                return e && this._kill(e, b) ? this._initProps(b, c, d, e, f) : this._overwrite > 1 && this._firstPT && d.length > 1 && $(b, this, c, this._overwrite, d) ? (this._kill(c, b), this._initProps(b, c, d, e, f)) : (this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration) && (J[b._gsTweenID] = !0), i)
            }, g.render = function(a, b, c) {
                var d, e, f, g, h = this._time,
                    i = this._duration,
                    j = this._rawPrevTime;
                if (a >= i - 1e-7) this._totalTime = this._time = i, this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1, this._reversed || (d = !0, e = "onComplete", c = c || this._timeline.autoRemoveChildren), 0 === i && (this._initted || !this.vars.lazy || c) && (this._startTime === this._timeline._duration && (a = 0), (0 > j || 0 >= a && a >= -1e-7 || j === l && "isPause" !== this.data) && j !== a && (c = !0, j > l && (e = "onReverseComplete")), this._rawPrevTime = g = !b || a || j === a ? a : l);
                else if (1e-7 > a) this._totalTime = this._time = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0, (0 !== h || 0 === i && j > 0) && (e = "onReverseComplete", d = this._reversed), 0 > a && (this._active = !1, 0 === i && (this._initted || !this.vars.lazy || c) && (j >= 0 && (j !== l || "isPause" !== this.data) && (c = !0), this._rawPrevTime = g = !b || a || j === a ? a : l)), this._initted || (c = !0);
                else if (this._totalTime = this._time = a, this._easeType) {
                    var k = a / i,
                        m = this._easeType,
                        n = this._easePower;
                    (1 === m || 3 === m && k >= .5) && (k = 1 - k), 3 === m && (k *= 2), 1 === n ? k *= k : 2 === n ? k *= k * k : 3 === n ? k *= k * k * k : 4 === n && (k *= k * k * k * k), 1 === m ? this.ratio = 1 - k : 2 === m ? this.ratio = k : .5 > a / i ? this.ratio = k / 2 : this.ratio = 1 - k / 2
                } else this.ratio = this._ease.getRatio(a / i);
                if (this._time !== h || c) {
                    if (!this._initted) {
                        if (this._init(), !this._initted || this._gc) return;
                        if (!c && this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration)) return this._time = this._totalTime = h, this._rawPrevTime = j, I.push(this), void(this._lazy = [a, b]);
                        this._time && !d ? this.ratio = this._ease.getRatio(this._time / i) : d && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
                    }
                    for (this._lazy !== !1 && (this._lazy = !1), this._active || !this._paused && this._time !== h && a >= 0 && (this._active = !0), 0 === h && (this._startAt && (a >= 0 ? this._startAt.render(a, b, c) : e || (e = "_dummyGS")), this.vars.onStart && (0 !== this._time || 0 === i) && (b || this._callback("onStart"))), f = this._firstPT; f;) f.f ? f.t[f.p](f.c * this.ratio + f.s) : f.t[f.p] = f.c * this.ratio + f.s, f = f._next;
                    this._onUpdate && (0 > a && this._startAt && a !== -1e-4 && this._startAt.render(a, b, c), b || (this._time !== h || d || c) && this._callback("onUpdate")), e && (!this._gc || c) && (0 > a && this._startAt && !this._onUpdate && a !== -1e-4 && this._startAt.render(a, b, c), d && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !b && this.vars[e] && this._callback(e), 0 === i && this._rawPrevTime === l && g !== l && (this._rawPrevTime = 0))
                }
            }, g._kill = function(a, b, c) {
                if ("all" === a && (a = null), null == a && (null == b || b === this.target)) return this._lazy = !1, this._enabled(!1, !1);
                b = "string" != typeof b ? b || this._targets || this.target : F.selector(b) || b;
                var d, e, f, g, h, i, j, k, l, m = c && this._time && c._startTime === this._startTime && this._timeline === c._timeline;
                if ((o(b) || G(b)) && "number" != typeof b[0])
                    for (d = b.length; --d > -1;) this._kill(a, b[d], c) && (i = !0);
                else {
                    if (this._targets) {
                        for (d = this._targets.length; --d > -1;)
                            if (b === this._targets[d]) {
                                h = this._propLookup[d] || {}, this._overwrittenProps = this._overwrittenProps || [], e = this._overwrittenProps[d] = a ? this._overwrittenProps[d] || {} : "all";
                                break
                            }
                    } else {
                        if (b !== this.target) return !1;
                        h = this._propLookup, e = this._overwrittenProps = a ? this._overwrittenProps || {} : "all"
                    }
                    if (h) {
                        if (j = a || h, k = a !== e && "all" !== e && a !== h && ("object" != typeof a || !a._tempKill), c && (F.onOverwrite || this.vars.onOverwrite)) {
                            for (f in j) h[f] && (l || (l = []), l.push(f));
                            if ((l || !a) && !Z(this, c, b, l)) return !1
                        }
                        for (f in j)(g = h[f]) && (m && (g.f ? g.t[g.p](g.s) : g.t[g.p] = g.s, i = !0), g.pg && g.t._kill(j) && (i = !0), g.pg && 0 !== g.t._overwriteProps.length || (g._prev ? g._prev._next = g._next : g === this._firstPT && (this._firstPT = g._next), g._next && (g._next._prev = g._prev), g._next = g._prev = null), delete h[f]), k && (e[f] = 1);
                        !this._firstPT && this._initted && this._enabled(!1, !1)
                    }
                }
                return i
            }, g.invalidate = function() {
                return this._notifyPluginsOfEnabled && F._onPluginEvent("_onDisable", this), this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null, this._notifyPluginsOfEnabled = this._active = this._lazy = !1, this._propLookup = this._targets ? {} : [], C.prototype.invalidate.call(this), this.vars.immediateRender && (this._time = -l, this.render(Math.min(0, -this._delay))), this
            }, g._enabled = function(a, b) {
                if (i || h.wake(), a && this._gc) {
                    var c, d = this._targets;
                    if (d)
                        for (c = d.length; --c > -1;) this._siblings[c] = Y(d[c], this, !0);
                    else this._siblings = Y(this.target, this, !0)
                }
                return C.prototype._enabled.call(this, a, b), !(!this._notifyPluginsOfEnabled || !this._firstPT) && F._onPluginEvent(a ? "_onEnable" : "_onDisable", this)
            }, F.to = function(a, b, c) {
                return new F(a, b, c)
            }, F.from = function(a, b, c) {
                return c.runBackwards = !0, c.immediateRender = 0 != c.immediateRender, new F(a, b, c)
            }, F.fromTo = function(a, b, c, d) {
                return d.startAt = c, d.immediateRender = 0 != d.immediateRender && 0 != c.immediateRender, new F(a, b, d)
            }, F.delayedCall = function(a, b, c, d, e) {
                return new F(b, 0, {
                    delay: a,
                    onComplete: b,
                    onCompleteParams: c,
                    callbackScope: d,
                    onReverseComplete: b,
                    onReverseCompleteParams: c,
                    immediateRender: !1,
                    lazy: !1,
                    useFrames: e,
                    overwrite: 0
                })
            }, F.set = function(a, b) {
                return new F(a, 0, b)
            }, F.getTweensOf = function(a, b) {
                if (null == a) return [];
                a = "string" != typeof a ? a : F.selector(a) || a;
                var c, d, e, f;
                if ((o(a) || G(a)) && "number" != typeof a[0]) {
                    for (c = a.length, d = []; --c > -1;) d = d.concat(F.getTweensOf(a[c], b));
                    for (c = d.length; --c > -1;)
                        for (f = d[c], e = c; --e > -1;) f === d[e] && d.splice(c, 1)
                } else
                    for (d = Y(a).concat(), c = d.length; --c > -1;)(d[c]._gc || b && !d[c].isActive()) && d.splice(c, 1);
                return d
            }, F.killTweensOf = F.killDelayedCallsTo = function(a, b, c) {
                "object" == typeof b && (c = b, b = !1);
                for (var d = F.getTweensOf(a, b), e = d.length; --e > -1;) d[e]._kill(c, a)
            };
            var aa = s("plugins.TweenPlugin", function(a, b) {
                this._overwriteProps = (a || "").split(","), this._propName = this._overwriteProps[0], this._priority = b || 0, this._super = aa.prototype
            }, !0);
            if (g = aa.prototype, aa.version = "1.19.0", aa.API = 2, g._firstPT = null, g._addTween = N, g.setRatio = L, g._kill = function(a) {
                    var b, c = this._overwriteProps,
                        d = this._firstPT;
                    if (null != a[this._propName]) this._overwriteProps = [];
                    else
                        for (b = c.length; --b > -1;) null != a[c[b]] && c.splice(b, 1);
                    for (; d;) null != a[d.n] && (d._next && (d._next._prev = d._prev), d._prev ? (d._prev._next = d._next, d._prev = null) : this._firstPT === d && (this._firstPT = d._next)), d = d._next;
                    return !1
                }, g._mod = g._roundProps = function(a) {
                    for (var b, c = this._firstPT; c;) b = a[this._propName] || null != c.n && a[c.n.split(this._propName + "_").join("")], b && "function" == typeof b && (2 === c.f ? c.t._applyPT.m = b : c.m = b), c = c._next
                }, F._onPluginEvent = function(a, b) {
                    var c, d, e, f, g, h = b._firstPT;
                    if ("_onInitAllProps" === a) {
                        for (; h;) {
                            for (g = h._next, d = e; d && d.pr > h.pr;) d = d._next;
                            (h._prev = d ? d._prev : f) ? h._prev._next = h: e = h, (h._next = d) ? d._prev = h : f = h, h = g
                        }
                        h = b._firstPT = e
                    }
                    for (; h;) h.pg && "function" == typeof h.t[a] && h.t[a]() && (c = !0), h = h._next;
                    return c
                }, aa.activate = function(a) {
                    for (var b = a.length; --b > -1;) a[b].API === aa.API && (P[(new a[b])._propName] = a[b]);
                    return !0
                }, r.plugin = function(a) {
                    if (!(a && a.propName && a.init && a.API)) throw "illegal plugin definition.";
                    var b, c = a.propName,
                        d = a.priority || 0,
                        e = a.overwriteProps,
                        f = {
                            init: "_onInitTween",
                            set: "setRatio",
                            kill: "_kill",
                            round: "_mod",
                            mod: "_mod",
                            initAll: "_onInitAllProps"
                        },
                        g = s("plugins." + c.charAt(0).toUpperCase() + c.substr(1) + "Plugin", function() {
                            aa.call(this, c, d), this._overwriteProps = e || []
                        }, a.global === !0),
                        h = g.prototype = new aa(c);
                    h.constructor = g, g.API = a.API;
                    for (b in f) "function" == typeof a[b] && (h[f[b]] = a[b]);
                    return g.version = a.version, aa.activate([g]), g
                }, e = a._gsQueue) {
                for (f = 0; f < e.length; f++) e[f]();
                for (g in p) p[g].func || a.console.log("GSAP encountered missing dependency: " + g)
            }
            i = !1
        }
    }("undefined" != typeof module && module.exports && "undefined" != typeof global ? global : this || window, "TweenMax");
var _gsScope = "undefined" != typeof module && module.exports && "undefined" != typeof global ? global : this || window;
(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function() {
        "use strict";
        _gsScope._gsDefine("plugins.CSSRulePlugin", ["plugins.TweenPlugin", "TweenLite", "plugins.CSSPlugin"], function(a, b, c) {
            var d = function() {
                    a.call(this, "cssRule"), this._overwriteProps.length = 0
                },
                e = window.document,
                f = c.prototype.setRatio,
                g = d.prototype = new c;
            return g._propName = "cssRule", g.constructor = d, d.version = "0.6.4", d.API = 2, d.getRule = function(a) {
                var b, c, d, f, g = e.all ? "rules" : "cssRules",
                    h = e.styleSheets,
                    i = h.length,
                    j = ":" === a.charAt(0);
                for (a = (j ? "" : ",") + a.toLowerCase() + ",", j && (f = []); --i > -1;) {
                    try {
                        if (c = h[i][g], !c) continue;
                        b = c.length
                    } catch (k) {
                        console.log(k);
                        continue
                    }
                    for (; --b > -1;)
                        if (d = c[b], d.selectorText && -1 !== ("," + d.selectorText.split("::").join(":").toLowerCase() + ",").indexOf(a)) {
                            if (!j) return d.style;
                            f.push(d.style)
                        }
                }
                return f
            }, g._onInitTween = function(a, b, d) {
                if (void 0 === a.cssText) return !1;
                var f = a._gsProxy = a._gsProxy || e.createElement("div");
                return this._ss = a, this._proxy = f.style, f.style.cssText = a.cssText, c.prototype._onInitTween.call(this, f, b, d), !0
            }, g.setRatio = function(a) {
                f.call(this, a), this._ss.cssText = this._proxy.cssText
            }, a.activate([d]), d
        }, !0)
    }), _gsScope._gsDefine && _gsScope._gsQueue.pop()(),
    function(a) {
        "use strict";
        var b = function() {
            return (_gsScope.GreenSockGlobals || _gsScope)[a]
        };
        "function" == typeof define && define.amd ? define(["TweenLite"], b) : "undefined" != typeof module && module.exports && (require("../TweenLite.js"), module.exports = b())
    }("CSSRulePlugin");
var _gsScope = "undefined" != typeof module && module.exports && "undefined" != typeof global ? global : this || window;
(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function() {
        "use strict";
        var a = document.documentElement,
            b = window,
            c = function(c, d) {
                var e = "x" === d ? "Width" : "Height",
                    f = "scroll" + e,
                    g = "client" + e,
                    h = document.body;
                return c === b || c === a || c === h ? Math.max(a[f], h[f]) - (b["inner" + e] || a[g] || h[g]) : c[f] - c["offset" + e]
            },
            d = function(a) {
                return "string" == typeof a && (a = TweenLite.selector(a)), a.length && a !== b && a[0] && a[0].style && !a.nodeType && (a = a[0]), a === b || a.nodeType && a.style ? a : null
            },
            e = function(c, d) {
                var e = "scroll" + ("x" === d ? "Left" : "Top");
                return c === b && (null != c.pageXOffset ? e = "page" + d.toUpperCase() + "Offset" : c = null != a[e] ? a : document.body),
                    function() {
                        return c[e]
                    }
            },
            f = function(c, f) {
                var g = d(c).getBoundingClientRect(),
                    h = !f || f === b || f === document.body,
                    i = (h ? a : f).getBoundingClientRect(),
                    j = {
                        x: g.left - i.left,
                        y: g.top - i.top
                    };
                return !h && f && (j.x += e(f, "x")(), j.y += e(f, "y")()), j
            },
            g = function(a, b, d) {
                var e = typeof a;
                return "number" === e || "string" === e && "=" === a.charAt(1) ? a : "max" === a ? c(b, d) : Math.min(c(b, d), f(a, b)[d])
            },
            h = _gsScope._gsDefine.plugin({
                propName: "scrollTo",
                API: 2,
                version: "1.8.0",
                init: function(a, c, d) {
                    return this._wdw = a === b, this._target = a, this._tween = d, "object" != typeof c ? (c = {
                        y: c
                    }, "string" == typeof c.y && "max" !== c.y && "=" !== c.y.charAt(1) && (c.x = c.y)) : c.nodeType && (c = {
                        y: c,
                        x: c
                    }), this.vars = c, this._autoKill = c.autoKill !== !1, this.getX = e(a, "x"), this.getY = e(a, "y"), this.x = this.xPrev = this.getX(), this.y = this.yPrev = this.getY(), null != c.x ? (this._addTween(this, "x", this.x, g(c.x, a, "x") - (c.offsetX || 0), "scrollTo_x", !0), this._overwriteProps.push("scrollTo_x")) : this.skipX = !0, null != c.y ? (this._addTween(this, "y", this.y, g(c.y, a, "y") - (c.offsetY || 0), "scrollTo_y", !0), this._overwriteProps.push("scrollTo_y")) : this.skipY = !0, !0
                },
                set: function(a) {
                    this._super.setRatio.call(this, a);
                    var d = this._wdw || !this.skipX ? this.getX() : this.xPrev,
                        e = this._wdw || !this.skipY ? this.getY() : this.yPrev,
                        f = e - this.yPrev,
                        g = d - this.xPrev,
                        i = h.autoKillThreshold;
                    this.x < 0 && (this.x = 0), this.y < 0 && (this.y = 0), this._autoKill && (!this.skipX && (g > i || -i > g) && d < c(this._target, "x") && (this.skipX = !0), !this.skipY && (f > i || -i > f) && e < c(this._target, "y") && (this.skipY = !0), this.skipX && this.skipY && (this._tween.kill(), this.vars.onAutoKill && this.vars.onAutoKill.apply(this.vars.onAutoKillScope || this._tween, this.vars.onAutoKillParams || []))), this._wdw ? b.scrollTo(this.skipX ? d : this.x, this.skipY ? e : this.y) : (this.skipY || (this._target.scrollTop = this.y), this.skipX || (this._target.scrollLeft = this.x)), this.xPrev = this.x, this.yPrev = this.y
                }
            }),
            i = h.prototype;
        h.max = c, h.getOffset = f, h.autoKillThreshold = 7, i._kill = function(a) {
            return a.scrollTo_x && (this.skipX = !0), a.scrollTo_y && (this.skipY = !0), this._super._kill.call(this, a)
        }
    }), _gsScope._gsDefine && _gsScope._gsQueue.pop()(),
    function(a) {
        "use strict";
        var b = function() {
            return (_gsScope.GreenSockGlobals || _gsScope)[a]
        };
        "function" == typeof define && define.amd ? define(["TweenLite"], b) : "undefined" != typeof module && module.exports && (require("../TweenLite.js"), module.exports = b())
    }("ScrollToPlugin"), ! function(t, e) {
        "function" == typeof define && define.amd ? define("ev-emitter/ev-emitter", e) : "object" == typeof module && module.exports ? module.exports = e() : t.EvEmitter = e()
    }(this, function() {
        function t() {}
        var e = t.prototype;
        return e.on = function(t, e) {
            if (t && e) {
                var i = this._events = this._events || {},
                    n = i[t] = i[t] || [];
                return -1 == n.indexOf(e) && n.push(e), this
            }
        }, e.once = function(t, e) {
            if (t && e) {
                this.on(t, e);
                var i = this._onceEvents = this._onceEvents || {},
                    n = i[t] = i[t] || [];
                return n[e] = !0, this
            }
        }, e.off = function(t, e) {
            var i = this._events && this._events[t];
            if (i && i.length) {
                var n = i.indexOf(e);
                return -1 != n && i.splice(n, 1), this
            }
        }, e.emitEvent = function(t, e) {
            var i = this._events && this._events[t];
            if (i && i.length) {
                var n = 0,
                    o = i[n];
                e = e || [];
                for (var r = this._onceEvents && this._onceEvents[t]; o;) {
                    var s = r && r[o];
                    s && (this.off(t, o),
                        delete r[o]), o.apply(this, e), n += s ? 0 : 1, o = i[n]
                }
                return this
            }
        }, t
    }),
    function(t, e) {
        "use strict";
        "function" == typeof define && define.amd ? define(["ev-emitter/ev-emitter"], function(i) {
            return e(t, i)
        }) : "object" == typeof module && module.exports ? module.exports = e(t, require("ev-emitter")) : t.imagesLoaded = e(t, t.EvEmitter)
    }(window, function(t, e) {
        function i(t, e) {
            for (var i in e) t[i] = e[i];
            return t
        }

        function n(t) {
            var e = [];
            if (Array.isArray(t)) e = t;
            else if ("number" == typeof t.length)
                for (var i = 0; i < t.length; i++) e.push(t[i]);
            else e.push(t);
            return e
        }

        function o(t, e, r) {
            return this instanceof o ? ("string" == typeof t && (t = document.querySelectorAll(t)), this.elements = n(t), this.options = i({}, this.options), "function" == typeof e ? r = e : i(this.options, e), r && this.on("always", r), this.getImages(), h && (this.jqDeferred = new h.Deferred), void setTimeout(function() {
                this.check()
            }.bind(this))) : new o(t, e, r)
        }

        function r(t) {
            this.img = t
        }

        function s(t, e) {
            this.url = t, this.element = e, this.img = new Image
        }
        var h = t.jQuery,
            a = t.console;
        o.prototype = Object.create(e.prototype), o.prototype.options = {}, o.prototype.getImages = function() {
            this.images = [], this.elements.forEach(this.addElementImages, this)
        }, o.prototype.addElementImages = function(t) {
            "IMG" == t.nodeName && this.addImage(t), this.options.background === !0 && this.addElementBackgroundImages(t);
            var e = t.nodeType;
            if (e && d[e]) {
                for (var i = t.querySelectorAll("img"), n = 0; n < i.length; n++) {
                    var o = i[n];
                    this.addImage(o)
                }
                if ("string" == typeof this.options.background) {
                    var r = t.querySelectorAll(this.options.background);
                    for (n = 0; n < r.length; n++) {
                        var s = r[n];
                        this.addElementBackgroundImages(s)
                    }
                }
            }
        };
        var d = {
            1: !0,
            9: !0,
            11: !0
        };
        return o.prototype.addElementBackgroundImages = function(t) {
            var e = getComputedStyle(t);
            if (e)
                for (var i = /url\((['"])?(.*?)\1\)/gi, n = i.exec(e.backgroundImage); null !== n;) {
                    var o = n && n[2];
                    o && this.addBackground(o, t), n = i.exec(e.backgroundImage)
                }
        }, o.prototype.addImage = function(t) {
            var e = new r(t);
            this.images.push(e)
        }, o.prototype.addBackground = function(t, e) {
            var i = new s(t, e);
            this.images.push(i)
        }, o.prototype.check = function() {
            function t(t, i, n) {
                setTimeout(function() {
                    e.progress(t, i, n)
                })
            }
            var e = this;
            return this.progressedCount = 0, this.hasAnyBroken = !1, this.images.length ? void this.images.forEach(function(e) {
                e.once("progress", t), e.check()
            }) : void this.complete()
        }, o.prototype.progress = function(t, e, i) {
            this.progressedCount++, this.hasAnyBroken = this.hasAnyBroken || !t.isLoaded, this.emitEvent("progress", [this, t, e]), this.jqDeferred && this.jqDeferred.notify && this.jqDeferred.notify(this, t), this.progressedCount == this.images.length && this.complete(), this.options.debug && a && a.log("progress: " + i, t, e)
        }, o.prototype.complete = function() {
            var t = this.hasAnyBroken ? "fail" : "done";
            if (this.isComplete = !0, this.emitEvent(t, [this]), this.emitEvent("always", [this]), this.jqDeferred) {
                var e = this.hasAnyBroken ? "reject" : "resolve";
                this.jqDeferred[e](this)
            }
        }, r.prototype = Object.create(e.prototype), r.prototype.check = function() {
            var t = this.getIsImageComplete();
            return t ? void this.confirm(0 !== this.img.naturalWidth, "naturalWidth") : (this.proxyImage = new Image, this.proxyImage.addEventListener("load", this), this.proxyImage.addEventListener("error", this), this.img.addEventListener("load", this), this.img.addEventListener("error", this), void(this.proxyImage.src = this.img.src))
        }, r.prototype.getIsImageComplete = function() {
            return this.img.complete && void 0 !== this.img.naturalWidth
        }, r.prototype.confirm = function(t, e) {
            this.isLoaded = t, this.emitEvent("progress", [this, this.img, e])
        }, r.prototype.handleEvent = function(t) {
            var e = "on" + t.type;
            this[e] && this[e](t)
        }, r.prototype.onload = function() {
            this.confirm(!0, "onload"), this.unbindEvents()
        }, r.prototype.onerror = function() {
            this.confirm(!1, "onerror"), this.unbindEvents()
        }, r.prototype.unbindEvents = function() {
            this.proxyImage.removeEventListener("load", this), this.proxyImage.removeEventListener("error", this), this.img.removeEventListener("load", this), this.img.removeEventListener("error", this)
        }, s.prototype = Object.create(r.prototype), s.prototype.check = function() {
            this.img.addEventListener("load", this), this.img.addEventListener("error", this), this.img.src = this.url;
            var t = this.getIsImageComplete();
            t && (this.confirm(0 !== this.img.naturalWidth, "naturalWidth"), this.unbindEvents())
        }, s.prototype.unbindEvents = function() {
            this.img.removeEventListener("load", this), this.img.removeEventListener("error", this)
        }, s.prototype.confirm = function(t, e) {
            this.isLoaded = t, this.emitEvent("progress", [this, this.element, e])
        }, o.makeJQueryPlugin = function(e) {
            e = e || t.jQuery, e && (h = e, h.fn.imagesLoaded = function(t, e) {
                var i = new o(this, t, e);
                return i.jqDeferred.promise(h(this))
            })
        }, o.makeJQueryPlugin(), o
    }),
    function() {
        "use strict";

        function FastClick(layer, options) {
            function bind(method, context) {
                return function() {
                    return method.apply(context, arguments)
                }
            }
            var oldOnClick;
            if (options = options || {}, this.trackingClick = !1, this.trackingClickStart = 0, this.targetElement = null, this.touchStartX = 0, this.touchStartY = 0, this.lastTouchIdentifier = 0, this.touchBoundary = options.touchBoundary || 10, this.layer = layer, this.tapDelay = options.tapDelay || 200, this.tapTimeout = options.tapTimeout || 700, !FastClick.notNeeded(layer)) {
                for (var methods = ["onMouse", "onClick", "onTouchStart", "onTouchMove", "onTouchEnd", "onTouchCancel"], context = this, i = 0, l = methods.length; i < l; i++) context[methods[i]] = bind(context[methods[i]], context);
                deviceIsAndroid && (layer.addEventListener("mouseover", this.onMouse, !0), layer.addEventListener("mousedown", this.onMouse, !0), layer.addEventListener("mouseup", this.onMouse, !0)), layer.addEventListener("click", this.onClick, !0), layer.addEventListener("touchstart", this.onTouchStart, !1), layer.addEventListener("touchmove", this.onTouchMove, !1), layer.addEventListener("touchend", this.onTouchEnd, !1), layer.addEventListener("touchcancel", this.onTouchCancel, !1), Event.prototype.stopImmediatePropagation || (layer.removeEventListener = function(type, callback, capture) {
                    var rmv = Node.prototype.removeEventListener;
                    "click" === type ? rmv.call(layer, type, callback.hijacked || callback, capture) : rmv.call(layer, type, callback, capture)
                }, layer.addEventListener = function(type, callback, capture) {
                    var adv = Node.prototype.addEventListener;
                    "click" === type ? adv.call(layer, type, callback.hijacked || (callback.hijacked = function(event) {
                        event.propagationStopped || callback(event)
                    }), capture) : adv.call(layer, type, callback, capture)
                }), "function" == typeof layer.onclick && (oldOnClick = layer.onclick, layer.addEventListener("click", function(event) {
                    oldOnClick(event)
                }, !1), layer.onclick = null)
            }
        }
        var deviceIsWindowsPhone = navigator.userAgent.indexOf("Windows Phone") >= 0,
            deviceIsAndroid = navigator.userAgent.indexOf("Android") > 0 && !deviceIsWindowsPhone,
            deviceIsIOS = /iP(ad|hone|od)/.test(navigator.userAgent) && !deviceIsWindowsPhone,
            deviceIsIOS4 = deviceIsIOS && /OS 4_\d(_\d)?/.test(navigator.userAgent),
            deviceIsIOSWithBadTarget = deviceIsIOS && /OS [6-7]_\d/.test(navigator.userAgent),
            deviceIsBlackBerry10 = navigator.userAgent.indexOf("BB10") > 0;
        FastClick.prototype.needsClick = function(target) {
            switch (target.nodeName.toLowerCase()) {
                case "button":
                case "select":
                case "textarea":
                    if (target.disabled) return !0;
                    break;
                case "input":
                    if (deviceIsIOS && "file" === target.type || target.disabled) return !0;
                    break;
                case "label":
                case "iframe":
                case "video":
                    return !0
            }
            return /\bneedsclick\b/.test(target.className)
        }, FastClick.prototype.needsFocus = function(target) {
            switch (target.nodeName.toLowerCase()) {
                case "textarea":
                    return !0;
                case "select":
                    return !deviceIsAndroid;
                case "input":
                    switch (target.type) {
                        case "button":
                        case "checkbox":
                        case "file":
                        case "image":
                        case "radio":
                        case "submit":
                            return !1
                    }
                    return !target.disabled && !target.readOnly;
                default:
                    return /\bneedsfocus\b/.test(target.className)
            }
        }, FastClick.prototype.sendClick = function(targetElement, event) {
            var clickEvent, touch;
            document.activeElement && document.activeElement !== targetElement && document.activeElement.blur(), touch = event.changedTouches[0], clickEvent = document.createEvent("MouseEvents"), clickEvent.initMouseEvent(this.determineEventType(targetElement), !0, !0, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, !1, !1, !1, !1, 0, null), clickEvent.forwardedTouchEvent = !0, targetElement.dispatchEvent(clickEvent)
        }, FastClick.prototype.determineEventType = function(targetElement) {
            return deviceIsAndroid && "select" === targetElement.tagName.toLowerCase() ? "mousedown" : "click"
        }, FastClick.prototype.focus = function(targetElement) {
            var length;
            deviceIsIOS && targetElement.setSelectionRange && 0 !== targetElement.type.indexOf("date") && "time" !== targetElement.type && "month" !== targetElement.type ? (length = targetElement.value.length, targetElement.setSelectionRange(length, length)) : targetElement.focus()
        }, FastClick.prototype.updateScrollParent = function(targetElement) {
            var scrollParent, parentElement;
            if (scrollParent = targetElement.fastClickScrollParent, !scrollParent || !scrollParent.contains(targetElement)) {
                parentElement = targetElement;
                do {
                    if (parentElement.scrollHeight > parentElement.offsetHeight) {
                        scrollParent = parentElement, targetElement.fastClickScrollParent = parentElement;
                        break
                    }
                    parentElement = parentElement.parentElement
                } while (parentElement)
            }
            scrollParent && (scrollParent.fastClickLastScrollTop = scrollParent.scrollTop)
        }, FastClick.prototype.getTargetElementFromEventTarget = function(eventTarget) {
            return eventTarget.nodeType === Node.TEXT_NODE ? eventTarget.parentNode : eventTarget
        }, FastClick.prototype.onTouchStart = function(event) {
            var targetElement, touch, selection;
            if (event.targetTouches.length > 1) return !0;
            if (targetElement = this.getTargetElementFromEventTarget(event.target), touch = event.targetTouches[0], deviceIsIOS) {
                if (selection = window.getSelection(), selection.rangeCount && !selection.isCollapsed) return !0;
                if (!deviceIsIOS4) {
                    if (touch.identifier && touch.identifier === this.lastTouchIdentifier) return event.preventDefault(), !1;
                    this.lastTouchIdentifier = touch.identifier, this.updateScrollParent(targetElement)
                }
            }
            return this.trackingClick = !0, this.trackingClickStart = event.timeStamp, this.targetElement = targetElement, this.touchStartX = touch.pageX, this.touchStartY = touch.pageY, event.timeStamp - this.lastClickTime < this.tapDelay && event.preventDefault(), !0
        }, FastClick.prototype.touchHasMoved = function(event) {
            var touch = event.changedTouches[0],
                boundary = this.touchBoundary;
            return Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary
        }, FastClick.prototype.onTouchMove = function(event) {
            return !this.trackingClick || ((this.targetElement !== this.getTargetElementFromEventTarget(event.target) || this.touchHasMoved(event)) && (this.trackingClick = !1, this.targetElement = null), !0)
        }, FastClick.prototype.findControl = function(labelElement) {
            return void 0 !== labelElement.control ? labelElement.control : labelElement.htmlFor ? document.getElementById(labelElement.htmlFor) : labelElement.querySelector("button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea")
        }, FastClick.prototype.onTouchEnd = function(event) {
            var forElement, trackingClickStart, targetTagName, scrollParent, touch, targetElement = this.targetElement;
            if (!this.trackingClick) return !0;
            if (event.timeStamp - this.lastClickTime < this.tapDelay) return this.cancelNextClick = !0, !0;
            if (event.timeStamp - this.trackingClickStart > this.tapTimeout) return !0;
            if (this.cancelNextClick = !1, this.lastClickTime = event.timeStamp, trackingClickStart = this.trackingClickStart, this.trackingClick = !1, this.trackingClickStart = 0, deviceIsIOSWithBadTarget && (touch = event.changedTouches[0], targetElement = document.elementFromPoint(touch.pageX - window.pageXOffset, touch.pageY - window.pageYOffset) || targetElement, targetElement.fastClickScrollParent = this.targetElement.fastClickScrollParent), targetTagName = targetElement.tagName.toLowerCase(), "label" === targetTagName) {
                if (forElement = this.findControl(targetElement)) {
                    if (this.focus(targetElement), deviceIsAndroid) return !1;
                    targetElement = forElement
                }
            } else if (this.needsFocus(targetElement)) return event.timeStamp - trackingClickStart > 100 || deviceIsIOS && window.top !== window && "input" === targetTagName ? (this.targetElement = null, !1) : (this.focus(targetElement), this.sendClick(targetElement, event), deviceIsIOS && "select" === targetTagName || (this.targetElement = null, event.preventDefault()), !1);
            return !(!deviceIsIOS || deviceIsIOS4 || (scrollParent = targetElement.fastClickScrollParent, !scrollParent || scrollParent.fastClickLastScrollTop === scrollParent.scrollTop)) || (this.needsClick(targetElement) || (event.preventDefault(), this.sendClick(targetElement, event)), !1)
        }, FastClick.prototype.onTouchCancel = function() {
            this.trackingClick = !1, this.targetElement = null
        }, FastClick.prototype.onMouse = function(event) {
            return !this.targetElement || (!!event.forwardedTouchEvent || (!event.cancelable || (!(!this.needsClick(this.targetElement) || this.cancelNextClick) || (event.stopImmediatePropagation ? event.stopImmediatePropagation() : event.propagationStopped = !0, event.stopPropagation(), event.preventDefault(), !1))))
        }, FastClick.prototype.onClick = function(event) {
            var permitted;
            return this.trackingClick ? (this.targetElement = null, this.trackingClick = !1, !0) : "submit" === event.target.type && 0 === event.detail || (permitted = this.onMouse(event), permitted || (this.targetElement = null), permitted)
        }, FastClick.prototype.destroy = function() {
            var layer = this.layer;
            deviceIsAndroid && (layer.removeEventListener("mouseover", this.onMouse, !0), layer.removeEventListener("mousedown", this.onMouse, !0), layer.removeEventListener("mouseup", this.onMouse, !0)), layer.removeEventListener("click", this.onClick, !0), layer.removeEventListener("touchstart", this.onTouchStart, !1), layer.removeEventListener("touchmove", this.onTouchMove, !1), layer.removeEventListener("touchend", this.onTouchEnd, !1), layer.removeEventListener("touchcancel", this.onTouchCancel, !1)
        }, FastClick.notNeeded = function(layer) {
            var metaViewport, chromeVersion, blackberryVersion, firefoxVersion;
            if ("undefined" == typeof window.ontouchstart) return !0;
            if (chromeVersion = +(/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [, 0])[1]) {
                if (!deviceIsAndroid) return !0;
                if (metaViewport = document.querySelector("meta[name=viewport]")) {
                    if (metaViewport.content.indexOf("user-scalable=no") !== -1) return !0;
                    if (chromeVersion > 31 && document.documentElement.scrollWidth <= window.outerWidth) return !0
                }
            }
            if (deviceIsBlackBerry10 && (blackberryVersion = navigator.userAgent.match(/Version\/([0-9]*)\.([0-9]*)/), blackberryVersion[1] >= 10 && blackberryVersion[2] >= 3 && (metaViewport = document.querySelector("meta[name=viewport]")))) {
                if (metaViewport.content.indexOf("user-scalable=no") !== -1) return !0;
                if (document.documentElement.scrollWidth <= window.outerWidth) return !0
            }
            return "none" === layer.style.msTouchAction || "manipulation" === layer.style.touchAction || (firefoxVersion = +(/Firefox\/([0-9]+)/.exec(navigator.userAgent) || [, 0])[1], !!(firefoxVersion >= 27 && (metaViewport = document.querySelector("meta[name=viewport]"), metaViewport && (metaViewport.content.indexOf("user-scalable=no") !== -1 || document.documentElement.scrollWidth <= window.outerWidth))) || ("none" === layer.style.touchAction || "manipulation" === layer.style.touchAction))
        }, FastClick.attach = function(layer, options) {
            return new FastClick(layer, options)
        }, "function" == typeof define && "object" == typeof define.amd && define.amd ? define(function() {
            return FastClick
        }) : "undefined" != typeof module && module.exports ? (module.exports = FastClick.attach, module.exports.FastClick = FastClick) : window.FastClick = FastClick
    }(),
    function(global) {
        ! function() {
            if (!global.requestAnimationFrame) {
                if (global.webkitRequestAnimationFrame) return global.requestAnimationFrame = global.webkitRequestAnimationFrame, void(global.cancelAnimationFrame = global.webkitCancelAnimationFrame || global.webkitCancelRequestAnimationFrame);
                var lastTime = 0;
                global.requestAnimationFrame = function(callback) {
                    var currTime = (new Date).getTime(),
                        timeToCall = Math.max(0, 16 - (currTime - lastTime)),
                        id = global.setTimeout(function() {
                            callback(currTime + timeToCall)
                        }, timeToCall);
                    return lastTime = currTime + timeToCall, id
                }, global.cancelAnimationFrame = function(id) {
                    clearTimeout(id)
                }
            }
        }(), "function" == typeof define && define(function() {
            return global.requestAnimationFrame
        })
    }(window),
    function(root, name, make) {
        "undefined" != typeof module && module.exports ? module.exports = make() : root[name] = make()
    }(this, "verge", function() {
        function viewport() {
            return {
                width: viewportW(),
                height: viewportH()
            }
        }

        function calibrate(coords, cushion) {
            var o = {};
            return cushion = +cushion || 0, o.width = (o.right = coords.right + cushion) - (o.left = coords.left - cushion), o.height = (o.bottom = coords.bottom + cushion) - (o.top = coords.top - cushion), o
        }

        function rectangle(el, cushion) {
            return el = el && !el.nodeType ? el[0] : el, !(!el || 1 !== el.nodeType) && calibrate(el.getBoundingClientRect(), cushion)
        }

        function aspect(o) {
            o = null == o ? viewport() : 1 === o.nodeType ? rectangle(o) : o;
            var h = o.height,
                w = o.width;
            return h = "function" == typeof h ? h.call(o) : h, w = "function" == typeof w ? w.call(o) : w, w / h
        }
        var xports = {},
            win = "undefined" != typeof window && window,
            doc = "undefined" != typeof document && document,
            docElem = doc && doc.documentElement,
            matchMedia = win.matchMedia || win.msMatchMedia,
            mq = matchMedia ? function(q) {
                return !!matchMedia.call(win, q).matches
            } : function() {
                return !1
            },
            viewportW = xports.viewportW = function() {
                var a = docElem.clientWidth,
                    b = win.innerWidth;
                return a < b ? b : a
            },
            viewportH = xports.viewportH = function() {
                var a = docElem.clientHeight,
                    b = win.innerHeight;
                return a < b ? b : a
            };
        return xports.mq = mq, xports.matchMedia = matchMedia ? function() {
            return matchMedia.apply(win, arguments)
        } : function() {
            return {}
        }, xports.viewport = viewport, xports.scrollX = function() {
            return win.pageXOffset || docElem.scrollLeft
        }, xports.scrollY = function() {
            return win.pageYOffset || docElem.scrollTop
        }, xports.rectangle = rectangle, xports.aspect = aspect, xports.inX = function(el, cushion) {
            var r = rectangle(el, cushion);
            return !!r && r.right >= 0 && r.left <= viewportW()
        }, xports.inY = function(el, cushion) {
            var r = rectangle(el, cushion);
            return !!r && r.bottom >= 0 && r.top <= viewportH()
        }, xports.inViewport = function(el, cushion) {
            var r = rectangle(el, cushion);
            return !!r && r.bottom >= 0 && r.right >= 0 && r.top <= viewportH() && r.left <= viewportW()
        }, xports
    }),
    function(glob) {
        var current_event, stop, version = "0.4.2",
            has = "hasOwnProperty",
            separator = /[\.\/]/,
            comaseparator = /\s*,\s*/,
            wildcard = "*",
            numsort = function(a, b) {
                return a - b
            },
            events = {
                n: {}
            },
            firstDefined = function() {
                for (var i = 0, ii = this.length; i < ii; i++)
                    if ("undefined" != typeof this[i]) return this[i]
            },
            lastDefined = function() {
                for (var i = this.length; --i;)
                    if ("undefined" != typeof this[i]) return this[i]
            },
            eve = function(name, scope) {
                name = String(name);
                var l, oldstop = stop,
                    args = Array.prototype.slice.call(arguments, 2),
                    listeners = eve.listeners(name),
                    z = 0,
                    indexed = [],
                    queue = {},
                    out = [],
                    ce = current_event;
                out.firstDefined = firstDefined, out.lastDefined = lastDefined, current_event = name, stop = 0;
                for (var i = 0, ii = listeners.length; i < ii; i++) "zIndex" in listeners[i] && (indexed.push(listeners[i].zIndex), listeners[i].zIndex < 0 && (queue[listeners[i].zIndex] = listeners[i]));
                for (indexed.sort(numsort); indexed[z] < 0;)
                    if (l = queue[indexed[z++]], out.push(l.apply(scope, args)), stop) return stop = oldstop, out;
                for (i = 0; i < ii; i++)
                    if (l = listeners[i], "zIndex" in l)
                        if (l.zIndex == indexed[z]) {
                            if (out.push(l.apply(scope, args)), stop) break;
                            do
                                if (z++, l = queue[indexed[z]], l && out.push(l.apply(scope, args)), stop) break;
                            while (l)
                        } else queue[l.zIndex] = l;
                else if (out.push(l.apply(scope, args)), stop) break;
                return stop = oldstop, current_event = ce, out
            };
        eve._events = events, eve.listeners = function(name) {
            var item, items, k, i, ii, j, jj, nes, names = name.split(separator),
                e = events,
                es = [e],
                out = [];
            for (i = 0, ii = names.length; i < ii; i++) {
                for (nes = [], j = 0, jj = es.length; j < jj; j++)
                    for (e = es[j].n, items = [e[names[i]], e[wildcard]], k = 2; k--;) item = items[k], item && (nes.push(item), out = out.concat(item.f || []));
                es = nes
            }
            return out
        }, eve.on = function(name, f) {
            if (name = String(name), "function" != typeof f) return function() {};
            for (var names = name.split(comaseparator), i = 0, ii = names.length; i < ii; i++) ! function(name) {
                for (var exist, names = name.split(separator), e = events, i = 0, ii = names.length; i < ii; i++) e = e.n, e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {
                    n: {}
                });
                for (e.f = e.f || [], i = 0, ii = e.f.length; i < ii; i++)
                    if (e.f[i] == f) {
                        exist = !0;
                        break
                    }!exist && e.f.push(f)
            }(names[i]);
            return function(zIndex) {
                +zIndex == +zIndex && (f.zIndex = +zIndex)
            }
        }, eve.f = function(event) {
            var attrs = [].slice.call(arguments, 1);
            return function() {
                eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)))
            }
        }, eve.stop = function() {
            stop = 1
        }, eve.nt = function(subname) {
            return subname ? new RegExp("(?:\\.|\\/|^)" + subname + "(?:\\.|\\/|$)").test(current_event) : current_event
        }, eve.nts = function() {
            return current_event.split(separator)
        }, eve.off = eve.unbind = function(name, f) {
            if (!name) return void(eve._events = events = {
                n: {}
            });
            var names = name.split(comaseparator);
            if (names.length > 1)
                for (var i = 0, ii = names.length; i < ii; i++) eve.off(names[i], f);
            else {
                names = name.split(separator);
                var e, key, splice, i, ii, j, jj, cur = [events];
                for (i = 0, ii = names.length; i < ii; i++)
                    for (j = 0; j < cur.length; j += splice.length - 2) {
                        if (splice = [j, 1], e = cur[j].n, names[i] != wildcard) e[names[i]] && splice.push(e[names[i]]);
                        else
                            for (key in e) e[has](key) && splice.push(e[key]);
                        cur.splice.apply(cur, splice)
                    }
                for (i = 0, ii = cur.length; i < ii; i++)
                    for (e = cur[i]; e.n;) {
                        if (f) {
                            if (e.f) {
                                for (j = 0, jj = e.f.length; j < jj; j++)
                                    if (e.f[j] == f) {
                                        e.f.splice(j, 1);
                                        break
                                    }!e.f.length && delete e.f
                            }
                            for (key in e.n)
                                if (e.n[has](key) && e.n[key].f) {
                                    var funcs = e.n[key].f;
                                    for (j = 0, jj = funcs.length; j < jj; j++)
                                        if (funcs[j] == f) {
                                            funcs.splice(j, 1);
                                            break
                                        }!funcs.length && delete e.n[key].f
                                }
                        } else {
                            delete e.f;
                            for (key in e.n) e.n[has](key) && e.n[key].f && delete e.n[key].f
                        }
                        e = e.n
                    }
            }
        }, eve.once = function(name, f) {
            var f2 = function() {
                return eve.unbind(name, f2), f.apply(this, arguments)
            };
            return eve.on(name, f2)
        }, eve.version = version, eve.toString = function() {
            return "You are running Eve " + version
        }, "undefined" != typeof module && module.exports ? module.exports = eve : "function" == typeof define && define.amd ? define("eve", [], function() {
            return eve
        }) : glob.eve = eve
    }(this),
    function(glob, factory) {
        if ("function" == typeof define && define.amd) define(["eve"], function(eve) {
            return factory(glob, eve)
        });
        else if ("undefined" != typeof exports) {
            var eve = require("eve");
            module.exports = factory(glob, eve)
        } else factory(glob, glob.eve)
    }(window || this, function(window, eve) {
        var mina = function(eve) {
                var animations = {},
                    requestAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback) {
                        setTimeout(callback, 16)
                    },
                    isArray = Array.isArray || function(a) {
                        return a instanceof Array || "[object Array]" == Object.prototype.toString.call(a)
                    },
                    idgen = 0,
                    idprefix = "M" + (+new Date).toString(36),
                    ID = function() {
                        return idprefix + (idgen++).toString(36)
                    },
                    timer = Date.now || function() {
                        return +new Date
                    },
                    sta = function(val) {
                        var a = this;
                        if (null == val) return a.s;
                        var ds = a.s - val;
                        a.b += a.dur * ds, a.B += a.dur * ds, a.s = val
                    },
                    speed = function(val) {
                        var a = this;
                        return null == val ? a.spd : void(a.spd = val)
                    },
                    duration = function(val) {
                        var a = this;
                        return null == val ? a.dur : (a.s = a.s * val / a.dur, void(a.dur = val))
                    },
                    stopit = function() {
                        var a = this;
                        delete animations[a.id], a.update(), eve("mina.stop." + a.id, a)
                    },
                    pause = function() {
                        var a = this;
                        a.pdif || (delete animations[a.id], a.update(), a.pdif = a.get() - a.b)
                    },
                    resume = function() {
                        var a = this;
                        a.pdif && (a.b = a.get() - a.pdif, delete a.pdif, animations[a.id] = a)
                    },
                    update = function() {
                        var res, a = this;
                        if (isArray(a.start)) {
                            res = [];
                            for (var j = 0, jj = a.start.length; j < jj; j++) res[j] = +a.start[j] + (a.end[j] - a.start[j]) * a.easing(a.s)
                        } else res = +a.start + (a.end - a.start) * a.easing(a.s);
                        a.set(res)
                    },
                    frame = function() {
                        var len = 0;
                        for (var i in animations)
                            if (animations.hasOwnProperty(i)) {
                                var a = animations[i],
                                    b = a.get();
                                len++, a.s = (b - a.b) / (a.dur / a.spd), a.s >= 1 && (delete animations[i], a.s = 1, len--, function(a) {
                                    setTimeout(function() {
                                        eve("mina.finish." + a.id, a)
                                    })
                                }(a)), a.update()
                            }
                        len && requestAnimFrame(frame)
                    },
                    mina = function(a, A, b, B, get, set, easing) {
                        var anim = {
                            id: ID(),
                            start: a,
                            end: A,
                            b: b,
                            s: 0,
                            dur: B - b,
                            spd: 1,
                            get: get,
                            set: set,
                            easing: easing || mina.linear,
                            status: sta,
                            speed: speed,
                            duration: duration,
                            stop: stopit,
                            pause: pause,
                            resume: resume,
                            update: update
                        };
                        animations[anim.id] = anim;
                        var i, len = 0;
                        for (i in animations)
                            if (animations.hasOwnProperty(i) && (len++, 2 == len)) break;
                        return 1 == len && requestAnimFrame(frame), anim
                    };
                return mina.time = timer, mina.getById = function(id) {
                    return animations[id] || null
                }, mina.linear = function(n) {
                    return n
                }, mina.easeout = function(n) {
                    return Math.pow(n, 1.7)
                }, mina.easein = function(n) {
                    return Math.pow(n, .48)
                }, mina.easeinout = function(n) {
                    if (1 == n) return 1;
                    if (0 == n) return 0;
                    var q = .48 - n / 1.04,
                        Q = Math.sqrt(.1734 + q * q),
                        x = Q - q,
                        X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),
                        y = -Q - q,
                        Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),
                        t = X + Y + .5;
                    return 3 * (1 - t) * t * t + t * t * t
                }, mina.backin = function(n) {
                    if (1 == n) return 1;
                    var s = 1.70158;
                    return n * n * ((s + 1) * n - s)
                }, mina.backout = function(n) {
                    if (0 == n) return 0;
                    n -= 1;
                    var s = 1.70158;
                    return n * n * ((s + 1) * n + s) + 1
                }, mina.elastic = function(n) {
                    return n == !!n ? n : Math.pow(2, -10 * n) * Math.sin((n - .075) * (2 * Math.PI) / .3) + 1
                }, mina.bounce = function(n) {
                    var l, s = 7.5625,
                        p = 2.75;
                    return n < 1 / p ? l = s * n * n : n < 2 / p ? (n -= 1.5 / p, l = s * n * n + .75) : n < 2.5 / p ? (n -= 2.25 / p, l = s * n * n + .9375) : (n -= 2.625 / p, l = s * n * n + .984375), l
                }, window.mina = mina, mina
            }("undefined" == typeof eve ? function() {} : eve),
            Snap = function(root) {
                function Snap(w, h) {
                    if (w) {
                        if (w.nodeType) return wrap(w);
                        if (is(w, "array") && Snap.set) return Snap.set.apply(Snap, w);
                        if (w instanceof Element) return w;
                        if (null == h) return w = glob.doc.querySelector(String(w)), wrap(w)
                    }
                    return w = null == w ? "100%" : w, h = null == h ? "100%" : h, new Paper(w, h)
                }

                function $(el, attr) {
                    if (attr) {
                        if ("#text" == el && (el = glob.doc.createTextNode(attr.text || attr["#text"] || "")), "#comment" == el && (el = glob.doc.createComment(attr.text || attr["#text"] || "")), "string" == typeof el && (el = $(el)), "string" == typeof attr) return 1 == el.nodeType ? "xlink:" == attr.substring(0, 6) ? el.getAttributeNS(xlink, attr.substring(6)) : "xml:" == attr.substring(0, 4) ? el.getAttributeNS(xmlns, attr.substring(4)) : el.getAttribute(attr) : "text" == attr ? el.nodeValue : null;
                        if (1 == el.nodeType) {
                            for (var key in attr)
                                if (attr[has](key)) {
                                    var val = Str(attr[key]);
                                    val ? "xlink:" == key.substring(0, 6) ? el.setAttributeNS(xlink, key.substring(6), val) : "xml:" == key.substring(0, 4) ? el.setAttributeNS(xmlns, key.substring(4), val) : el.setAttribute(key, val) : el.removeAttribute(key)
                                }
                        } else "text" in attr && (el.nodeValue = attr.text)
                    } else el = glob.doc.createElementNS(xmlns, el);
                    return el
                }

                function is(o, type) {
                    return type = Str.prototype.toLowerCase.call(type), "finite" == type ? isFinite(o) : !("array" != type || !(o instanceof Array || Array.isArray && Array.isArray(o))) || ("null" == type && null === o || type == typeof o && null !== o || "object" == type && o === Object(o) || objectToString.call(o).slice(8, -1).toLowerCase() == type)
                }

                function clone(obj) {
                    if ("function" == typeof obj || Object(obj) !== obj) return obj;
                    var res = new obj.constructor;
                    for (var key in obj) obj[has](key) && (res[key] = clone(obj[key]));
                    return res
                }

                function repush(array, item) {
                    for (var i = 0, ii = array.length; i < ii; i++)
                        if (array[i] === item) return array.push(array.splice(i, 1)[0])
                }

                function cacher(f, scope, postprocessor) {
                    function newf() {
                        var arg = Array.prototype.slice.call(arguments, 0),
                            args = arg.join("␀"),
                            cache = newf.cache = newf.cache || {},
                            count = newf.count = newf.count || [];
                        return cache[has](args) ? (repush(count, args), postprocessor ? postprocessor(cache[args]) : cache[args]) : (count.length >= 1e3 && delete cache[count.shift()], count.push(args), cache[args] = f.apply(scope, arg), postprocessor ? postprocessor(cache[args]) : cache[args])
                    }
                    return newf
                }

                function angle(x1, y1, x2, y2, x3, y3) {
                    if (null == x3) {
                        var x = x1 - x2,
                            y = y1 - y2;
                        return x || y ? (180 + 180 * math.atan2(-y, -x) / PI + 360) % 360 : 0
                    }
                    return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3)
                }

                function rad(deg) {
                    return deg % 360 * PI / 180
                }

                function deg(rad) {
                    return 180 * rad / PI % 360
                }

                function svgTransform2string(tstr) {
                    var res = [];
                    return tstr = tstr.replace(/(?:^|\s)(\w+)\(([^)]+)\)/g, function(all, name, params) {
                        return params = params.split(/\s*,\s*|\s+/), "rotate" == name && 1 == params.length && params.push(0, 0), "scale" == name && (params.length > 2 ? params = params.slice(0, 2) : 2 == params.length && params.push(0, 0), 1 == params.length && params.push(params[0], 0, 0)), "skewX" == name ? res.push(["m", 1, 0, math.tan(rad(params[0])), 1, 0, 0]) : "skewY" == name ? res.push(["m", 1, math.tan(rad(params[0])), 0, 1, 0, 0]) : res.push([name.charAt(0)].concat(params)), all
                    }), res
                }

                function transform2matrix(tstr, bbox) {
                    var tdata = parseTransformString(tstr),
                        m = new Snap.Matrix;
                    if (tdata)
                        for (var i = 0, ii = tdata.length; i < ii; i++) {
                            var x1, y1, x2, y2, bb, t = tdata[i],
                                tlen = t.length,
                                command = Str(t[0]).toLowerCase(),
                                absolute = t[0] != command,
                                inver = absolute ? m.invert() : 0;
                            "t" == command && 2 == tlen ? m.translate(t[1], 0) : "t" == command && 3 == tlen ? absolute ? (x1 = inver.x(0, 0), y1 = inver.y(0, 0), x2 = inver.x(t[1], t[2]), y2 = inver.y(t[1], t[2]), m.translate(x2 - x1, y2 - y1)) : m.translate(t[1], t[2]) : "r" == command ? 2 == tlen ? (bb = bb || bbox, m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2)) : 4 == tlen && (absolute ? (x2 = inver.x(t[2], t[3]), y2 = inver.y(t[2], t[3]), m.rotate(t[1], x2, y2)) : m.rotate(t[1], t[2], t[3])) : "s" == command ? 2 == tlen || 3 == tlen ? (bb = bb || bbox, m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2)) : 4 == tlen ? absolute ? (x2 = inver.x(t[2], t[3]), y2 = inver.y(t[2], t[3]), m.scale(t[1], t[1], x2, y2)) : m.scale(t[1], t[1], t[2], t[3]) : 5 == tlen && (absolute ? (x2 = inver.x(t[3], t[4]), y2 = inver.y(t[3], t[4]), m.scale(t[1], t[2], x2, y2)) : m.scale(t[1], t[2], t[3], t[4])) : "m" == command && 7 == tlen && m.add(t[1], t[2], t[3], t[4], t[5], t[6])
                        }
                    return m
                }

                function getSomeDefs(el) {
                    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || el.node.parentNode && wrap(el.node.parentNode) || Snap.select("svg") || Snap(0, 0),
                        pdefs = p.select("defs"),
                        defs = null != pdefs && pdefs.node;
                    return defs || (defs = make("defs", p.node).node), defs
                }

                function getSomeSVG(el) {
                    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select("svg")
                }

                function unit2px(el, name, value) {
                    function getW(val) {
                        if (null == val) return E;
                        if (val == +val) return val;
                        $(mgr, {
                            width: val
                        });
                        try {
                            return mgr.getBBox().width
                        } catch (e) {
                            return 0
                        }
                    }

                    function getH(val) {
                        if (null == val) return E;
                        if (val == +val) return val;
                        $(mgr, {
                            height: val
                        });
                        try {
                            return mgr.getBBox().height
                        } catch (e) {
                            return 0
                        }
                    }

                    function set(nam, f) {
                        null == name ? out[nam] = f(el.attr(nam) || 0) : nam == name && (out = f(null == value ? el.attr(nam) || 0 : value))
                    }
                    var svg = getSomeSVG(el).node,
                        out = {},
                        mgr = svg.querySelector(".svg---mgr");
                    switch (mgr || (mgr = $("rect"), $(mgr, {
                        x: -9e9,
                        y: -9e9,
                        width: 10,
                        height: 10,
                        class: "svg---mgr",
                        fill: "none"
                    }), svg.appendChild(mgr)), el.type) {
                        case "rect":
                            set("rx", getW), set("ry", getH);
                        case "image":
                            set("width", getW), set("height", getH);
                        case "text":
                            set("x", getW), set("y", getH);
                            break;
                        case "circle":
                            set("cx", getW), set("cy", getH), set("r", getW);
                            break;
                        case "ellipse":
                            set("cx", getW), set("cy", getH), set("rx", getW), set("ry", getH);
                            break;
                        case "line":
                            set("x1", getW), set("x2", getW), set("y1", getH), set("y2", getH);
                            break;
                        case "marker":
                            set("refX", getW), set("markerWidth", getW), set("refY", getH), set("markerHeight", getH);
                            break;
                        case "radialGradient":
                            set("fx", getW), set("fy", getH);
                            break;
                        case "tspan":
                            set("dx", getW), set("dy", getH);
                            break;
                        default:
                            set(name, getW)
                    }
                    return svg.removeChild(mgr), out
                }

                function add2group(list) {
                    is(list, "array") || (list = Array.prototype.slice.call(arguments, 0));
                    for (var i = 0, j = 0, node = this.node; this[i];) delete this[i++];
                    for (i = 0; i < list.length; i++) "set" == list[i].type ? list[i].forEach(function(el) {
                        node.appendChild(el.node)
                    }) : node.appendChild(list[i].node);
                    var children = node.childNodes;
                    for (i = 0; i < children.length; i++) this[j++] = wrap(children[i]);
                    return this
                }

                function Element(el) {
                    if (el.snap in hub) return hub[el.snap];
                    var svg;
                    try {
                        svg = el.ownerSVGElement
                    } catch (e) {}
                    this.node = el, svg && (this.paper = new Paper(svg)), this.type = el.tagName || el.nodeName;
                    var id = this.id = ID(this);
                    if (this.anims = {}, this._ = {
                            transform: []
                        }, el.snap = id, hub[id] = this, "g" == this.type && (this.add = add2group), this.type in {
                            g: 1,
                            mask: 1,
                            pattern: 1,
                            symbol: 1
                        })
                        for (var method in Paper.prototype) Paper.prototype[has](method) && (this[method] = Paper.prototype[method])
                }

                function Fragment(frag) {
                    this.node = frag
                }

                function make(name, parent) {
                    var res = $(name);
                    parent.appendChild(res);
                    var el = wrap(res);
                    return el
                }

                function Paper(w, h) {
                    var res, desc, defs, proto = Paper.prototype;
                    if (w && "svg" == w.tagName) {
                        if (w.snap in hub) return hub[w.snap];
                        var doc = w.ownerDocument;
                        res = new Element(w), desc = w.getElementsByTagName("desc")[0], defs = w.getElementsByTagName("defs")[0], desc || (desc = $("desc"), desc.appendChild(doc.createTextNode("Created with Snap")), res.node.appendChild(desc)), defs || (defs = $("defs"), res.node.appendChild(defs)), res.defs = defs;
                        for (var key in proto) proto[has](key) && (res[key] = proto[key]);
                        res.paper = res.root = res
                    } else res = make("svg", glob.doc.body), $(res.node, {
                        height: h,
                        version: 1.1,
                        width: w,
                        xmlns: xmlns
                    });
                    return res
                }

                function wrap(dom) {
                    return dom ? dom instanceof Element || dom instanceof Fragment ? dom : dom.tagName && "svg" == dom.tagName.toLowerCase() ? new Paper(dom) : dom.tagName && "object" == dom.tagName.toLowerCase() && "image/svg+xml" == dom.type ? new Paper(dom.contentDocument.getElementsByTagName("svg")[0]) : new Element(dom) : dom
                }

                function jsonFiller(root, o) {
                    for (var i = 0, ii = root.length; i < ii; i++) {
                        var item = {
                                type: root[i].type,
                                attr: root[i].attr()
                            },
                            children = root[i].children();
                        o.push(item), children.length && jsonFiller(children, item.childNodes = [])
                    }
                }
                Snap.version = "0.4.0", Snap.toString = function() {
                    return "Snap v" + this.version
                }, Snap._ = {};
                var glob = {
                    win: root.window,
                    doc: root.window.document
                };
                Snap._.glob = glob;
                var has = "hasOwnProperty",
                    Str = String,
                    toFloat = parseFloat,
                    toInt = parseInt,
                    math = Math,
                    mmax = math.max,
                    mmin = math.min,
                    abs = math.abs,
                    PI = (math.pow, math.PI),
                    E = (math.round, ""),
                    objectToString = Object.prototype.toString,
                    colourRegExp = /^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?%?)\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?%?)\s*\))\s*$/i,
                    commaSpaces = (Snap._.separator = /[,\s]+/, /[\s]*,[\s]*/),
                    hsrg = {
                        hs: 1,
                        rg: 1
                    },
                    pathCommand = /([a-z])[\s,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\s]*,?[\s]*)+)/gi,
                    tCommand = /([rstm])[\s,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\s]*,?[\s]*)+)/gi,
                    pathValues = /(-?\d*\.?\d*(?:e[\-+]?\\d+)?)[\s]*,?[\s]*/gi,
                    idgen = 0,
                    idprefix = "S" + (+new Date).toString(36),
                    ID = function(el) {
                        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36)
                    },
                    xlink = "http://www.w3.org/1999/xlink",
                    xmlns = "http://www.w3.org/2000/svg",
                    hub = {};
                Snap.url = function(url) {
                    return "url('#" + url + "')"
                };
                Snap._.$ = $, Snap._.id = ID, Snap.format = function() {
                    var tokenRegex = /\{([^\}]+)\}/g,
                        objNotationRegex = /(?:(?:^|\.)(.+?)(?=\[|\.|$|\()|\[('|")(.+?)\2\])(\(\))?/g,
                        replacer = function(all, key, obj) {
                            var res = obj;
                            return key.replace(objNotationRegex, function(all, name, quote, quotedName, isFunc) {
                                name = name || quotedName, res && (name in res && (res = res[name]), "function" == typeof res && isFunc && (res = res()))
                            }), res = (null == res || res == obj ? all : res) + ""
                        };
                    return function(str, obj) {
                        return Str(str).replace(tokenRegex, function(all, key) {
                            return replacer(all, key, obj)
                        })
                    }
                }(), Snap._.clone = clone, Snap._.cacher = cacher, Snap.rad = rad, Snap.deg = deg, Snap.sin = function(angle) {
                    return math.sin(Snap.rad(angle))
                }, Snap.tan = function(angle) {
                    return math.tan(Snap.rad(angle))
                }, Snap.cos = function(angle) {
                    return math.cos(Snap.rad(angle))
                }, Snap.asin = function(num) {
                    return Snap.deg(math.asin(num))
                }, Snap.acos = function(num) {
                    return Snap.deg(math.acos(num))
                }, Snap.atan = function(num) {
                    return Snap.deg(math.atan(num))
                }, Snap.atan2 = function(num) {
                    return Snap.deg(math.atan2(num))
                }, Snap.angle = angle, Snap.len = function(x1, y1, x2, y2) {
                    return Math.sqrt(Snap.len2(x1, y1, x2, y2))
                }, Snap.len2 = function(x1, y1, x2, y2) {
                    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2)
                }, Snap.closestPoint = function(path, x, y) {
                    function distance2(p) {
                        var dx = p.x - x,
                            dy = p.y - y;
                        return dx * dx + dy * dy
                    }
                    for (var best, bestLength, scan, scanDistance, pathNode = path.node, pathLength = pathNode.getTotalLength(), precision = pathLength / pathNode.pathSegList.numberOfItems * .125, bestDistance = 1 / 0, scanLength = 0; scanLength <= pathLength; scanLength += precision)(scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance && (best = scan, bestLength = scanLength, bestDistance = scanDistance);
                    for (precision *= .5; precision > .5;) {
                        var before, after, beforeLength, afterLength, beforeDistance, afterDistance;
                        (beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance ? (best = before, bestLength = beforeLength, bestDistance = beforeDistance) : (afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance ? (best = after, bestLength = afterLength, bestDistance = afterDistance) : precision *= .5
                    }
                    return best = {
                        x: best.x,
                        y: best.y,
                        length: bestLength,
                        distance: Math.sqrt(bestDistance)
                    }
                }, Snap.is = is, Snap.snapTo = function(values, value, tolerance) {
                    if (tolerance = is(tolerance, "finite") ? tolerance : 10, is(values, "array")) {
                        for (var i = values.length; i--;)
                            if (abs(values[i] - value) <= tolerance) return values[i]
                    } else {
                        values = +values;
                        var rem = value % values;
                        if (rem < tolerance) return value - rem;
                        if (rem > values - tolerance) return value - rem + values
                    }
                    return value
                }, Snap.getRGB = cacher(function(colour) {
                    if (!colour || (colour = Str(colour)).indexOf("-") + 1) return {
                        r: -1,
                        g: -1,
                        b: -1,
                        hex: "none",
                        error: 1,
                        toString: rgbtoString
                    };
                    if ("none" == colour) return {
                        r: -1,
                        g: -1,
                        b: -1,
                        hex: "none",
                        toString: rgbtoString
                    };
                    if (!(hsrg[has](colour.toLowerCase().substring(0, 2)) || "#" == colour.charAt()) && (colour = toHex(colour)), !colour) return {
                        r: -1,
                        g: -1,
                        b: -1,
                        hex: "none",
                        error: 1,
                        toString: rgbtoString
                    };
                    var red, green, blue, opacity, t, values, rgb = colour.match(colourRegExp);
                    return rgb ? (rgb[2] && (blue = toInt(rgb[2].substring(5), 16), green = toInt(rgb[2].substring(3, 5), 16), red = toInt(rgb[2].substring(1, 3), 16)), rgb[3] && (blue = toInt((t = rgb[3].charAt(3)) + t, 16), green = toInt((t = rgb[3].charAt(2)) + t, 16), red = toInt((t = rgb[3].charAt(1)) + t, 16)), rgb[4] && (values = rgb[4].split(commaSpaces), red = toFloat(values[0]), "%" == values[0].slice(-1) && (red *= 2.55), green = toFloat(values[1]), "%" == values[1].slice(-1) && (green *= 2.55), blue = toFloat(values[2]), "%" == values[2].slice(-1) && (blue *= 2.55), "rgba" == rgb[1].toLowerCase().slice(0, 4) && (opacity = toFloat(values[3])), values[3] && "%" == values[3].slice(-1) && (opacity /= 100)), rgb[5] ? (values = rgb[5].split(commaSpaces), red = toFloat(values[0]), "%" == values[0].slice(-1) && (red /= 100), green = toFloat(values[1]), "%" == values[1].slice(-1) && (green /= 100), blue = toFloat(values[2]), "%" == values[2].slice(-1) && (blue /= 100), ("deg" == values[0].slice(-3) || "°" == values[0].slice(-1)) && (red /= 360), "hsba" == rgb[1].toLowerCase().slice(0, 4) && (opacity = toFloat(values[3])), values[3] && "%" == values[3].slice(-1) && (opacity /= 100), Snap.hsb2rgb(red, green, blue, opacity)) : rgb[6] ? (values = rgb[6].split(commaSpaces), red = toFloat(values[0]), "%" == values[0].slice(-1) && (red /= 100), green = toFloat(values[1]), "%" == values[1].slice(-1) && (green /= 100), blue = toFloat(values[2]), "%" == values[2].slice(-1) && (blue /= 100), ("deg" == values[0].slice(-3) || "°" == values[0].slice(-1)) && (red /= 360), "hsla" == rgb[1].toLowerCase().slice(0, 4) && (opacity = toFloat(values[3])), values[3] && "%" == values[3].slice(-1) && (opacity /= 100), Snap.hsl2rgb(red, green, blue, opacity)) : (red = mmin(math.round(red), 255), green = mmin(math.round(green), 255), blue = mmin(math.round(blue), 255), opacity = mmin(mmax(opacity, 0), 1), rgb = {
                        r: red,
                        g: green,
                        b: blue,
                        toString: rgbtoString
                    }, rgb.hex = "#" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1), rgb.opacity = is(opacity, "finite") ? opacity : 1, rgb)) : {
                        r: -1,
                        g: -1,
                        b: -1,
                        hex: "none",
                        error: 1,
                        toString: rgbtoString
                    }
                }, Snap), Snap.hsb = cacher(function(h, s, b) {
                    return Snap.hsb2rgb(h, s, b).hex
                }), Snap.hsl = cacher(function(h, s, l) {
                    return Snap.hsl2rgb(h, s, l).hex
                }), Snap.rgb = cacher(function(r, g, b, o) {
                    if (is(o, "finite")) {
                        var round = math.round;
                        return "rgba(" + [round(r), round(g), round(b), +o.toFixed(2)] + ")"
                    }
                    return "#" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1)
                });
                var toHex = function(color) {
                        var i = glob.doc.getElementsByTagName("head")[0] || glob.doc.getElementsByTagName("svg")[0],
                            red = "rgb(255, 0, 0)";
                        return (toHex = cacher(function(color) {
                            if ("red" == color.toLowerCase()) return red;
                            i.style.color = red, i.style.color = color;
                            var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue("color");
                            return out == red ? null : out
                        }))(color)
                    },
                    hsbtoString = function() {
                        return "hsb(" + [this.h, this.s, this.b] + ")"
                    },
                    hsltoString = function() {
                        return "hsl(" + [this.h, this.s, this.l] + ")"
                    },
                    rgbtoString = function() {
                        return 1 == this.opacity || null == this.opacity ? this.hex : "rgba(" + [this.r, this.g, this.b, this.opacity] + ")"
                    },
                    prepareRGB = function(r, g, b) {
                        if (null == g && is(r, "object") && "r" in r && "g" in r && "b" in r && (b = r.b, g = r.g, r = r.r), null == g && is(r, string)) {
                            var clr = Snap.getRGB(r);
                            r = clr.r, g = clr.g, b = clr.b
                        }
                        return (r > 1 || g > 1 || b > 1) && (r /= 255, g /= 255, b /= 255), [r, g, b]
                    },
                    packageRGB = function(r, g, b, o) {
                        r = math.round(255 * r), g = math.round(255 * g), b = math.round(255 * b);
                        var rgb = {
                            r: r,
                            g: g,
                            b: b,
                            opacity: is(o, "finite") ? o : 1,
                            hex: Snap.rgb(r, g, b),
                            toString: rgbtoString
                        };
                        return is(o, "finite") && (rgb.opacity = o), rgb
                    };
                Snap.color = function(clr) {
                    var rgb;
                    return is(clr, "object") && "h" in clr && "s" in clr && "b" in clr ? (rgb = Snap.hsb2rgb(clr), clr.r = rgb.r, clr.g = rgb.g, clr.b = rgb.b, clr.opacity = 1, clr.hex = rgb.hex) : is(clr, "object") && "h" in clr && "s" in clr && "l" in clr ? (rgb = Snap.hsl2rgb(clr), clr.r = rgb.r, clr.g = rgb.g, clr.b = rgb.b, clr.opacity = 1, clr.hex = rgb.hex) : (is(clr, "string") && (clr = Snap.getRGB(clr)), is(clr, "object") && "r" in clr && "g" in clr && "b" in clr && !("error" in clr) ? (rgb = Snap.rgb2hsl(clr), clr.h = rgb.h, clr.s = rgb.s, clr.l = rgb.l, rgb = Snap.rgb2hsb(clr), clr.v = rgb.b) : (clr = {
                        hex: "none"
                    }, clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1, clr.error = 1)), clr.toString = rgbtoString, clr
                }, Snap.hsb2rgb = function(h, s, v, o) {
                    is(h, "object") && "h" in h && "s" in h && "b" in h && (v = h.b, s = h.s, o = h.o, h = h.h), h *= 360;
                    var R, G, B, X, C;
                    return h = h % 360 / 60, C = v * s, X = C * (1 - abs(h % 2 - 1)), R = G = B = v - C, h = ~~h, R += [C, X, 0, 0, X, C][h], G += [X, C, C, X, 0, 0][h], B += [0, 0, X, C, C, X][h], packageRGB(R, G, B, o)
                }, Snap.hsl2rgb = function(h, s, l, o) {
                    is(h, "object") && "h" in h && "s" in h && "l" in h && (l = h.l, s = h.s, h = h.h), (h > 1 || s > 1 || l > 1) && (h /= 360, s /= 100, l /= 100), h *= 360;
                    var R, G, B, X, C;
                    return h = h % 360 / 60, C = 2 * s * (l < .5 ? l : 1 - l), X = C * (1 - abs(h % 2 - 1)), R = G = B = l - C / 2, h = ~~h, R += [C, X, 0, 0, X, C][h], G += [X, C, C, X, 0, 0][h], B += [0, 0, X, C, C, X][h], packageRGB(R, G, B, o)
                }, Snap.rgb2hsb = function(r, g, b) {
                    b = prepareRGB(r, g, b), r = b[0], g = b[1], b = b[2];
                    var H, S, V, C;
                    return V = mmax(r, g, b), C = V - mmin(r, g, b), H = 0 == C ? null : V == r ? (g - b) / C : V == g ? (b - r) / C + 2 : (r - g) / C + 4, H = (H + 360) % 6 * 60 / 360, S = 0 == C ? 0 : C / V, {
                        h: H,
                        s: S,
                        b: V,
                        toString: hsbtoString
                    }
                }, Snap.rgb2hsl = function(r, g, b) {
                    b = prepareRGB(r, g, b), r = b[0], g = b[1], b = b[2];
                    var H, S, L, M, m, C;
                    return M = mmax(r, g, b), m = mmin(r, g, b), C = M - m, H = 0 == C ? null : M == r ? (g - b) / C : M == g ? (b - r) / C + 2 : (r - g) / C + 4, H = (H + 360) % 6 * 60 / 360, L = (M + m) / 2, S = 0 == C ? 0 : L < .5 ? C / (2 * L) : C / (2 - 2 * L), {
                        h: H,
                        s: S,
                        l: L,
                        toString: hsltoString
                    }
                }, Snap.parsePathString = function(pathString) {
                    if (!pathString) return null;
                    var pth = Snap.path(pathString);
                    if (pth.arr) return Snap.path.clone(pth.arr);
                    var paramCounts = {
                            a: 7,
                            c: 6,
                            o: 2,
                            h: 1,
                            l: 2,
                            m: 2,
                            r: 4,
                            q: 4,
                            s: 4,
                            t: 2,
                            v: 1,
                            u: 3,
                            z: 0
                        },
                        data = [];
                    return is(pathString, "array") && is(pathString[0], "array") && (data = Snap.path.clone(pathString)), data.length || Str(pathString).replace(pathCommand, function(a, b, c) {
                        var params = [],
                            name = b.toLowerCase();
                        if (c.replace(pathValues, function(a, b) {
                                b && params.push(+b)
                            }), "m" == name && params.length > 2 && (data.push([b].concat(params.splice(0, 2))), name = "l", b = "m" == b ? "l" : "L"), "o" == name && 1 == params.length && data.push([b, params[0]]), "r" == name) data.push([b].concat(params));
                        else
                            for (; params.length >= paramCounts[name] && (data.push([b].concat(params.splice(0, paramCounts[name]))), paramCounts[name]););
                    }), data.toString = Snap.path.toString, pth.arr = Snap.path.clone(data), data
                };
                var parseTransformString = Snap.parseTransformString = function(TString) {
                    if (!TString) return null;
                    var data = [];
                    return is(TString, "array") && is(TString[0], "array") && (data = Snap.path.clone(TString)), data.length || Str(TString).replace(tCommand, function(a, b, c) {
                        var params = [];
                        b.toLowerCase();
                        c.replace(pathValues, function(a, b) {
                            b && params.push(+b)
                        }), data.push([b].concat(params))
                    }), data.toString = Snap.path.toString, data
                };
                Snap._.svgTransform2string = svgTransform2string, Snap._.rgTransform = /^[a-z][\s]*-?\.?\d/i, Snap._.transform2matrix = transform2matrix, Snap._unit2px = unit2px;
                glob.doc.contains || glob.doc.compareDocumentPosition ? function(a, b) {
                    var adown = 9 == a.nodeType ? a.documentElement : a,
                        bup = b && b.parentNode;
                    return a == bup || !(!bup || 1 != bup.nodeType || !(adown.contains ? adown.contains(bup) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(bup)))
                } : function(a, b) {
                    if (b)
                        for (; b;)
                            if (b = b.parentNode, b == a) return !0;
                    return !1
                };
                Snap._.getSomeDefs = getSomeDefs, Snap._.getSomeSVG = getSomeSVG, Snap.select = function(query) {
                    return query = Str(query).replace(/([^\\]):/g, "$1\\:"), wrap(glob.doc.querySelector(query))
                }, Snap.selectAll = function(query) {
                    for (var nodelist = glob.doc.querySelectorAll(query), set = (Snap.set || Array)(), i = 0; i < nodelist.length; i++) set.push(wrap(nodelist[i]));
                    return set
                }, setInterval(function() {
                    for (var key in hub)
                        if (hub[has](key)) {
                            var el = hub[key],
                                node = el.node;
                            ("svg" != el.type && !node.ownerSVGElement || "svg" == el.type && (!node.parentNode || "ownerSVGElement" in node.parentNode && !node.ownerSVGElement)) && delete hub[key]
                        }
                }, 1e4), Element.prototype.attr = function(params, value) {
                    var el = this,
                        node = el.node;
                    if (!params) {
                        if (1 != node.nodeType) return {
                            text: node.nodeValue
                        };
                        for (var attr = node.attributes, out = {}, i = 0, ii = attr.length; i < ii; i++) out[attr[i].nodeName] = attr[i].nodeValue;
                        return out
                    }
                    if (is(params, "string")) {
                        if (!(arguments.length > 1)) return eve("snap.util.getattr." + params, el).firstDefined();
                        var json = {};
                        json[params] = value, params = json
                    }
                    for (var att in params) params[has](att) && eve("snap.util.attr." + att, el, params[att]);
                    return el
                }, Snap.parse = function(svg) {
                    var f = glob.doc.createDocumentFragment(),
                        full = !0,
                        div = glob.doc.createElement("div");
                    if (svg = Str(svg), svg.match(/^\s*<\s*svg(?:\s|>)/) || (svg = "<svg>" + svg + "</svg>", full = !1), div.innerHTML = svg, svg = div.getElementsByTagName("svg")[0])
                        if (full) f = svg;
                        else
                            for (; svg.firstChild;) f.appendChild(svg.firstChild);
                    return new Fragment(f)
                }, Snap.fragment = function() {
                    for (var args = Array.prototype.slice.call(arguments, 0), f = glob.doc.createDocumentFragment(), i = 0, ii = args.length; i < ii; i++) {
                        var item = args[i];
                        item.node && item.node.nodeType && f.appendChild(item.node), item.nodeType && f.appendChild(item), "string" == typeof item && f.appendChild(Snap.parse(item).node)
                    }
                    return new Fragment(f)
                }, Snap._.make = make, Snap._.wrap = wrap, Paper.prototype.el = function(name, attr) {
                    var el = make(name, this.node);
                    return attr && el.attr(attr), el
                }, Element.prototype.children = function() {
                    for (var out = [], ch = this.node.childNodes, i = 0, ii = ch.length; i < ii; i++) out[i] = Snap(ch[i]);
                    return out
                }, Element.prototype.toJSON = function() {
                    var out = [];
                    return jsonFiller([this], out), out[0]
                }, eve.on("snap.util.getattr", function() {
                    var att = eve.nt();
                    att = att.substring(att.lastIndexOf(".") + 1);
                    var css = att.replace(/[A-Z]/g, function(letter) {
                        return "-" + letter.toLowerCase()
                    });
                    return cssAttr[has](css) ? this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css) : $(this.node, att)
                });
                var cssAttr = {
                    "alignment-baseline": 0,
                    "baseline-shift": 0,
                    clip: 0,
                    "clip-path": 0,
                    "clip-rule": 0,
                    color: 0,
                    "color-interpolation": 0,
                    "color-interpolation-filters": 0,
                    "color-profile": 0,
                    "color-rendering": 0,
                    cursor: 0,
                    direction: 0,
                    display: 0,
                    "dominant-baseline": 0,
                    "enable-background": 0,
                    fill: 0,
                    "fill-opacity": 0,
                    "fill-rule": 0,
                    filter: 0,
                    "flood-color": 0,
                    "flood-opacity": 0,
                    font: 0,
                    "font-family": 0,
                    "font-size": 0,
                    "font-size-adjust": 0,
                    "font-stretch": 0,
                    "font-style": 0,
                    "font-variant": 0,
                    "font-weight": 0,
                    "glyph-orientation-horizontal": 0,
                    "glyph-orientation-vertical": 0,
                    "image-rendering": 0,
                    kerning: 0,
                    "letter-spacing": 0,
                    "lighting-color": 0,
                    marker: 0,
                    "marker-end": 0,
                    "marker-mid": 0,
                    "marker-start": 0,
                    mask: 0,
                    opacity: 0,
                    overflow: 0,
                    "pointer-events": 0,
                    "shape-rendering": 0,
                    "stop-color": 0,
                    "stop-opacity": 0,
                    stroke: 0,
                    "stroke-dasharray": 0,
                    "stroke-dashoffset": 0,
                    "stroke-linecap": 0,
                    "stroke-linejoin": 0,
                    "stroke-miterlimit": 0,
                    "stroke-opacity": 0,
                    "stroke-width": 0,
                    "text-anchor": 0,
                    "text-decoration": 0,
                    "text-rendering": 0,
                    "unicode-bidi": 0,
                    visibility: 0,
                    "word-spacing": 0,
                    "writing-mode": 0
                };
                eve.on("snap.util.attr", function(value) {
                        var att = eve.nt(),
                            attr = {};
                        att = att.substring(att.lastIndexOf(".") + 1), attr[att] = value;
                        var style = att.replace(/-(\w)/gi, function(all, letter) {
                                return letter.toUpperCase()
                            }),
                            css = att.replace(/[A-Z]/g, function(letter) {
                                return "-" + letter.toLowerCase()
                            });
                        cssAttr[has](css) ? this.node.style[style] = null == value ? E : value : $(this.node, attr)
                    }),
                    function(proto) {}(Paper.prototype), Snap.ajax = function(url, postData, callback, scope) {
                        var req = new XMLHttpRequest,
                            id = ID();
                        if (req) {
                            if (is(postData, "function")) scope = callback, callback = postData, postData = null;
                            else if (is(postData, "object")) {
                                var pd = [];
                                for (var key in postData) postData.hasOwnProperty(key) && pd.push(encodeURIComponent(key) + "=" + encodeURIComponent(postData[key]));
                                postData = pd.join("&")
                            }
                            return req.open(postData ? "POST" : "GET", url, !0), postData && (req.setRequestHeader("X-Requested-With", "XMLHttpRequest"), req.setRequestHeader("Content-type", "application/x-www-form-urlencoded")), callback && (eve.once("snap.ajax." + id + ".0", callback), eve.once("snap.ajax." + id + ".200", callback), eve.once("snap.ajax." + id + ".304", callback)), req.onreadystatechange = function() {
                                4 == req.readyState && eve("snap.ajax." + id + "." + req.status, scope, req)
                            }, 4 == req.readyState ? req : (req.send(postData), req)
                        }
                    }, Snap.load = function(url, callback, scope) {
                        Snap.ajax(url, function(req) {
                            var f = Snap.parse(req.responseText);
                            scope ? callback.call(scope, f) : callback(f)
                        })
                    };
                var getOffset = function(elem) {
                    var box = elem.getBoundingClientRect(),
                        doc = elem.ownerDocument,
                        body = doc.body,
                        docElem = doc.documentElement,
                        clientTop = docElem.clientTop || body.clientTop || 0,
                        clientLeft = docElem.clientLeft || body.clientLeft || 0,
                        top = box.top + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop) - clientTop,
                        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;
                    return {
                        y: top,
                        x: left
                    }
                };
                return Snap.getElementByPoint = function(x, y) {
                    var paper = this,
                        target = (paper.canvas, glob.doc.elementFromPoint(x, y));
                    if (glob.win.opera && "svg" == target.tagName) {
                        var so = getOffset(target),
                            sr = target.createSVGRect();
                        sr.x = x - so.x, sr.y = y - so.y, sr.width = sr.height = 1;
                        var hits = target.getIntersectionList(sr, null);
                        hits.length && (target = hits[hits.length - 1])
                    }
                    return target ? wrap(target) : null
                }, Snap.plugin = function(f) {
                    f(Snap, Element, Paper, glob, Fragment)
                }, glob.win.Snap = Snap, Snap
            }(window || this);
        return Snap.plugin(function(Snap, Element, Paper, glob, Fragment) {
            function extractTransform(el, tstr) {
                if (null == tstr) {
                    var doReturn = !0;
                    if (tstr = "linearGradient" == el.type || "radialGradient" == el.type ? el.node.getAttribute("gradientTransform") : "pattern" == el.type ? el.node.getAttribute("patternTransform") : el.node.getAttribute("transform"), !tstr) return new Snap.Matrix;
                    tstr = Snap._.svgTransform2string(tstr)
                } else tstr = Snap._.rgTransform.test(tstr) ? Str(tstr).replace(/\.{3}|\u2026/g, el._.transform || "") : Snap._.svgTransform2string(tstr), is(tstr, "array") && (tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr)), el._.transform = tstr;
                var m = Snap._.transform2matrix(tstr, el.getBBox(1));
                return doReturn ? m : void(el.matrix = m)
            }

            function fixids(el) {
                function urltest(it, name) {
                    var val = $(it.node, name);
                    val = val && val.match(url), val = val && val[2], val && "#" == val.charAt() && (val = val.substring(1), val && (uses[val] = (uses[val] || []).concat(function(id) {
                        var attr = {};
                        attr[name] = URL(id), $(it.node, attr)
                    })))
                }

                function linktest(it) {
                    var val = $(it.node, "xlink:href");
                    val && "#" == val.charAt() && (val = val.substring(1), val && (uses[val] = (uses[val] || []).concat(function(id) {
                        it.attr("xlink:href", "#" + id)
                    })))
                }
                for (var it, els = el.selectAll("*"), url = /^\s*url\(("|'|)(.*)\1\)\s*$/, ids = [], uses = {}, i = 0, ii = els.length; i < ii; i++) {
                    it = els[i], urltest(it, "fill"), urltest(it, "stroke"), urltest(it, "filter"), urltest(it, "mask"), urltest(it, "clip-path"), linktest(it);
                    var oldid = $(it.node, "id");
                    oldid && ($(it.node, {
                        id: it.id
                    }), ids.push({
                        old: oldid,
                        id: it.id
                    }))
                }
                for (i = 0, ii = ids.length; i < ii; i++) {
                    var fs = uses[ids[i].old];
                    if (fs)
                        for (var j = 0, jj = fs.length; j < jj; j++) fs[j](ids[i].id)
                }
            }

            function slice(from, to, f) {
                return function(arr) {
                    var res = arr.slice(from, to);
                    return 1 == res.length && (res = res[0]), f ? f(res) : res
                }
            }

            function toString(type) {
                return function() {
                    var res = type ? "<" + this.type : "",
                        attr = this.node.attributes,
                        chld = this.node.childNodes;
                    if (type)
                        for (var i = 0, ii = attr.length; i < ii; i++) res += " " + attr[i].name + '="' + attr[i].value.replace(/"/g, '\\"') + '"';
                    if (chld.length) {
                        for (type && (res += ">"), i = 0, ii = chld.length; i < ii; i++) 3 == chld[i].nodeType ? res += chld[i].nodeValue : 1 == chld[i].nodeType && (res += wrap(chld[i]).toString());
                        type && (res += "</" + this.type + ">")
                    } else type && (res += "/>");
                    return res
                }
            }
            var elproto = Element.prototype,
                is = Snap.is,
                Str = String,
                unit2px = Snap._unit2px,
                $ = Snap._.$,
                make = Snap._.make,
                getSomeDefs = Snap._.getSomeDefs,
                has = "hasOwnProperty",
                wrap = Snap._.wrap;
            elproto.getBBox = function(isWithoutTransform) {
                if (!Snap.Matrix || !Snap.path) return this.node.getBBox();
                var el = this,
                    m = new Snap.Matrix;
                if (el.removed) return Snap._.box();
                for (;
                    "use" == el.type;)
                    if (isWithoutTransform || (m = m.add(el.transform().localMatrix.translate(el.attr("x") || 0, el.attr("y") || 0))), el.original) el = el.original;
                    else {
                        var href = el.attr("xlink:href");
                        el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf("#") + 1))
                    }
                var _ = el._,
                    pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;
                try {
                    return isWithoutTransform ? (_.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox()), Snap._.box(_.bboxwt)) : (el.realPath = pathfinder(el), el.matrix = el.transform().localMatrix, _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix))), Snap._.box(_.bbox))
                } catch (e) {
                    return Snap._.box()
                }
            };
            var propString = function() {
                return this.string
            };
            elproto.transform = function(tstr) {
                var _ = this._;
                if (null == tstr) {
                    for (var i, papa = this, global = new Snap.Matrix(this.node.getCTM()), local = extractTransform(this), ms = [local], m = new Snap.Matrix, localString = local.toTransformString(), string = Str(local) == Str(this.matrix) ? Str(_.transform) : localString;
                        "svg" != papa.type && (papa = papa.parent());) ms.push(extractTransform(papa));
                    for (i = ms.length; i--;) m.add(ms[i]);
                    return {
                        string: string,
                        globalMatrix: global,
                        totalMatrix: m,
                        localMatrix: local,
                        diffMatrix: global.clone().add(local.invert()),
                        global: global.toTransformString(),
                        total: m.toTransformString(),
                        local: localString,
                        toString: propString
                    }
                }
                return tstr instanceof Snap.Matrix ? (this.matrix = tstr, this._.transform = tstr.toTransformString()) : extractTransform(this, tstr), this.node && ("linearGradient" == this.type || "radialGradient" == this.type ? $(this.node, {
                    gradientTransform: this.matrix
                }) : "pattern" == this.type ? $(this.node, {
                    patternTransform: this.matrix
                }) : $(this.node, {
                    transform: this.matrix
                })), this
            }, elproto.parent = function() {
                return wrap(this.node.parentNode)
            }, elproto.append = elproto.add = function(el) {
                if (el) {
                    if ("set" == el.type) {
                        var it = this;
                        return el.forEach(function(el) {
                            it.add(el)
                        }), this
                    }
                    el = wrap(el), this.node.appendChild(el.node), el.paper = this.paper
                }
                return this
            }, elproto.appendTo = function(el) {
                return el && (el = wrap(el), el.append(this)), this
            }, elproto.prepend = function(el) {
                if (el) {
                    if ("set" == el.type) {
                        var first, it = this;
                        return el.forEach(function(el) {
                            first ? first.after(el) : it.prepend(el), first = el
                        }), this
                    }
                    el = wrap(el);
                    var parent = el.parent();
                    this.node.insertBefore(el.node, this.node.firstChild), this.add && this.add(), el.paper = this.paper, this.parent() && this.parent().add(), parent && parent.add()
                }
                return this
            }, elproto.prependTo = function(el) {
                return el = wrap(el), el.prepend(this), this
            }, elproto.before = function(el) {
                if ("set" == el.type) {
                    var it = this;
                    return el.forEach(function(el) {
                        var parent = el.parent();
                        it.node.parentNode.insertBefore(el.node, it.node), parent && parent.add()
                    }), this.parent().add(), this
                }
                el = wrap(el);
                var parent = el.parent();
                return this.node.parentNode.insertBefore(el.node, this.node), this.parent() && this.parent().add(), parent && parent.add(), el.paper = this.paper, this
            }, elproto.after = function(el) {
                el = wrap(el);
                var parent = el.parent();
                return this.node.nextSibling ? this.node.parentNode.insertBefore(el.node, this.node.nextSibling) : this.node.parentNode.appendChild(el.node), this.parent() && this.parent().add(), parent && parent.add(), el.paper = this.paper, this
            }, elproto.insertBefore = function(el) {
                el = wrap(el);
                var parent = this.parent();
                return el.node.parentNode.insertBefore(this.node, el.node), this.paper = el.paper, parent && parent.add(), el.parent() && el.parent().add(), this
            }, elproto.insertAfter = function(el) {
                el = wrap(el);
                var parent = this.parent();
                return el.node.parentNode.insertBefore(this.node, el.node.nextSibling), this.paper = el.paper, parent && parent.add(), el.parent() && el.parent().add(), this
            }, elproto.remove = function() {
                var parent = this.parent();
                return this.node.parentNode && this.node.parentNode.removeChild(this.node), delete this.paper, this.removed = !0, parent && parent.add(), this
            }, elproto.select = function(query) {
                return wrap(this.node.querySelector(query))
            }, elproto.selectAll = function(query) {
                for (var nodelist = this.node.querySelectorAll(query), set = (Snap.set || Array)(), i = 0; i < nodelist.length; i++) set.push(wrap(nodelist[i]));
                return set
            }, elproto.asPX = function(attr, value) {
                return null == value && (value = this.attr(attr)), +unit2px(this, attr, value)
            }, elproto.use = function() {
                var use, id = this.node.id;
                return id || (id = this.id, $(this.node, {
                    id: id
                })), use = "linearGradient" == this.type || "radialGradient" == this.type || "pattern" == this.type ? make(this.type, this.node.parentNode) : make("use", this.node.parentNode), $(use.node, {
                    "xlink:href": "#" + id
                }), use.original = this, use
            }, elproto.clone = function() {
                var clone = wrap(this.node.cloneNode(!0));
                return $(clone.node, "id") && $(clone.node, {
                    id: clone.id
                }), fixids(clone), clone.insertAfter(this), clone
            }, elproto.toDefs = function() {
                var defs = getSomeDefs(this);
                return defs.appendChild(this.node), this
            }, elproto.pattern = elproto.toPattern = function(x, y, width, height) {
                var p = make("pattern", getSomeDefs(this));
                return null == x && (x = this.getBBox()), is(x, "object") && "x" in x && (y = x.y, width = x.width, height = x.height, x = x.x), $(p.node, {
                    x: x,
                    y: y,
                    width: width,
                    height: height,
                    patternUnits: "userSpaceOnUse",
                    id: p.id,
                    viewBox: [x, y, width, height].join(" ")
                }), p.node.appendChild(this.node), p
            }, elproto.marker = function(x, y, width, height, refX, refY) {
                var p = make("marker", getSomeDefs(this));
                return null == x && (x = this.getBBox()), is(x, "object") && "x" in x && (y = x.y, width = x.width, height = x.height, refX = x.refX || x.cx, refY = x.refY || x.cy, x = x.x), $(p.node, {
                    viewBox: [x, y, width, height].join(" "),
                    markerWidth: width,
                    markerHeight: height,
                    orient: "auto",
                    refX: refX || 0,
                    refY: refY || 0,
                    id: p.id
                }), p.node.appendChild(this.node), p
            };
            var Animation = function(attr, ms, easing, callback) {
                "function" != typeof easing || easing.length || (callback = easing, easing = mina.linear), this.attr = attr, this.dur = ms, easing && (this.easing = easing), callback && (this.callback = callback)
            };
            Snap._.Animation = Animation, Snap.animation = function(attr, ms, easing, callback) {
                return new Animation(attr, ms, easing, callback)
            }, elproto.inAnim = function() {
                var el = this,
                    res = [];
                for (var id in el.anims) el.anims[has](id) && ! function(a) {
                    res.push({
                        anim: new Animation(a._attrs, a.dur, a.easing, a._callback),
                        mina: a,
                        curStatus: a.status(),
                        status: function(val) {
                            return a.status(val)
                        },
                        stop: function() {
                            a.stop()
                        }
                    })
                }(el.anims[id]);
                return res
            }, Snap.animate = function(from, to, setter, ms, easing, callback) {
                "function" != typeof easing || easing.length || (callback = easing, easing = mina.linear);
                var now = mina.time(),
                    anim = mina(from, to, now, now + ms, mina.time, setter, easing);
                return callback && eve.once("mina.finish." + anim.id, callback), anim
            }, elproto.stop = function() {
                for (var anims = this.inAnim(), i = 0, ii = anims.length; i < ii; i++) anims[i].stop();
                return this
            }, elproto.animate = function(attrs, ms, easing, callback) {
                "function" != typeof easing || easing.length || (callback = easing, easing = mina.linear), attrs instanceof Animation && (callback = attrs.callback, easing = attrs.easing, ms = attrs.dur, attrs = attrs.attr);
                var from, to, f, eq, fkeys = [],
                    tkeys = [],
                    keys = {},
                    el = this;
                for (var key in attrs)
                    if (attrs[has](key)) {
                        el.equal ? (eq = el.equal(key, Str(attrs[key])), from = eq.from, to = eq.to, f = eq.f) : (from = +el.attr(key), to = +attrs[key]);
                        var len = is(from, "array") ? from.length : 1;
                        keys[key] = slice(fkeys.length, fkeys.length + len, f), fkeys = fkeys.concat(from), tkeys = tkeys.concat(to)
                    }
                var now = mina.time(),
                    anim = mina(fkeys, tkeys, now, now + ms, mina.time, function(val) {
                        var attr = {};
                        for (var key in keys) keys[has](key) && (attr[key] = keys[key](val));
                        el.attr(attr)
                    }, easing);
                return el.anims[anim.id] = anim, anim._attrs = attrs, anim._callback = callback, eve("snap.animcreated." + el.id, anim), eve.once("mina.finish." + anim.id, function() {
                    delete el.anims[anim.id], callback && callback.call(el)
                }), eve.once("mina.stop." + anim.id, function() {
                    delete el.anims[anim.id]
                }), el
            };
            var eldata = {};
            elproto.data = function(key, value) {
                var data = eldata[this.id] = eldata[this.id] || {};
                if (0 == arguments.length) return eve("snap.data.get." + this.id, this, data, null), data;
                if (1 == arguments.length) {
                    if (Snap.is(key, "object")) {
                        for (var i in key) key[has](i) && this.data(i, key[i]);
                        return this
                    }
                    return eve("snap.data.get." + this.id, this, data[key], key), data[key]
                }
                return data[key] = value, eve("snap.data.set." + this.id, this, value, key), this
            }, elproto.removeData = function(key) {
                return null == key ? eldata[this.id] = {} : eldata[this.id] && delete eldata[this.id][key], this
            }, elproto.outerSVG = elproto.toString = toString(1), elproto.innerSVG = toString(), elproto.toDataURL = function() {
                if (window && window.btoa) {
                    var bb = this.getBBox(),
                        svg = Snap.format('<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="{width}" height="{height}" viewBox="{x} {y} {width} {height}">{contents}</svg>', {
                            x: +bb.x.toFixed(3),
                            y: +bb.y.toFixed(3),
                            width: +bb.width.toFixed(3),
                            height: +bb.height.toFixed(3),
                            contents: this.outerSVG()
                        });
                    return "data:image/svg+xml;base64," + btoa(unescape(encodeURIComponent(svg)))
                }
            }, Fragment.prototype.select = elproto.select, Fragment.prototype.selectAll = elproto.selectAll
        }), Snap.plugin(function(Snap, Element, Paper, glob, Fragment) {
            function Matrix(a, b, c, d, e, f) {
                return null == b && "[object SVGMatrix]" == objectToString.call(a) ? (this.a = a.a, this.b = a.b, this.c = a.c, this.d = a.d, this.e = a.e, void(this.f = a.f)) : void(null != a ? (this.a = +a, this.b = +b, this.c = +c, this.d = +d, this.e = +e, this.f = +f) : (this.a = 1, this.b = 0, this.c = 0, this.d = 1, this.e = 0, this.f = 0))
            }
            var objectToString = Object.prototype.toString,
                Str = String,
                math = Math,
                E = "";
            ! function(matrixproto) {
                function norm(a) {
                    return a[0] * a[0] + a[1] * a[1]
                }

                function normalize(a) {
                    var mag = math.sqrt(norm(a));
                    a[0] && (a[0] /= mag), a[1] && (a[1] /= mag)
                }
                matrixproto.add = function(a, b, c, d, e, f) {
                    var x, y, z, res, out = [
                            [],
                            [],
                            []
                        ],
                        m = [
                            [this.a, this.c, this.e],
                            [this.b, this.d, this.f],
                            [0, 0, 1]
                        ],
                        matrix = [
                            [a, c, e],
                            [b, d, f],
                            [0, 0, 1]
                        ];
                    for (a && a instanceof Matrix && (matrix = [
                            [a.a, a.c, a.e],
                            [a.b, a.d, a.f],
                            [0, 0, 1]
                        ]), x = 0; x < 3; x++)
                        for (y = 0; y < 3; y++) {
                            for (res = 0, z = 0; z < 3; z++) res += m[x][z] * matrix[z][y];
                            out[x][y] = res
                        }
                    return this.a = out[0][0], this.b = out[1][0], this.c = out[0][1], this.d = out[1][1], this.e = out[0][2], this.f = out[1][2], this
                }, matrixproto.invert = function() {
                    var me = this,
                        x = me.a * me.d - me.b * me.c;
                    return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x)
                }, matrixproto.clone = function() {
                    return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f)
                }, matrixproto.translate = function(x, y) {
                    return this.add(1, 0, 0, 1, x, y)
                }, matrixproto.scale = function(x, y, cx, cy) {
                    return null == y && (y = x), (cx || cy) && this.add(1, 0, 0, 1, cx, cy), this.add(x, 0, 0, y, 0, 0), (cx || cy) && this.add(1, 0, 0, 1, -cx, -cy), this
                }, matrixproto.rotate = function(a, x, y) {
                    a = Snap.rad(a), x = x || 0, y = y || 0;
                    var cos = +math.cos(a).toFixed(9),
                        sin = +math.sin(a).toFixed(9);
                    return this.add(cos, sin, -sin, cos, x, y), this.add(1, 0, 0, 1, -x, -y)
                }, matrixproto.x = function(x, y) {
                    return x * this.a + y * this.c + this.e
                }, matrixproto.y = function(x, y) {
                    return x * this.b + y * this.d + this.f
                }, matrixproto.get = function(i) {
                    return +this[Str.fromCharCode(97 + i)].toFixed(4)
                }, matrixproto.toString = function() {
                    return "matrix(" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + ")"
                }, matrixproto.offset = function() {
                    return [this.e.toFixed(4), this.f.toFixed(4)]
                }, matrixproto.determinant = function() {
                    return this.a * this.d - this.b * this.c
                }, matrixproto.split = function() {
                    var out = {};
                    out.dx = this.e, out.dy = this.f;
                    var row = [
                        [this.a, this.c],
                        [this.b, this.d]
                    ];
                    out.scalex = math.sqrt(norm(row[0])), normalize(row[0]), out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1], row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear], out.scaley = math.sqrt(norm(row[1])), normalize(row[1]), out.shear /= out.scaley, this.determinant() < 0 && (out.scalex = -out.scalex);
                    var sin = -row[0][1],
                        cos = row[1][1];
                    return cos < 0 ? (out.rotate = Snap.deg(math.acos(cos)), sin < 0 && (out.rotate = 360 - out.rotate)) : out.rotate = Snap.deg(math.asin(sin)), out.isSimple = !(+out.shear.toFixed(9) || out.scalex.toFixed(9) != out.scaley.toFixed(9) && out.rotate), out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate, out.noRotation = !+out.shear.toFixed(9) && !out.rotate, out
                }, matrixproto.toTransformString = function(shorter) {
                    var s = shorter || this.split();
                    return +s.shear.toFixed(9) ? "m" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)] : (s.scalex = +s.scalex.toFixed(4), s.scaley = +s.scaley.toFixed(4), s.rotate = +s.rotate.toFixed(4), (s.dx || s.dy ? "t" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) + (1 != s.scalex || 1 != s.scaley ? "s" + [s.scalex, s.scaley, 0, 0] : E) + (s.rotate ? "r" + [+s.rotate.toFixed(4), 0, 0] : E))
                }
            }(Matrix.prototype), Snap.Matrix = Matrix, Snap.matrix = function(a, b, c, d, e, f) {
                return new Matrix(a, b, c, d, e, f)
            }
        }), Snap.plugin(function(Snap, Element, Paper, glob, Fragment) {
            function fillStroke(name) {
                return function(value) {
                    if (eve.stop(), value instanceof Fragment && 1 == value.node.childNodes.length && ("radialGradient" == value.node.firstChild.tagName || "linearGradient" == value.node.firstChild.tagName || "pattern" == value.node.firstChild.tagName) && (value = value.node.firstChild, getSomeDefs(this).appendChild(value), value = wrap(value)), value instanceof Element)
                        if ("radialGradient" == value.type || "linearGradient" == value.type || "pattern" == value.type) {
                            value.node.id || $(value.node, {
                                id: value.id
                            });
                            var fill = URL(value.node.id)
                        } else fill = value.attr(name);
                    else if (fill = Snap.color(value),
                        fill.error) {
                        var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);
                        grad ? (grad.node.id || $(grad.node, {
                            id: grad.id
                        }), fill = URL(grad.node.id)) : fill = value
                    } else fill = Str(fill);
                    var attrs = {};
                    attrs[name] = fill, $(this.node, attrs), this.node.style[name] = E
                }
            }

            function setFontSize(value) {
                eve.stop(), value == +value && (value += "px"), this.node.style.fontSize = value
            }

            function textExtract(node) {
                for (var out = [], children = node.childNodes, i = 0, ii = children.length; i < ii; i++) {
                    var chi = children[i];
                    3 == chi.nodeType && out.push(chi.nodeValue), "tspan" == chi.tagName && (1 == chi.childNodes.length && 3 == chi.firstChild.nodeType ? out.push(chi.firstChild.nodeValue) : out.push(textExtract(chi)))
                }
                return out
            }

            function getFontSize() {
                return eve.stop(), this.node.style.fontSize
            }
            var make = Snap._.make,
                wrap = Snap._.wrap,
                is = Snap.is,
                getSomeDefs = Snap._.getSomeDefs,
                reURLValue = /^url\(#?([^)]+)\)$/,
                $ = Snap._.$,
                URL = Snap.url,
                Str = String,
                separator = Snap._.separator,
                E = "";
            eve.on("snap.util.attr.mask", function(value) {
                    if (value instanceof Element || value instanceof Fragment) {
                        if (eve.stop(), value instanceof Fragment && 1 == value.node.childNodes.length && (value = value.node.firstChild, getSomeDefs(this).appendChild(value), value = wrap(value)), "mask" == value.type) var mask = value;
                        else mask = make("mask", getSomeDefs(this)), mask.node.appendChild(value.node);
                        !mask.node.id && $(mask.node, {
                            id: mask.id
                        }), $(this.node, {
                            mask: URL(mask.id)
                        })
                    }
                }),
                function(clipIt) {
                    eve.on("snap.util.attr.clip", clipIt), eve.on("snap.util.attr.clip-path", clipIt), eve.on("snap.util.attr.clipPath", clipIt)
                }(function(value) {
                    if (value instanceof Element || value instanceof Fragment) {
                        if (eve.stop(), "clipPath" == value.type) var clip = value;
                        else clip = make("clipPath", getSomeDefs(this)), clip.node.appendChild(value.node), !clip.node.id && $(clip.node, {
                            id: clip.id
                        });
                        $(this.node, {
                            "clip-path": URL(clip.node.id || clip.id)
                        })
                    }
                }), eve.on("snap.util.attr.fill", fillStroke("fill")), eve.on("snap.util.attr.stroke", fillStroke("stroke"));
            var gradrg = /^([lr])(?:\(([^)]*)\))?(.*)$/i;
            eve.on("snap.util.grad.parse", function(string) {
                    string = Str(string);
                    var tokens = string.match(gradrg);
                    if (!tokens) return null;
                    var type = tokens[1],
                        params = tokens[2],
                        stops = tokens[3];
                    return params = params.split(/\s*,\s*/).map(function(el) {
                        return +el == el ? +el : el
                    }), 1 == params.length && 0 == params[0] && (params = []), stops = stops.split("-"), stops = stops.map(function(el) {
                        el = el.split(":");
                        var out = {
                            color: el[0]
                        };
                        return el[1] && (out.offset = parseFloat(el[1])), out
                    }), {
                        type: type,
                        params: params,
                        stops: stops
                    }
                }), eve.on("snap.util.attr.d", function(value) {
                    eve.stop(), is(value, "array") && is(value[0], "array") && (value = Snap.path.toString.call(value)), value = Str(value), value.match(/[ruo]/i) && (value = Snap.path.toAbsolute(value)), $(this.node, {
                        d: value
                    })
                })(-1), eve.on("snap.util.attr.#text", function(value) {
                    eve.stop(), value = Str(value);
                    for (var txt = glob.doc.createTextNode(value); this.node.firstChild;) this.node.removeChild(this.node.firstChild);
                    this.node.appendChild(txt)
                })(-1), eve.on("snap.util.attr.path", function(value) {
                    eve.stop(), this.attr({
                        d: value
                    })
                })(-1), eve.on("snap.util.attr.class", function(value) {
                    eve.stop(), this.node.className.baseVal = value
                })(-1), eve.on("snap.util.attr.viewBox", function(value) {
                    var vb;
                    vb = is(value, "object") && "x" in value ? [value.x, value.y, value.width, value.height].join(" ") : is(value, "array") ? value.join(" ") : value, $(this.node, {
                        viewBox: vb
                    }), eve.stop()
                })(-1), eve.on("snap.util.attr.transform", function(value) {
                    this.transform(value), eve.stop()
                })(-1), eve.on("snap.util.attr.r", function(value) {
                    "rect" == this.type && (eve.stop(), $(this.node, {
                        rx: value,
                        ry: value
                    }))
                })(-1), eve.on("snap.util.attr.textpath", function(value) {
                    if (eve.stop(), "text" == this.type) {
                        var id, tp, node;
                        if (!value && this.textPath) {
                            for (tp = this.textPath; tp.node.firstChild;) this.node.appendChild(tp.node.firstChild);
                            return tp.remove(), void delete this.textPath
                        }
                        if (is(value, "string")) {
                            var defs = getSomeDefs(this),
                                path = wrap(defs.parentNode).path(value);
                            defs.appendChild(path.node), id = path.id, path.attr({
                                id: id
                            })
                        } else value = wrap(value), value instanceof Element && (id = value.attr("id"), id || (id = value.id, value.attr({
                            id: id
                        })));
                        if (id)
                            if (tp = this.textPath, node = this.node, tp) tp.attr({
                                "xlink:href": "#" + id
                            });
                            else {
                                for (tp = $("textPath", {
                                        "xlink:href": "#" + id
                                    }); node.firstChild;) tp.appendChild(node.firstChild);
                                node.appendChild(tp), this.textPath = wrap(tp)
                            }
                    }
                })(-1), eve.on("snap.util.attr.text", function(value) {
                    if ("text" == this.type) {
                        for (var node = this.node, tuner = function(chunk) {
                                var out = $("tspan");
                                if (is(chunk, "array"))
                                    for (var i = 0; i < chunk.length; i++) out.appendChild(tuner(chunk[i]));
                                else out.appendChild(glob.doc.createTextNode(chunk));
                                return out.normalize && out.normalize(), out
                            }; node.firstChild;) node.removeChild(node.firstChild);
                        for (var tuned = tuner(value); tuned.firstChild;) node.appendChild(tuned.firstChild)
                    }
                    eve.stop()
                })(-1), eve.on("snap.util.attr.fontSize", setFontSize)(-1), eve.on("snap.util.attr.font-size", setFontSize)(-1), eve.on("snap.util.getattr.transform", function() {
                    return eve.stop(), this.transform()
                })(-1), eve.on("snap.util.getattr.textpath", function() {
                    return eve.stop(), this.textPath
                })(-1),
                function() {
                    function getter(end) {
                        return function() {
                            eve.stop();
                            var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue("marker-" + end);
                            return "none" == style ? style : Snap(glob.doc.getElementById(style.match(reURLValue)[1]))
                        }
                    }

                    function setter(end) {
                        return function(value) {
                            eve.stop();
                            var name = "marker" + end.charAt(0).toUpperCase() + end.substring(1);
                            if ("" == value || !value) return void(this.node.style[name] = "none");
                            if ("marker" == value.type) {
                                var id = value.node.id;
                                return id || $(value.node, {
                                    id: value.id
                                }), void(this.node.style[name] = URL(id))
                            }
                        }
                    }
                    eve.on("snap.util.getattr.marker-end", getter("end"))(-1), eve.on("snap.util.getattr.markerEnd", getter("end"))(-1), eve.on("snap.util.getattr.marker-start", getter("start"))(-1), eve.on("snap.util.getattr.markerStart", getter("start"))(-1), eve.on("snap.util.getattr.marker-mid", getter("mid"))(-1), eve.on("snap.util.getattr.markerMid", getter("mid"))(-1), eve.on("snap.util.attr.marker-end", setter("end"))(-1), eve.on("snap.util.attr.markerEnd", setter("end"))(-1), eve.on("snap.util.attr.marker-start", setter("start"))(-1), eve.on("snap.util.attr.markerStart", setter("start"))(-1), eve.on("snap.util.attr.marker-mid", setter("mid"))(-1), eve.on("snap.util.attr.markerMid", setter("mid"))(-1)
                }(), eve.on("snap.util.getattr.r", function() {
                    if ("rect" == this.type && $(this.node, "rx") == $(this.node, "ry")) return eve.stop(), $(this.node, "rx")
                })(-1), eve.on("snap.util.getattr.text", function() {
                    if ("text" == this.type || "tspan" == this.type) {
                        eve.stop();
                        var out = textExtract(this.node);
                        return 1 == out.length ? out[0] : out
                    }
                })(-1), eve.on("snap.util.getattr.#text", function() {
                    return this.node.textContent
                })(-1), eve.on("snap.util.getattr.viewBox", function() {
                    eve.stop();
                    var vb = $(this.node, "viewBox");
                    return vb ? (vb = vb.split(separator), Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3])) : void 0
                })(-1), eve.on("snap.util.getattr.points", function() {
                    var p = $(this.node, "points");
                    return eve.stop(), p ? p.split(separator) : void 0
                })(-1), eve.on("snap.util.getattr.path", function() {
                    var p = $(this.node, "d");
                    return eve.stop(), p
                })(-1), eve.on("snap.util.getattr.class", function() {
                    return this.node.className.baseVal
                })(-1), eve.on("snap.util.getattr.fontSize", getFontSize)(-1), eve.on("snap.util.getattr.font-size", getFontSize)(-1)
        }), Snap.plugin(function(Snap, Element, Paper, glob, Fragment) {
            var rgNotSpace = /\S+/g,
                Str = String,
                elproto = Element.prototype;
            elproto.addClass = function(value) {
                var j, pos, clazz, finalValue, classes = Str(value || "").match(rgNotSpace) || [],
                    elem = this.node,
                    className = elem.className.baseVal,
                    curClasses = className.match(rgNotSpace) || [];
                if (classes.length) {
                    for (j = 0; clazz = classes[j++];) pos = curClasses.indexOf(clazz), ~pos || curClasses.push(clazz);
                    finalValue = curClasses.join(" "), className != finalValue && (elem.className.baseVal = finalValue)
                }
                return this
            }, elproto.removeClass = function(value) {
                var j, pos, clazz, finalValue, classes = Str(value || "").match(rgNotSpace) || [],
                    elem = this.node,
                    className = elem.className.baseVal,
                    curClasses = className.match(rgNotSpace) || [];
                if (curClasses.length) {
                    for (j = 0; clazz = classes[j++];) pos = curClasses.indexOf(clazz), ~pos && curClasses.splice(pos, 1);
                    finalValue = curClasses.join(" "), className != finalValue && (elem.className.baseVal = finalValue)
                }
                return this
            }, elproto.hasClass = function(value) {
                var elem = this.node,
                    className = elem.className.baseVal,
                    curClasses = className.match(rgNotSpace) || [];
                return !!~curClasses.indexOf(value)
            }, elproto.toggleClass = function(value, flag) {
                if (null != flag) return flag ? this.addClass(value) : this.removeClass(value);
                var j, pos, clazz, finalValue, classes = (value || "").match(rgNotSpace) || [],
                    elem = this.node,
                    className = elem.className.baseVal,
                    curClasses = className.match(rgNotSpace) || [];
                for (j = 0; clazz = classes[j++];) pos = curClasses.indexOf(clazz), ~pos ? curClasses.splice(pos, 1) : curClasses.push(clazz);
                return finalValue = curClasses.join(" "), className != finalValue && (elem.className.baseVal = finalValue), this
            }
        }), Snap.plugin(function(Snap, Element, Paper, glob, Fragment) {
            function getNumber(val) {
                return val
            }

            function getUnit(unit) {
                return function(val) {
                    return +val.toFixed(3) + unit
                }
            }
            var operators = {
                    "+": function(x, y) {
                        return x + y
                    },
                    "-": function(x, y) {
                        return x - y
                    },
                    "/": function(x, y) {
                        return x / y
                    },
                    "*": function(x, y) {
                        return x * y
                    }
                },
                Str = String,
                reUnit = /[a-z]+$/i,
                reAddon = /^\s*([+\-\/*])\s*=\s*([\d.eE+\-]+)\s*([^\d\s]+)?\s*$/;
            eve.on("snap.util.attr", function(val) {
                var plus = Str(val).match(reAddon);
                if (plus) {
                    var evnt = eve.nt(),
                        name = evnt.substring(evnt.lastIndexOf(".") + 1),
                        a = this.attr(name),
                        atr = {};
                    eve.stop();
                    var unit = plus[3] || "",
                        aUnit = a.match(reUnit),
                        op = operators[plus[1]];
                    if (aUnit && aUnit == unit ? val = op(parseFloat(a), +plus[2]) : (a = this.asPX(name), val = op(this.asPX(name), this.asPX(name, plus[2] + unit))), isNaN(a) || isNaN(val)) return;
                    atr[name] = val, this.attr(atr)
                }
            })(-10), eve.on("snap.util.equal", function(name, b) {
                var a = Str(this.attr(name) || ""),
                    bplus = Str(b).match(reAddon);
                if (bplus) {
                    eve.stop();
                    var unit = bplus[3] || "",
                        aUnit = a.match(reUnit),
                        op = operators[bplus[1]];
                    return aUnit && aUnit == unit ? {
                        from: parseFloat(a),
                        to: op(parseFloat(a), +bplus[2]),
                        f: getUnit(aUnit)
                    } : (a = this.asPX(name), {
                        from: a,
                        to: op(a, this.asPX(name, bplus[2] + unit)),
                        f: getNumber
                    })
                }
            })(-10)
        }), Snap.plugin(function(Snap, Element, Paper, glob, Fragment) {
            var proto = Paper.prototype,
                is = Snap.is;
            proto.rect = function(x, y, w, h, rx, ry) {
                var attr;
                return null == ry && (ry = rx), is(x, "object") && "[object Object]" == x ? attr = x : null != x && (attr = {
                    x: x,
                    y: y,
                    width: w,
                    height: h
                }, null != rx && (attr.rx = rx, attr.ry = ry)), this.el("rect", attr)
            }, proto.circle = function(cx, cy, r) {
                var attr;
                return is(cx, "object") && "[object Object]" == cx ? attr = cx : null != cx && (attr = {
                    cx: cx,
                    cy: cy,
                    r: r
                }), this.el("circle", attr)
            };
            var preload = function() {
                function onerror() {
                    this.parentNode.removeChild(this)
                }
                return function(src, f) {
                    var img = glob.doc.createElement("img"),
                        body = glob.doc.body;
                    img.style.cssText = "position:absolute;left:-9999em;top:-9999em", img.onload = function() {
                        f.call(img), img.onload = img.onerror = null, body.removeChild(img)
                    }, img.onerror = onerror, body.appendChild(img), img.src = src
                }
            }();
            proto.image = function(src, x, y, width, height) {
                    var el = this.el("image");
                    if (is(src, "object") && "src" in src) el.attr(src);
                    else if (null != src) {
                        var set = {
                            "xlink:href": src,
                            preserveAspectRatio: "none"
                        };
                        null != x && null != y && (set.x = x, set.y = y), null != width && null != height ? (set.width = width, set.height = height) : preload(src, function() {
                            Snap._.$(el.node, {
                                width: this.offsetWidth,
                                height: this.offsetHeight
                            })
                        }), Snap._.$(el.node, set)
                    }
                    return el
                }, proto.ellipse = function(cx, cy, rx, ry) {
                    var attr;
                    return is(cx, "object") && "[object Object]" == cx ? attr = cx : null != cx && (attr = {
                        cx: cx,
                        cy: cy,
                        rx: rx,
                        ry: ry
                    }), this.el("ellipse", attr)
                }, proto.path = function(d) {
                    var attr;
                    return is(d, "object") && !is(d, "array") ? attr = d : d && (attr = {
                        d: d
                    }), this.el("path", attr)
                }, proto.group = proto.g = function(first) {
                    var el = this.el("g");
                    return 1 == arguments.length && first && !first.type ? el.attr(first) : arguments.length && el.add(Array.prototype.slice.call(arguments, 0)), el
                }, proto.svg = function(x, y, width, height, vbx, vby, vbw, vbh) {
                    var attrs = {};
                    return is(x, "object") && null == y ? attrs = x : (null != x && (attrs.x = x), null != y && (attrs.y = y), null != width && (attrs.width = width), null != height && (attrs.height = height), null != vbx && null != vby && null != vbw && null != vbh && (attrs.viewBox = [vbx, vby, vbw, vbh])), this.el("svg", attrs)
                }, proto.mask = function(first) {
                    var el = this.el("mask");
                    return 1 == arguments.length && first && !first.type ? el.attr(first) : arguments.length && el.add(Array.prototype.slice.call(arguments, 0)), el
                }, proto.ptrn = function(x, y, width, height, vx, vy, vw, vh) {
                    if (is(x, "object")) var attr = x;
                    else attr = {
                        patternUnits: "userSpaceOnUse"
                    }, x && (attr.x = x), y && (attr.y = y), null != width && (attr.width = width), null != height && (attr.height = height), null != vx && null != vy && null != vw && null != vh ? attr.viewBox = [vx, vy, vw, vh] : attr.viewBox = [x || 0, y || 0, width || 0, height || 0];
                    return this.el("pattern", attr)
                }, proto.use = function(id) {
                    return null != id ? (id instanceof Element && (id.attr("id") || id.attr({
                        id: Snap._.id(id)
                    }), id = id.attr("id")), "#" == String(id).charAt() && (id = id.substring(1)), this.el("use", {
                        "xlink:href": "#" + id
                    })) : Element.prototype.use.call(this)
                }, proto.symbol = function(vx, vy, vw, vh) {
                    var attr = {};
                    return null != vx && null != vy && null != vw && null != vh && (attr.viewBox = [vx, vy, vw, vh]), this.el("symbol", attr)
                }, proto.text = function(x, y, text) {
                    var attr = {};
                    return is(x, "object") ? attr = x : null != x && (attr = {
                        x: x,
                        y: y,
                        text: text || ""
                    }), this.el("text", attr)
                }, proto.line = function(x1, y1, x2, y2) {
                    var attr = {};
                    return is(x1, "object") ? attr = x1 : null != x1 && (attr = {
                        x1: x1,
                        x2: x2,
                        y1: y1,
                        y2: y2
                    }), this.el("line", attr)
                }, proto.polyline = function(points) {
                    arguments.length > 1 && (points = Array.prototype.slice.call(arguments, 0));
                    var attr = {};
                    return is(points, "object") && !is(points, "array") ? attr = points : null != points && (attr = {
                        points: points
                    }), this.el("polyline", attr)
                }, proto.polygon = function(points) {
                    arguments.length > 1 && (points = Array.prototype.slice.call(arguments, 0));
                    var attr = {};
                    return is(points, "object") && !is(points, "array") ? attr = points : null != points && (attr = {
                        points: points
                    }), this.el("polygon", attr)
                },
                function() {
                    function Gstops() {
                        return this.selectAll("stop")
                    }

                    function GaddStop(color, offset) {
                        var stop = $("stop"),
                            attr = {
                                offset: +offset + "%"
                            };
                        return color = Snap.color(color), attr["stop-color"] = color.hex, color.opacity < 1 && (attr["stop-opacity"] = color.opacity), $(stop, attr), this.node.appendChild(stop), this
                    }

                    function GgetBBox() {
                        if ("linearGradient" == this.type) {
                            var x1 = $(this.node, "x1") || 0,
                                x2 = $(this.node, "x2") || 1,
                                y1 = $(this.node, "y1") || 0,
                                y2 = $(this.node, "y2") || 0;
                            return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1))
                        }
                        var cx = this.node.cx || .5,
                            cy = this.node.cy || .5,
                            r = this.node.r || 0;
                        return Snap._.box(cx - r, cy - r, 2 * r, 2 * r)
                    }

                    function gradient(defs, str) {
                        function seed(i, end) {
                            for (var step = (end - start) / (i - j), k = j; k < i; k++) stops[k].offset = +(+start + step * (k - j)).toFixed(2);
                            j = i, start = end
                        }
                        var el, grad = eve("snap.util.grad.parse", null, str).firstDefined();
                        if (!grad) return null;
                        grad.params.unshift(defs), el = "l" == grad.type.toLowerCase() ? gradientLinear.apply(0, grad.params) : gradientRadial.apply(0, grad.params), grad.type != grad.type.toLowerCase() && $(el.node, {
                            gradientUnits: "userSpaceOnUse"
                        });
                        var stops = grad.stops,
                            len = stops.length,
                            start = 0,
                            j = 0;
                        len--;
                        for (var i = 0; i < len; i++) "offset" in stops[i] && seed(i, stops[i].offset);
                        for (stops[len].offset = stops[len].offset || 100, seed(len, stops[len].offset), i = 0; i <= len; i++) {
                            var stop = stops[i];
                            el.addStop(stop.color, stop.offset)
                        }
                        return el
                    }

                    function gradientLinear(defs, x1, y1, x2, y2) {
                        var el = Snap._.make("linearGradient", defs);
                        return el.stops = Gstops, el.addStop = GaddStop, el.getBBox = GgetBBox, null != x1 && $(el.node, {
                            x1: x1,
                            y1: y1,
                            x2: x2,
                            y2: y2
                        }), el
                    }

                    function gradientRadial(defs, cx, cy, r, fx, fy) {
                        var el = Snap._.make("radialGradient", defs);
                        return el.stops = Gstops, el.addStop = GaddStop, el.getBBox = GgetBBox, null != cx && $(el.node, {
                            cx: cx,
                            cy: cy,
                            r: r
                        }), null != fx && null != fy && $(el.node, {
                            fx: fx,
                            fy: fy
                        }), el
                    }
                    var $ = Snap._.$;
                    proto.gradient = function(str) {
                        return gradient(this.defs, str)
                    }, proto.gradientLinear = function(x1, y1, x2, y2) {
                        return gradientLinear(this.defs, x1, y1, x2, y2)
                    }, proto.gradientRadial = function(cx, cy, r, fx, fy) {
                        return gradientRadial(this.defs, cx, cy, r, fx, fy)
                    }, proto.toString = function() {
                        var res, doc = this.node.ownerDocument,
                            f = doc.createDocumentFragment(),
                            d = doc.createElement("div"),
                            svg = this.node.cloneNode(!0);
                        return f.appendChild(d), d.appendChild(svg), Snap._.$(svg, {
                            xmlns: "http://www.w3.org/2000/svg"
                        }), res = d.innerHTML, f.removeChild(f.firstChild), res
                    }, proto.toDataURL = function() {
                        if (window && window.btoa) return "data:image/svg+xml;base64," + btoa(unescape(encodeURIComponent(this)))
                    }, proto.clear = function() {
                        for (var next, node = this.node.firstChild; node;) next = node.nextSibling, "defs" != node.tagName ? node.parentNode.removeChild(node) : proto.clear.call({
                            node: node
                        }), node = next
                    }
                }()
        }), Snap.plugin(function(Snap, Element, Paper, glob) {
            function paths(ps) {
                var p = paths.ps = paths.ps || {};
                return p[ps] ? p[ps].sleep = 100 : p[ps] = {
                    sleep: 100
                }, setTimeout(function() {
                    for (var key in p) p[has](key) && key != ps && (p[key].sleep--, !p[key].sleep && delete p[key])
                }), p[ps]
            }

            function box(x, y, width, height) {
                return null == x && (x = y = width = height = 0), null == y && (y = x.y, width = x.width, height = x.height, x = x.x), {
                    x: x,
                    y: y,
                    width: width,
                    w: width,
                    height: height,
                    h: height,
                    x2: x + width,
                    y2: y + height,
                    cx: x + width / 2,
                    cy: y + height / 2,
                    r1: math.min(width, height) / 2,
                    r2: math.max(width, height) / 2,
                    r0: math.sqrt(width * width + height * height) / 2,
                    path: rectPath(x, y, width, height),
                    vb: [x, y, width, height].join(" ")
                }
            }

            function toString() {
                return this.join(",").replace(p2s, "$1")
            }

            function pathClone(pathArray) {
                var res = clone(pathArray);
                return res.toString = toString, res
            }

            function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {
                return null == length ? bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) : findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length))
            }

            function getLengthFactory(istotal, subpath) {
                function O(val) {
                    return +(+val).toFixed(3)
                }
                return Snap._.cacher(function(path, length, onlystart) {
                    path instanceof Element && (path = path.attr("d")), path = path2curve(path);
                    for (var x, y, p, l, point, sp = "", subpaths = {}, len = 0, i = 0, ii = path.length; i < ii; i++) {
                        if (p = path[i], "M" == p[0]) x = +p[1], y = +p[2];
                        else {
                            if (l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]), len + l > length) {
                                if (subpath && !subpaths.start) {
                                    if (point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len), sp += ["C" + O(point.start.x), O(point.start.y), O(point.m.x), O(point.m.y), O(point.x), O(point.y)], onlystart) return sp;
                                    subpaths.start = sp, sp = ["M" + O(point.x), O(point.y) + "C" + O(point.n.x), O(point.n.y), O(point.end.x), O(point.end.y), O(p[5]), O(p[6])].join(), len += l, x = +p[5], y = +p[6];
                                    continue
                                }
                                if (!istotal && !subpath) return point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len)
                            }
                            len += l, x = +p[5], y = +p[6]
                        }
                        sp += p.shift() + p
                    }
                    return subpaths.end = sp, point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1)
                }, null, Snap._.clone)
            }

            function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {
                var t1 = 1 - t,
                    t13 = pow(t1, 3),
                    t12 = pow(t1, 2),
                    t2 = t * t,
                    t3 = t2 * t,
                    x = t13 * p1x + 3 * t12 * t * c1x + 3 * t1 * t * t * c2x + t3 * p2x,
                    y = t13 * p1y + 3 * t12 * t * c1y + 3 * t1 * t * t * c2y + t3 * p2y,
                    mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),
                    my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),
                    nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),
                    ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),
                    ax = t1 * p1x + t * c1x,
                    ay = t1 * p1y + t * c1y,
                    cx = t1 * c2x + t * p2x,
                    cy = t1 * c2y + t * p2y,
                    alpha = 90 - 180 * math.atan2(mx - nx, my - ny) / PI;
                return {
                    x: x,
                    y: y,
                    m: {
                        x: mx,
                        y: my
                    },
                    n: {
                        x: nx,
                        y: ny
                    },
                    start: {
                        x: ax,
                        y: ay
                    },
                    end: {
                        x: cx,
                        y: cy
                    },
                    alpha: alpha
                }
            }

            function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {
                Snap.is(p1x, "array") || (p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y]);
                var bbox = curveDim.apply(null, p1x);
                return box(bbox.min.x, bbox.min.y, bbox.max.x - bbox.min.x, bbox.max.y - bbox.min.y)
            }

            function isPointInsideBBox(bbox, x, y) {
                return x >= bbox.x && x <= bbox.x + bbox.width && y >= bbox.y && y <= bbox.y + bbox.height
            }

            function isBBoxIntersect(bbox1, bbox2) {
                return bbox1 = box(bbox1), bbox2 = box(bbox2), isPointInsideBBox(bbox2, bbox1.x, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y)
            }

            function base3(t, p1, p2, p3, p4) {
                var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,
                    t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;
                return t * t2 - 3 * p1 + 3 * p2
            }

            function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {
                null == z && (z = 1), z = z > 1 ? 1 : z < 0 ? 0 : z;
                for (var z2 = z / 2, n = 12, Tvalues = [-.1252, .1252, -.3678, .3678, -.5873, .5873, -.7699, .7699, -.9041, .9041, -.9816, .9816], Cvalues = [.2491, .2491, .2335, .2335, .2032, .2032, .1601, .1601, .1069, .1069, .0472, .0472], sum = 0, i = 0; i < n; i++) {
                    var ct = z2 * Tvalues[i] + z2,
                        xbase = base3(ct, x1, x2, x3, x4),
                        ybase = base3(ct, y1, y2, y3, y4),
                        comb = xbase * xbase + ybase * ybase;
                    sum += Cvalues[i] * math.sqrt(comb)
                }
                return z2 * sum
            }

            function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {
                if (!(ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll)) {
                    var l, t = 1,
                        step = t / 2,
                        t2 = t - step,
                        e = .01;
                    for (l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2); abs(l - ll) > e;) step /= 2, t2 += (l < ll ? 1 : -1) * step, l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);
                    return t2
                }
            }

            function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {
                if (!(mmax(x1, x2) < mmin(x3, x4) || mmin(x1, x2) > mmax(x3, x4) || mmax(y1, y2) < mmin(y3, y4) || mmin(y1, y2) > mmax(y3, y4))) {
                    var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),
                        ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),
                        denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);
                    if (denominator) {
                        var px = nx / denominator,
                            py = ny / denominator,
                            px2 = +px.toFixed(2),
                            py2 = +py.toFixed(2);
                        if (!(px2 < +mmin(x1, x2).toFixed(2) || px2 > +mmax(x1, x2).toFixed(2) || px2 < +mmin(x3, x4).toFixed(2) || px2 > +mmax(x3, x4).toFixed(2) || py2 < +mmin(y1, y2).toFixed(2) || py2 > +mmax(y1, y2).toFixed(2) || py2 < +mmin(y3, y4).toFixed(2) || py2 > +mmax(y3, y4).toFixed(2))) return {
                            x: px,
                            y: py
                        }
                    }
                }
            }

            function interHelper(bez1, bez2, justCount) {
                var bbox1 = bezierBBox(bez1),
                    bbox2 = bezierBBox(bez2);
                if (!isBBoxIntersect(bbox1, bbox2)) return justCount ? 0 : [];
                for (var l1 = bezlen.apply(0, bez1), l2 = bezlen.apply(0, bez2), n1 = ~~(l1 / 8), n2 = ~~(l2 / 8), dots1 = [], dots2 = [], xy = {}, res = justCount ? 0 : [], i = 0; i < n1 + 1; i++) {
                    var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));
                    dots1.push({
                        x: p.x,
                        y: p.y,
                        t: i / n1
                    })
                }
                for (i = 0; i < n2 + 1; i++) p = findDotsAtSegment.apply(0, bez2.concat(i / n2)), dots2.push({
                    x: p.x,
                    y: p.y,
                    t: i / n2
                });
                for (i = 0; i < n1; i++)
                    for (var j = 0; j < n2; j++) {
                        var di = dots1[i],
                            di1 = dots1[i + 1],
                            dj = dots2[j],
                            dj1 = dots2[j + 1],
                            ci = abs(di1.x - di.x) < .001 ? "y" : "x",
                            cj = abs(dj1.x - dj.x) < .001 ? "y" : "x",
                            is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);
                        if (is) {
                            if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) continue;
                            xy[is.x.toFixed(4)] = is.y.toFixed(4);
                            var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),
                                t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);
                            t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1 && (justCount ? res++ : res.push({
                                x: is.x,
                                y: is.y,
                                t1: t1,
                                t2: t2
                            }))
                        }
                    }
                return res
            }

            function pathIntersection(path1, path2) {
                return interPathHelper(path1, path2)
            }

            function pathIntersectionNumber(path1, path2) {
                return interPathHelper(path1, path2, 1)
            }

            function interPathHelper(path1, path2, justCount) {
                path1 = path2curve(path1), path2 = path2curve(path2);
                for (var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2, res = justCount ? 0 : [], i = 0, ii = path1.length; i < ii; i++) {
                    var pi = path1[i];
                    if ("M" == pi[0]) x1 = x1m = pi[1], y1 = y1m = pi[2];
                    else {
                        "C" == pi[0] ? (bez1 = [x1, y1].concat(pi.slice(1)), x1 = bez1[6], y1 = bez1[7]) : (bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m], x1 = x1m, y1 = y1m);
                        for (var j = 0, jj = path2.length; j < jj; j++) {
                            var pj = path2[j];
                            if ("M" == pj[0]) x2 = x2m = pj[1], y2 = y2m = pj[2];
                            else {
                                "C" == pj[0] ? (bez2 = [x2, y2].concat(pj.slice(1)), x2 = bez2[6], y2 = bez2[7]) : (bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m], x2 = x2m, y2 = y2m);
                                var intr = interHelper(bez1, bez2, justCount);
                                if (justCount) res += intr;
                                else {
                                    for (var k = 0, kk = intr.length; k < kk; k++) intr[k].segment1 = i, intr[k].segment2 = j, intr[k].bez1 = bez1, intr[k].bez2 = bez2;
                                    res = res.concat(intr)
                                }
                            }
                        }
                    }
                }
                return res
            }

            function isPointInsidePath(path, x, y) {
                var bbox = pathBBox(path);
                return isPointInsideBBox(bbox, x, y) && interPathHelper(path, [
                    ["M", x, y],
                    ["H", bbox.x2 + 10]
                ], 1) % 2 == 1
            }

            function pathBBox(path) {
                var pth = paths(path);
                if (pth.bbox) return clone(pth.bbox);
                if (!path) return box();
                path = path2curve(path);
                for (var p, x = 0, y = 0, X = [], Y = [], i = 0, ii = path.length; i < ii; i++)
                    if (p = path[i], "M" == p[0]) x = p[1], y = p[2], X.push(x), Y.push(y);
                    else {
                        var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);
                        X = X.concat(dim.min.x, dim.max.x), Y = Y.concat(dim.min.y, dim.max.y), x = p[5], y = p[6]
                    }
                var xmin = mmin.apply(0, X),
                    ymin = mmin.apply(0, Y),
                    xmax = mmax.apply(0, X),
                    ymax = mmax.apply(0, Y),
                    bb = box(xmin, ymin, xmax - xmin, ymax - ymin);
                return pth.bbox = clone(bb), bb
            }

            function rectPath(x, y, w, h, r) {
                if (r) return [
                    ["M", +x + +r, y],
                    ["l", w - 2 * r, 0],
                    ["a", r, r, 0, 0, 1, r, r],
                    ["l", 0, h - 2 * r],
                    ["a", r, r, 0, 0, 1, -r, r],
                    ["l", 2 * r - w, 0],
                    ["a", r, r, 0, 0, 1, -r, -r],
                    ["l", 0, 2 * r - h],
                    ["a", r, r, 0, 0, 1, r, -r],
                    ["z"]
                ];
                var res = [
                    ["M", x, y],
                    ["l", w, 0],
                    ["l", 0, h],
                    ["l", -w, 0],
                    ["z"]
                ];
                return res.toString = toString, res
            }

            function ellipsePath(x, y, rx, ry, a) {
                if (null == a && null == ry && (ry = rx), x = +x, y = +y, rx = +rx, ry = +ry, null != a) var rad = Math.PI / 180,
                    x1 = x + rx * Math.cos(-ry * rad),
                    x2 = x + rx * Math.cos(-a * rad),
                    y1 = y + rx * Math.sin(-ry * rad),
                    y2 = y + rx * Math.sin(-a * rad),
                    res = [
                        ["M", x1, y1],
                        ["A", rx, rx, 0, +(a - ry > 180), 0, x2, y2]
                    ];
                else res = [
                    ["M", x, y],
                    ["m", 0, -ry],
                    ["a", rx, ry, 0, 1, 1, 0, 2 * ry],
                    ["a", rx, ry, 0, 1, 1, 0, -2 * ry],
                    ["z"]
                ];
                return res.toString = toString, res
            }

            function pathToRelative(pathArray) {
                var pth = paths(pathArray),
                    lowerCase = String.prototype.toLowerCase;
                if (pth.rel) return pathClone(pth.rel);
                Snap.is(pathArray, "array") && Snap.is(pathArray && pathArray[0], "array") || (pathArray = Snap.parsePathString(pathArray));
                var res = [],
                    x = 0,
                    y = 0,
                    mx = 0,
                    my = 0,
                    start = 0;
                "M" == pathArray[0][0] && (x = pathArray[0][1], y = pathArray[0][2], mx = x, my = y, start++, res.push(["M", x, y]));
                for (var i = start, ii = pathArray.length; i < ii; i++) {
                    var r = res[i] = [],
                        pa = pathArray[i];
                    if (pa[0] != lowerCase.call(pa[0])) switch (r[0] = lowerCase.call(pa[0]), r[0]) {
                        case "a":
                            r[1] = pa[1], r[2] = pa[2], r[3] = pa[3], r[4] = pa[4], r[5] = pa[5], r[6] = +(pa[6] - x).toFixed(3), r[7] = +(pa[7] - y).toFixed(3);
                            break;
                        case "v":
                            r[1] = +(pa[1] - y).toFixed(3);
                            break;
                        case "m":
                            mx = pa[1], my = pa[2];
                        default:
                            for (var j = 1, jj = pa.length; j < jj; j++) r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3)
                    } else {
                        r = res[i] = [], "m" == pa[0] && (mx = pa[1] + x, my = pa[2] + y);
                        for (var k = 0, kk = pa.length; k < kk; k++) res[i][k] = pa[k]
                    }
                    var len = res[i].length;
                    switch (res[i][0]) {
                        case "z":
                            x = mx, y = my;
                            break;
                        case "h":
                            x += +res[i][len - 1];
                            break;
                        case "v":
                            y += +res[i][len - 1];
                            break;
                        default:
                            x += +res[i][len - 2], y += +res[i][len - 1]
                    }
                }
                return res.toString = toString, pth.rel = pathClone(res), res
            }

            function pathToAbsolute(pathArray) {
                var pth = paths(pathArray);
                if (pth.abs) return pathClone(pth.abs);
                if (is(pathArray, "array") && is(pathArray && pathArray[0], "array") || (pathArray = Snap.parsePathString(pathArray)), !pathArray || !pathArray.length) return [
                    ["M", 0, 0]
                ];
                var pa0, res = [],
                    x = 0,
                    y = 0,
                    mx = 0,
                    my = 0,
                    start = 0;
                "M" == pathArray[0][0] && (x = +pathArray[0][1], y = +pathArray[0][2], mx = x, my = y, start++, res[0] = ["M", x, y]);
                for (var r, pa, crz = 3 == pathArray.length && "M" == pathArray[0][0] && "R" == pathArray[1][0].toUpperCase() && "Z" == pathArray[2][0].toUpperCase(), i = start, ii = pathArray.length; i < ii; i++) {
                    if (res.push(r = []), pa = pathArray[i], pa0 = pa[0], pa0 != pa0.toUpperCase()) switch (r[0] = pa0.toUpperCase(), r[0]) {
                            case "A":
                                r[1] = pa[1], r[2] = pa[2], r[3] = pa[3], r[4] = pa[4], r[5] = pa[5], r[6] = +pa[6] + x, r[7] = +pa[7] + y;
                                break;
                            case "V":
                                r[1] = +pa[1] + y;
                                break;
                            case "H":
                                r[1] = +pa[1] + x;
                                break;
                            case "R":
                                for (var dots = [x, y].concat(pa.slice(1)), j = 2, jj = dots.length; j < jj; j++) dots[j] = +dots[j] + x, dots[++j] = +dots[j] + y;
                                res.pop(), res = res.concat(catmullRom2bezier(dots, crz));
                                break;
                            case "O":
                                res.pop(), dots = ellipsePath(x, y, pa[1], pa[2]), dots.push(dots[0]), res = res.concat(dots);
                                break;
                            case "U":
                                res.pop(), res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3])), r = ["U"].concat(res[res.length - 1].slice(-2));
                                break;
                            case "M":
                                mx = +pa[1] + x, my = +pa[2] + y;
                            default:
                                for (j = 1, jj = pa.length; j < jj; j++) r[j] = +pa[j] + (j % 2 ? x : y)
                        } else if ("R" == pa0) dots = [x, y].concat(pa.slice(1)), res.pop(), res = res.concat(catmullRom2bezier(dots, crz)), r = ["R"].concat(pa.slice(-2));
                        else if ("O" == pa0) res.pop(), dots = ellipsePath(x, y, pa[1], pa[2]), dots.push(dots[0]), res = res.concat(dots);
                    else if ("U" == pa0) res.pop(), res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3])), r = ["U"].concat(res[res.length - 1].slice(-2));
                    else
                        for (var k = 0, kk = pa.length; k < kk; k++) r[k] = pa[k];
                    if (pa0 = pa0.toUpperCase(), "O" != pa0) switch (r[0]) {
                        case "Z":
                            x = +mx, y = +my;
                            break;
                        case "H":
                            x = r[1];
                            break;
                        case "V":
                            y = r[1];
                            break;
                        case "M":
                            mx = r[r.length - 2], my = r[r.length - 1];
                        default:
                            x = r[r.length - 2], y = r[r.length - 1]
                    }
                }
                return res.toString = toString, pth.abs = pathClone(res), res
            }

            function l2c(x1, y1, x2, y2) {
                return [x1, y1, x2, y2, x2, y2]
            }

            function q2c(x1, y1, ax, ay, x2, y2) {
                var _13 = 1 / 3,
                    _23 = 2 / 3;
                return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2]
            }

            function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {
                var xy, _120 = 120 * PI / 180,
                    rad = PI / 180 * (+angle || 0),
                    res = [],
                    rotate = Snap._.cacher(function(x, y, rad) {
                        var X = x * math.cos(rad) - y * math.sin(rad),
                            Y = x * math.sin(rad) + y * math.cos(rad);
                        return {
                            x: X,
                            y: Y
                        }
                    });
                if (recursive) f1 = recursive[0], f2 = recursive[1], cx = recursive[2], cy = recursive[3];
                else {
                    xy = rotate(x1, y1, -rad), x1 = xy.x, y1 = xy.y, xy = rotate(x2, y2, -rad), x2 = xy.x, y2 = xy.y;
                    var x = (math.cos(PI / 180 * angle), math.sin(PI / 180 * angle), (x1 - x2) / 2),
                        y = (y1 - y2) / 2,
                        h = x * x / (rx * rx) + y * y / (ry * ry);
                    h > 1 && (h = math.sqrt(h), rx = h * rx, ry = h * ry);
                    var rx2 = rx * rx,
                        ry2 = ry * ry,
                        k = (large_arc_flag == sweep_flag ? -1 : 1) * math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),
                        cx = k * rx * y / ry + (x1 + x2) / 2,
                        cy = k * -ry * x / rx + (y1 + y2) / 2,
                        f1 = math.asin(((y1 - cy) / ry).toFixed(9)),
                        f2 = math.asin(((y2 - cy) / ry).toFixed(9));
                    f1 = x1 < cx ? PI - f1 : f1, f2 = x2 < cx ? PI - f2 : f2, f1 < 0 && (f1 = 2 * PI + f1), f2 < 0 && (f2 = 2 * PI + f2), sweep_flag && f1 > f2 && (f1 -= 2 * PI), !sweep_flag && f2 > f1 && (f2 -= 2 * PI)
                }
                var df = f2 - f1;
                if (abs(df) > _120) {
                    var f2old = f2,
                        x2old = x2,
                        y2old = y2;
                    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1), x2 = cx + rx * math.cos(f2), y2 = cy + ry * math.sin(f2), res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy])
                }
                df = f2 - f1;
                var c1 = math.cos(f1),
                    s1 = math.sin(f1),
                    c2 = math.cos(f2),
                    s2 = math.sin(f2),
                    t = math.tan(df / 4),
                    hx = 4 / 3 * rx * t,
                    hy = 4 / 3 * ry * t,
                    m1 = [x1, y1],
                    m2 = [x1 + hx * s1, y1 - hy * c1],
                    m3 = [x2 + hx * s2, y2 - hy * c2],
                    m4 = [x2, y2];
                if (m2[0] = 2 * m1[0] - m2[0], m2[1] = 2 * m1[1] - m2[1], recursive) return [m2, m3, m4].concat(res);
                res = [m2, m3, m4].concat(res).join().split(",");
                for (var newres = [], i = 0, ii = res.length; i < ii; i++) newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;
                return newres
            }

            function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {
                for (var a, b, c, t, t1, t2, b2ac, sqrtb2ac, tvalues = [], bounds = [
                        [],
                        []
                    ], i = 0; i < 2; ++i)
                    if (0 == i ? (b = 6 * x0 - 12 * x1 + 6 * x2, a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3, c = 3 * x1 - 3 * x0) : (b = 6 * y0 - 12 * y1 + 6 * y2, a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3, c = 3 * y1 - 3 * y0), abs(a) < 1e-12) {
                        if (abs(b) < 1e-12) continue;
                        t = -c / b, 0 < t && t < 1 && tvalues.push(t)
                    } else b2ac = b * b - 4 * c * a, sqrtb2ac = math.sqrt(b2ac), b2ac < 0 || (t1 = (-b + sqrtb2ac) / (2 * a), 0 < t1 && t1 < 1 && tvalues.push(t1), t2 = (-b - sqrtb2ac) / (2 * a), 0 < t2 && t2 < 1 && tvalues.push(t2));
                for (var mt, j = tvalues.length, jlen = j; j--;) t = tvalues[j], mt = 1 - t, bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3, bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;
                return bounds[0][jlen] = x0, bounds[1][jlen] = y0, bounds[0][jlen + 1] = x3, bounds[1][jlen + 1] = y3, bounds[0].length = bounds[1].length = jlen + 2, {
                    min: {
                        x: mmin.apply(0, bounds[0]),
                        y: mmin.apply(0, bounds[1])
                    },
                    max: {
                        x: mmax.apply(0, bounds[0]),
                        y: mmax.apply(0, bounds[1])
                    }
                }
            }

            function path2curve(path, path2) {
                var pth = !path2 && paths(path);
                if (!path2 && pth.curve) return pathClone(pth.curve);
                for (var p = pathToAbsolute(path), p2 = path2 && pathToAbsolute(path2), attrs = {
                        x: 0,
                        y: 0,
                        bx: 0,
                        by: 0,
                        X: 0,
                        Y: 0,
                        qx: null,
                        qy: null
                    }, attrs2 = {
                        x: 0,
                        y: 0,
                        bx: 0,
                        by: 0,
                        X: 0,
                        Y: 0,
                        qx: null,
                        qy: null
                    }, processPath = (function(path, d, pcom) {
                        var nx, ny;
                        if (!path) return ["C", d.x, d.y, d.x, d.y, d.x, d.y];
                        switch (!(path[0] in {
                            T: 1,
                            Q: 1
                        }) && (d.qx = d.qy = null), path[0]) {
                            case "M":
                                d.X = path[1], d.Y = path[2];
                                break;
                            case "A":
                                path = ["C"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));
                                break;
                            case "S":
                                "C" == pcom || "S" == pcom ? (nx = 2 * d.x - d.bx, ny = 2 * d.y - d.by) : (nx = d.x, ny = d.y), path = ["C", nx, ny].concat(path.slice(1));
                                break;
                            case "T":
                                "Q" == pcom || "T" == pcom ? (d.qx = 2 * d.x - d.qx, d.qy = 2 * d.y - d.qy) : (d.qx = d.x, d.qy = d.y), path = ["C"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));
                                break;
                            case "Q":
                                d.qx = path[1], d.qy = path[2], path = ["C"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));
                                break;
                            case "L":
                                path = ["C"].concat(l2c(d.x, d.y, path[1], path[2]));
                                break;
                            case "H":
                                path = ["C"].concat(l2c(d.x, d.y, path[1], d.y));
                                break;
                            case "V":
                                path = ["C"].concat(l2c(d.x, d.y, d.x, path[1]));
                                break;
                            case "Z":
                                path = ["C"].concat(l2c(d.x, d.y, d.X, d.Y))
                        }
                        return path
                    }), fixArc = function(pp, i) {
                        if (pp[i].length > 7) {
                            pp[i].shift();
                            for (var pi = pp[i]; pi.length;) pcoms1[i] = "A", p2 && (pcoms2[i] = "A"), pp.splice(i++, 0, ["C"].concat(pi.splice(0, 6)));
                            pp.splice(i, 1), ii = mmax(p.length, p2 && p2.length || 0)
                        }
                    }, fixM = function(path1, path2, a1, a2, i) {
                        path1 && path2 && "M" == path1[i][0] && "M" != path2[i][0] && (path2.splice(i, 0, ["M", a2.x, a2.y]), a1.bx = 0, a1.by = 0, a1.x = path1[i][1], a1.y = path1[i][2], ii = mmax(p.length, p2 && p2.length || 0))
                    }, pcoms1 = [], pcoms2 = [], pfirst = "", pcom = "", i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {
                    p[i] && (pfirst = p[i][0]), "C" != pfirst && (pcoms1[i] = pfirst,
                        i && (pcom = pcoms1[i - 1])), p[i] = processPath(p[i], attrs, pcom), "A" != pcoms1[i] && "C" == pfirst && (pcoms1[i] = "C"), fixArc(p, i), p2 && (p2[i] && (pfirst = p2[i][0]), "C" != pfirst && (pcoms2[i] = pfirst, i && (pcom = pcoms2[i - 1])), p2[i] = processPath(p2[i], attrs2, pcom), "A" != pcoms2[i] && "C" == pfirst && (pcoms2[i] = "C"), fixArc(p2, i)), fixM(p, p2, attrs, attrs2, i), fixM(p2, p, attrs2, attrs, i);
                    var seg = p[i],
                        seg2 = p2 && p2[i],
                        seglen = seg.length,
                        seg2len = p2 && seg2.length;
                    attrs.x = seg[seglen - 2], attrs.y = seg[seglen - 1], attrs.bx = toFloat(seg[seglen - 4]) || attrs.x, attrs.by = toFloat(seg[seglen - 3]) || attrs.y, attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x), attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y), attrs2.x = p2 && seg2[seg2len - 2], attrs2.y = p2 && seg2[seg2len - 1]
                }
                return p2 || (pth.curve = pathClone(p)), p2 ? [p, p2] : p
            }

            function mapPath(path, matrix) {
                if (!matrix) return path;
                var x, y, i, j, ii, jj, pathi;
                for (path = path2curve(path), i = 0, ii = path.length; i < ii; i++)
                    for (pathi = path[i], j = 1, jj = pathi.length; j < jj; j += 2) x = matrix.x(pathi[j], pathi[j + 1]), y = matrix.y(pathi[j], pathi[j + 1]), pathi[j] = x, pathi[j + 1] = y;
                return path
            }

            function catmullRom2bezier(crp, z) {
                for (var d = [], i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {
                    var p = [{
                        x: +crp[i - 2],
                        y: +crp[i - 1]
                    }, {
                        x: +crp[i],
                        y: +crp[i + 1]
                    }, {
                        x: +crp[i + 2],
                        y: +crp[i + 3]
                    }, {
                        x: +crp[i + 4],
                        y: +crp[i + 5]
                    }];
                    z ? i ? iLen - 4 == i ? p[3] = {
                        x: +crp[0],
                        y: +crp[1]
                    } : iLen - 2 == i && (p[2] = {
                        x: +crp[0],
                        y: +crp[1]
                    }, p[3] = {
                        x: +crp[2],
                        y: +crp[3]
                    }) : p[0] = {
                        x: +crp[iLen - 2],
                        y: +crp[iLen - 1]
                    } : iLen - 4 == i ? p[3] = p[2] : i || (p[0] = {
                        x: +crp[i],
                        y: +crp[i + 1]
                    }), d.push(["C", (-p[0].x + 6 * p[1].x + p[2].x) / 6, (-p[0].y + 6 * p[1].y + p[2].y) / 6, (p[1].x + 6 * p[2].x - p[3].x) / 6, (p[1].y + 6 * p[2].y - p[3].y) / 6, p[2].x, p[2].y])
                }
                return d
            }
            var elproto = Element.prototype,
                is = Snap.is,
                clone = Snap._.clone,
                has = "hasOwnProperty",
                p2s = /,?([a-z]),?/gi,
                toFloat = parseFloat,
                math = Math,
                PI = math.PI,
                mmin = math.min,
                mmax = math.max,
                pow = math.pow,
                abs = math.abs,
                getTotalLength = getLengthFactory(1),
                getPointAtLength = getLengthFactory(),
                getSubpathsAtLength = getLengthFactory(0, 1),
                unit2px = Snap._unit2px,
                getPath = {
                    path: function(el) {
                        return el.attr("path")
                    },
                    circle: function(el) {
                        var attr = unit2px(el);
                        return ellipsePath(attr.cx, attr.cy, attr.r)
                    },
                    ellipse: function(el) {
                        var attr = unit2px(el);
                        return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry)
                    },
                    rect: function(el) {
                        var attr = unit2px(el);
                        return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry)
                    },
                    image: function(el) {
                        var attr = unit2px(el);
                        return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height)
                    },
                    line: function(el) {
                        return "M" + [el.attr("x1") || 0, el.attr("y1") || 0, el.attr("x2"), el.attr("y2")]
                    },
                    polyline: function(el) {
                        return "M" + el.attr("points")
                    },
                    polygon: function(el) {
                        return "M" + el.attr("points") + "z"
                    },
                    deflt: function(el) {
                        var bbox = el.node.getBBox();
                        return rectPath(bbox.x, bbox.y, bbox.width, bbox.height)
                    }
                };
            Snap.path = paths, Snap.path.getTotalLength = getTotalLength, Snap.path.getPointAtLength = getPointAtLength, Snap.path.getSubpath = function(path, from, to) {
                if (this.getTotalLength(path) - to < 1e-6) return getSubpathsAtLength(path, from).end;
                var a = getSubpathsAtLength(path, to, 1);
                return from ? getSubpathsAtLength(a, from).end : a
            }, elproto.getTotalLength = function() {
                if (this.node.getTotalLength) return this.node.getTotalLength()
            }, elproto.getPointAtLength = function(length) {
                return getPointAtLength(this.attr("d"), length)
            }, elproto.getSubpath = function(from, to) {
                return Snap.path.getSubpath(this.attr("d"), from, to)
            }, Snap._.box = box, Snap.path.findDotsAtSegment = findDotsAtSegment, Snap.path.bezierBBox = bezierBBox, Snap.path.isPointInsideBBox = isPointInsideBBox, Snap.closest = function(x, y, X, Y) {
                for (var r = 100, b = box(x - r / 2, y - r / 2, r, r), inside = [], getter = X[0].hasOwnProperty("x") ? function(i) {
                        return {
                            x: X[i].x,
                            y: X[i].y
                        }
                    } : function(i) {
                        return {
                            x: X[i],
                            y: Y[i]
                        }
                    }, found = 0; r <= 1e6 && !found;) {
                    for (var i = 0, ii = X.length; i < ii; i++) {
                        var xy = getter(i);
                        if (isPointInsideBBox(b, xy.x, xy.y)) {
                            found++, inside.push(xy);
                            break
                        }
                    }
                    found || (r *= 2, b = box(x - r / 2, y - r / 2, r, r))
                }
                if (1e6 != r) {
                    var res, len = 1 / 0;
                    for (i = 0, ii = inside.length; i < ii; i++) {
                        var l = Snap.len(x, y, inside[i].x, inside[i].y);
                        len > l && (len = l, inside[i].len = l, res = inside[i])
                    }
                    return res
                }
            }, Snap.path.isBBoxIntersect = isBBoxIntersect, Snap.path.intersection = pathIntersection, Snap.path.intersectionNumber = pathIntersectionNumber, Snap.path.isPointInside = isPointInsidePath, Snap.path.getBBox = pathBBox, Snap.path.get = getPath, Snap.path.toRelative = pathToRelative, Snap.path.toAbsolute = pathToAbsolute, Snap.path.toCubic = path2curve, Snap.path.map = mapPath, Snap.path.toString = toString, Snap.path.clone = pathClone
        }), Snap.plugin(function(Snap, Element, Paper, glob) {
            var mmax = Math.max,
                mmin = Math.min,
                Set = function(items) {
                    if (this.items = [], this.bindings = {}, this.length = 0, this.type = "set", items)
                        for (var i = 0, ii = items.length; i < ii; i++) items[i] && (this[this.items.length] = this.items[this.items.length] = items[i], this.length++)
                },
                setproto = Set.prototype;
            setproto.push = function() {
                for (var item, len, i = 0, ii = arguments.length; i < ii; i++) item = arguments[i], item && (len = this.items.length, this[len] = this.items[len] = item, this.length++);
                return this
            }, setproto.pop = function() {
                return this.length && delete this[this.length--], this.items.pop()
            }, setproto.forEach = function(callback, thisArg) {
                for (var i = 0, ii = this.items.length; i < ii; i++)
                    if (callback.call(thisArg, this.items[i], i) === !1) return this;
                return this
            }, setproto.animate = function(attrs, ms, easing, callback) {
                "function" != typeof easing || easing.length || (callback = easing, easing = mina.linear), attrs instanceof Snap._.Animation && (callback = attrs.callback, easing = attrs.easing, ms = easing.dur, attrs = attrs.attr);
                var args = arguments;
                if (Snap.is(attrs, "array") && Snap.is(args[args.length - 1], "array")) var each = !0;
                var begin, handler = function() {
                        begin ? this.b = begin : begin = this.b
                    },
                    cb = 0,
                    set = this,
                    callbacker = callback && function() {
                        ++cb == set.length && callback.call(this)
                    };
                return this.forEach(function(el, i) {
                    eve.once("snap.animcreated." + el.id, handler), each ? args[i] && el.animate.apply(el, args[i]) : el.animate(attrs, ms, easing, callbacker)
                })
            }, setproto.remove = function() {
                for (; this.length;) this.pop().remove();
                return this
            }, setproto.bind = function(attr, a, b) {
                var data = {};
                if ("function" == typeof a) this.bindings[attr] = a;
                else {
                    var aname = b || attr;
                    this.bindings[attr] = function(v) {
                        data[aname] = v, a.attr(data)
                    }
                }
                return this
            }, setproto.attr = function(value) {
                var unbound = {};
                for (var k in value) this.bindings[k] ? this.bindings[k](value[k]) : unbound[k] = value[k];
                for (var i = 0, ii = this.items.length; i < ii; i++) this.items[i].attr(unbound);
                return this
            }, setproto.clear = function() {
                for (; this.length;) this.pop()
            }, setproto.splice = function(index, count, insertion) {
                index = index < 0 ? mmax(this.length + index, 0) : index, count = mmax(0, mmin(this.length - index, count));
                var i, tail = [],
                    todel = [],
                    args = [];
                for (i = 2; i < arguments.length; i++) args.push(arguments[i]);
                for (i = 0; i < count; i++) todel.push(this[index + i]);
                for (; i < this.length - index; i++) tail.push(this[index + i]);
                var arglen = args.length;
                for (i = 0; i < arglen + tail.length; i++) this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];
                for (i = this.items.length = this.length -= count - arglen; this[i];) delete this[i++];
                return new Set(todel)
            }, setproto.exclude = function(el) {
                for (var i = 0, ii = this.length; i < ii; i++)
                    if (this[i] == el) return this.splice(i, 1), !0;
                return !1
            }, setproto.insertAfter = function(el) {
                for (var i = this.items.length; i--;) this.items[i].insertAfter(el);
                return this
            }, setproto.getBBox = function() {
                for (var x = [], y = [], x2 = [], y2 = [], i = this.items.length; i--;)
                    if (!this.items[i].removed) {
                        var box = this.items[i].getBBox();
                        x.push(box.x), y.push(box.y), x2.push(box.x + box.width), y2.push(box.y + box.height)
                    }
                return x = mmin.apply(0, x), y = mmin.apply(0, y), x2 = mmax.apply(0, x2), y2 = mmax.apply(0, y2), {
                    x: x,
                    y: y,
                    x2: x2,
                    y2: y2,
                    width: x2 - x,
                    height: y2 - y,
                    cx: x + (x2 - x) / 2,
                    cy: y + (y2 - y) / 2
                }
            }, setproto.clone = function(s) {
                s = new Set;
                for (var i = 0, ii = this.items.length; i < ii; i++) s.push(this.items[i].clone());
                return s
            }, setproto.toString = function() {
                return "Snap‘s set"
            }, setproto.type = "set", Snap.Set = Set, Snap.set = function() {
                var set = new Set;
                return arguments.length && set.push.apply(set, Array.prototype.slice.call(arguments, 0)), set
            }
        }), Snap.plugin(function(Snap, Element, Paper, glob) {
            function getEmpty(item) {
                var l = item[0];
                switch (l.toLowerCase()) {
                    case "t":
                        return [l, 0, 0];
                    case "m":
                        return [l, 1, 0, 0, 1, 0, 0];
                    case "r":
                        return 4 == item.length ? [l, 0, item[2], item[3]] : [l, 0];
                    case "s":
                        return 5 == item.length ? [l, 1, 1, item[3], item[4]] : 3 == item.length ? [l, 1, 1] : [l, 1]
                }
            }

            function equaliseTransform(t1, t2, getBBox) {
                t2 = Str(t2).replace(/\.{3}|\u2026/g, t1), t1 = Snap.parseTransformString(t1) || [], t2 = Snap.parseTransformString(t2) || [];
                for (var j, jj, tt1, tt2, maxlength = Math.max(t1.length, t2.length), from = [], to = [], i = 0; i < maxlength; i++) {
                    if (tt1 = t1[i] || getEmpty(t2[i]), tt2 = t2[i] || getEmpty(tt1), tt1[0] != tt2[0] || "r" == tt1[0].toLowerCase() && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) || "s" == tt1[0].toLowerCase() && (tt1[3] != tt2[3] || tt1[4] != tt2[4])) {
                        t1 = Snap._.transform2matrix(t1, getBBox()), t2 = Snap._.transform2matrix(t2, getBBox()), from = [
                            ["m", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]
                        ], to = [
                            ["m", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]
                        ];
                        break
                    }
                    for (from[i] = [], to[i] = [], j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) j in tt1 && (from[i][j] = tt1[j]), j in tt2 && (to[i][j] = tt2[j])
                }
                return {
                    from: path2array(from),
                    to: path2array(to),
                    f: getPath(from)
                }
            }

            function getNumber(val) {
                return val
            }

            function getUnit(unit) {
                return function(val) {
                    return +val.toFixed(3) + unit
                }
            }

            function getViewBox(val) {
                return val.join(" ")
            }

            function getColour(clr) {
                return Snap.rgb(clr[0], clr[1], clr[2])
            }

            function getPath(path) {
                var i, ii, j, jj, out, a, k = 0,
                    b = [];
                for (i = 0, ii = path.length; i < ii; i++) {
                    for (out = "[", a = ['"' + path[i][0] + '"'], j = 1, jj = path[i].length; j < jj; j++) a[j] = "val[" + k++ +"]";
                    out += a + "]", b[i] = out
                }
                return Function("val", "return Snap.path.toString.call([" + b + "])")
            }

            function path2array(path) {
                for (var out = [], i = 0, ii = path.length; i < ii; i++)
                    for (var j = 1, jj = path[i].length; j < jj; j++) out.push(path[i][j]);
                return out
            }

            function isNumeric(obj) {
                return isFinite(parseFloat(obj))
            }

            function arrayEqual(arr1, arr2) {
                return !(!Snap.is(arr1, "array") || !Snap.is(arr2, "array")) && arr1.toString() == arr2.toString()
            }
            var names = {},
                reUnit = /[a-z]+$/i,
                Str = String;
            names.stroke = names.fill = "colour", Element.prototype.equal = function(name, b) {
                return eve("snap.util.equal", this, name, b).firstDefined()
            }, eve.on("snap.util.equal", function(name, b) {
                var A, B, a = Str(this.attr(name) || ""),
                    el = this;
                if (isNumeric(a) && isNumeric(b)) return {
                    from: parseFloat(a),
                    to: parseFloat(b),
                    f: getNumber
                };
                if ("colour" == names[name]) return A = Snap.color(a), B = Snap.color(b), {
                    from: [A.r, A.g, A.b, A.opacity],
                    to: [B.r, B.g, B.b, B.opacity],
                    f: getColour
                };
                if ("viewBox" == name) return A = this.attr(name).vb.split(" ").map(Number), B = b.split(" ").map(Number), {
                    from: A,
                    to: B,
                    f: getViewBox
                };
                if ("transform" == name || "gradientTransform" == name || "patternTransform" == name) return b instanceof Snap.Matrix && (b = b.toTransformString()), Snap._.rgTransform.test(b) || (b = Snap._.svgTransform2string(b)), equaliseTransform(a, b, function() {
                    return el.getBBox(1)
                });
                if ("d" == name || "path" == name) return A = Snap.path.toCubic(a, b), {
                    from: path2array(A[0]),
                    to: path2array(A[1]),
                    f: getPath(A[0])
                };
                if ("points" == name) return A = Str(a).split(Snap._.separator), B = Str(b).split(Snap._.separator), {
                    from: A,
                    to: B,
                    f: function(val) {
                        return val
                    }
                };
                var aUnit = a.match(reUnit),
                    bUnit = Str(b).match(reUnit);
                return aUnit && arrayEqual(aUnit, bUnit) ? {
                    from: parseFloat(a),
                    to: parseFloat(b),
                    f: getUnit(aUnit)
                } : {
                    from: this.asPX(name),
                    to: this.asPX(name, b),
                    f: getNumber
                }
            })
        }), Snap.plugin(function(Snap, Element, Paper, glob) {
            for (var elproto = Element.prototype, has = "hasOwnProperty", supportsTouch = ("createTouch" in glob.doc), events = ["click", "dblclick", "mousedown", "mousemove", "mouseout", "mouseover", "mouseup", "touchstart", "touchmove", "touchend", "touchcancel"], touchMap = {
                    mousedown: "touchstart",
                    mousemove: "touchmove",
                    mouseup: "touchend"
                }, getScroll = (function(xy, el) {
                    var name = "y" == xy ? "scrollTop" : "scrollLeft",
                        doc = el && el.node ? el.node.ownerDocument : glob.doc;
                    return doc[name in doc.documentElement ? "documentElement" : "body"][name]
                }), preventTouch = function() {
                    return this.originalEvent.preventDefault()
                }, stopTouch = function() {
                    return this.originalEvent.stopPropagation()
                }, addEvent = function(obj, type, fn, element) {
                    var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,
                        f = function(e) {
                            var scrollY = getScroll("y", element),
                                scrollX = getScroll("x", element);
                            if (supportsTouch && touchMap[has](type))
                                for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++)
                                    if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {
                                        var olde = e;
                                        e = e.targetTouches[i], e.originalEvent = olde, e.preventDefault = preventTouch, e.stopPropagation = stopTouch;
                                        break
                                    }
                            var x = e.clientX + scrollX,
                                y = e.clientY + scrollY;
                            return fn.call(element, e, x, y)
                        };
                    return type !== realName && obj.addEventListener(type, f, !1), obj.addEventListener(realName, f, !1),
                        function() {
                            return type !== realName && obj.removeEventListener(type, f, !1), obj.removeEventListener(realName, f, !1), !0
                        }
                }, drag = [], dragMove = function(e) {
                    for (var dragi, x = e.clientX, y = e.clientY, scrollY = getScroll("y"), scrollX = getScroll("x"), j = drag.length; j--;) {
                        if (dragi = drag[j], supportsTouch) {
                            for (var touch, i = e.touches && e.touches.length; i--;)
                                if (touch = e.touches[i], touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {
                                    x = touch.clientX, y = touch.clientY, (e.originalEvent ? e.originalEvent : e).preventDefault();
                                    break
                                }
                        } else e.preventDefault();
                        var node = dragi.el.node;
                        node.nextSibling, node.parentNode, node.style.display;
                        x += scrollX, y += scrollY, eve("snap.drag.move." + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e)
                    }
                }, dragUp = function(e) {
                    Snap.unmousemove(dragMove).unmouseup(dragUp);
                    for (var dragi, i = drag.length; i--;) dragi = drag[i], dragi.el._drag = {}, eve("snap.drag.end." + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e), eve.off("snap.drag.*." + dragi.el.id);
                    drag = []
                }, i = events.length; i--;) ! function(eventName) {
                Snap[eventName] = elproto[eventName] = function(fn, scope) {
                    if (Snap.is(fn, "function")) this.events = this.events || [], this.events.push({
                        name: eventName,
                        f: fn,
                        unbind: addEvent(this.node || document, eventName, fn, scope || this)
                    });
                    else
                        for (var i = 0, ii = this.events.length; i < ii; i++)
                            if (this.events[i].name == eventName) try {
                                this.events[i].f.call(this)
                            } catch (e) {}
                            return this
                }, Snap["un" + eventName] = elproto["un" + eventName] = function(fn) {
                    for (var events = this.events || [], l = events.length; l--;)
                        if (events[l].name == eventName && (events[l].f == fn || !fn)) return events[l].unbind(), events.splice(l, 1), !events.length && delete this.events, this;
                    return this
                }
            }(events[i]);
            elproto.hover = function(f_in, f_out, scope_in, scope_out) {
                return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in)
            }, elproto.unhover = function(f_in, f_out) {
                return this.unmouseover(f_in).unmouseout(f_out)
            };
            var draggable = [];
            elproto.drag = function(onmove, onstart, onend, move_scope, start_scope, end_scope) {
                function start(e, x, y) {
                    (e.originalEvent || e).preventDefault(), el._drag.x = x, el._drag.y = y, el._drag.id = e.identifier, !drag.length && Snap.mousemove(dragMove).mouseup(dragUp), drag.push({
                        el: el,
                        move_scope: move_scope,
                        start_scope: start_scope,
                        end_scope: end_scope
                    }), onstart && eve.on("snap.drag.start." + el.id, onstart), onmove && eve.on("snap.drag.move." + el.id, onmove), onend && eve.on("snap.drag.end." + el.id, onend), eve("snap.drag.start." + el.id, start_scope || move_scope || el, x, y, e)
                }

                function init(e, x, y) {
                    eve("snap.draginit." + el.id, el, e, x, y)
                }
                var el = this;
                if (!arguments.length) {
                    var origTransform;
                    return el.drag(function(dx, dy) {
                        this.attr({
                            transform: origTransform + (origTransform ? "T" : "t") + [dx, dy]
                        })
                    }, function() {
                        origTransform = this.transform().local
                    })
                }
                return eve.on("snap.draginit." + el.id, start), el._drag = {}, draggable.push({
                    el: el,
                    start: start,
                    init: init
                }), el.mousedown(init), el
            }, elproto.undrag = function() {
                for (var i = draggable.length; i--;) draggable[i].el == this && (this.unmousedown(draggable[i].init), draggable.splice(i, 1), eve.unbind("snap.drag.*." + this.id), eve.unbind("snap.draginit." + this.id));
                return !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp), this
            }
        }), Snap.plugin(function(Snap, Element, Paper, glob) {
            var pproto = (Element.prototype, Paper.prototype),
                rgurl = /^\s*url\((.+)\)/,
                Str = String,
                $ = Snap._.$;
            Snap.filter = {}, pproto.filter = function(filstr) {
                var paper = this;
                "svg" != paper.type && (paper = paper.paper);
                var f = Snap.parse(Str(filstr)),
                    id = Snap._.id(),
                    filter = (paper.node.offsetWidth, paper.node.offsetHeight, $("filter"));
                return $(filter, {
                    id: id,
                    filterUnits: "userSpaceOnUse"
                }), filter.appendChild(f.node), paper.defs.appendChild(filter), new Element(filter)
            }, eve.on("snap.util.getattr.filter", function() {
                eve.stop();
                var p = $(this.node, "filter");
                if (p) {
                    var match = Str(p).match(rgurl);
                    return match && Snap.select(match[1])
                }
            }), eve.on("snap.util.attr.filter", function(value) {
                if (value instanceof Element && "filter" == value.type) {
                    eve.stop();
                    var id = value.node.id;
                    id || ($(value.node, {
                        id: value.id
                    }), id = value.id), $(this.node, {
                        filter: Snap.url(id)
                    })
                }
                value && "none" != value || (eve.stop(), this.node.removeAttribute("filter"))
            }), Snap.filter.blur = function(x, y) {
                null == x && (x = 2);
                var def = null == y ? x : [x, y];
                return Snap.format('<feGaussianBlur stdDeviation="{def}"/>', {
                    def: def
                })
            }, Snap.filter.blur.toString = function() {
                return this()
            }, Snap.filter.shadow = function(dx, dy, blur, color, opacity) {
                return "string" == typeof blur && (color = blur, opacity = color, blur = 4), "string" != typeof color && (opacity = color, color = "#000"), color = color || "#000", null == blur && (blur = 4), null == opacity && (opacity = 1), null == dx && (dx = 0, dy = 2), null == dy && (dy = dx), color = Snap.color(color), Snap.format('<feGaussianBlur in="SourceAlpha" stdDeviation="{blur}"/><feOffset dx="{dx}" dy="{dy}" result="offsetblur"/><feFlood flood-color="{color}"/><feComposite in2="offsetblur" operator="in"/><feComponentTransfer><feFuncA type="linear" slope="{opacity}"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in="SourceGraphic"/></feMerge>', {
                    color: color,
                    dx: dx,
                    dy: dy,
                    blur: blur,
                    opacity: opacity
                })
            }, Snap.filter.shadow.toString = function() {
                return this()
            }, Snap.filter.grayscale = function(amount) {
                return null == amount && (amount = 1), Snap.format('<feColorMatrix type="matrix" values="{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0"/>', {
                    a: .2126 + .7874 * (1 - amount),
                    b: .7152 - .7152 * (1 - amount),
                    c: .0722 - .0722 * (1 - amount),
                    d: .2126 - .2126 * (1 - amount),
                    e: .7152 + .2848 * (1 - amount),
                    f: .0722 - .0722 * (1 - amount),
                    g: .2126 - .2126 * (1 - amount),
                    h: .0722 + .9278 * (1 - amount)
                })
            }, Snap.filter.grayscale.toString = function() {
                return this()
            }, Snap.filter.sepia = function(amount) {
                return null == amount && (amount = 1), Snap.format('<feColorMatrix type="matrix" values="{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0"/>', {
                    a: .393 + .607 * (1 - amount),
                    b: .769 - .769 * (1 - amount),
                    c: .189 - .189 * (1 - amount),
                    d: .349 - .349 * (1 - amount),
                    e: .686 + .314 * (1 - amount),
                    f: .168 - .168 * (1 - amount),
                    g: .272 - .272 * (1 - amount),
                    h: .534 - .534 * (1 - amount),
                    i: .131 + .869 * (1 - amount)
                })
            }, Snap.filter.sepia.toString = function() {
                return this()
            }, Snap.filter.saturate = function(amount) {
                return null == amount && (amount = 1), Snap.format('<feColorMatrix type="saturate" values="{amount}"/>', {
                    amount: 1 - amount
                })
            }, Snap.filter.saturate.toString = function() {
                return this()
            }, Snap.filter.hueRotate = function(angle) {
                return angle = angle || 0, Snap.format('<feColorMatrix type="hueRotate" values="{angle}"/>', {
                    angle: angle
                })
            }, Snap.filter.hueRotate.toString = function() {
                return this()
            }, Snap.filter.invert = function(amount) {
                return null == amount && (amount = 1), Snap.format('<feComponentTransfer><feFuncR type="table" tableValues="{amount} {amount2}"/><feFuncG type="table" tableValues="{amount} {amount2}"/><feFuncB type="table" tableValues="{amount} {amount2}"/></feComponentTransfer>', {
                    amount: amount,
                    amount2: 1 - amount
                })
            }, Snap.filter.invert.toString = function() {
                return this()
            }, Snap.filter.brightness = function(amount) {
                return null == amount && (amount = 1), Snap.format('<feComponentTransfer><feFuncR type="linear" slope="{amount}"/><feFuncG type="linear" slope="{amount}"/><feFuncB type="linear" slope="{amount}"/></feComponentTransfer>', {
                    amount: amount
                })
            }, Snap.filter.brightness.toString = function() {
                return this()
            }, Snap.filter.contrast = function(amount) {
                return null == amount && (amount = 1), Snap.format('<feComponentTransfer><feFuncR type="linear" slope="{amount}" intercept="{amount2}"/><feFuncG type="linear" slope="{amount}" intercept="{amount2}"/><feFuncB type="linear" slope="{amount}" intercept="{amount2}"/></feComponentTransfer>', {
                    amount: amount,
                    amount2: .5 - amount / 2
                })
            }, Snap.filter.contrast.toString = function() {
                return this()
            }
        }), Snap.plugin(function(Snap, Element, Paper, glob, Fragment) {
            var box = Snap._.box,
                is = Snap.is,
                firstLetter = /^[^a-z]*([tbmlrc])/i,
                toString = function() {
                    return "T" + this.dx + "," + this.dy
                };
            Element.prototype.getAlign = function(el, way) {
                null == way && is(el, "string") && (way = el, el = null), el = el || this.paper;
                var bx = el.getBBox ? el.getBBox() : box(el),
                    bb = this.getBBox(),
                    out = {};
                switch (way = way && way.match(firstLetter), way = way ? way[1].toLowerCase() : "c") {
                    case "t":
                        out.dx = 0, out.dy = bx.y - bb.y;
                        break;
                    case "b":
                        out.dx = 0, out.dy = bx.y2 - bb.y2;
                        break;
                    case "m":
                        out.dx = 0, out.dy = bx.cy - bb.cy;
                        break;
                    case "l":
                        out.dx = bx.x - bb.x, out.dy = 0;
                        break;
                    case "r":
                        out.dx = bx.x2 - bb.x2, out.dy = 0;
                        break;
                    default:
                        out.dx = bx.cx - bb.cx, out.dy = 0
                }
                return out.toString = toString, out
            }, Element.prototype.align = function(el, way) {
                return this.transform("..." + this.getAlign(el, way))
            }
        }), Snap
    }), ! function(a) {
        "use strict";
        "function" == typeof define && define.amd ? define(["jquery"], a) : "undefined" != typeof exports ? module.exports = a(require("jquery")) : a(jQuery)
    }(function(a) {
        "use strict";
        var b = window.Slick || {};
        b = function() {
            function c(c, d) {
                var f, e = this;
                e.defaults = {
                    accessibility: !0,
                    adaptiveHeight: !1,
                    appendArrows: a(c),
                    appendDots: a(c),
                    arrows: !0,
                    asNavFor: null,
                    prevArrow: '<button type="button" data-role="none" class="slick-prev" aria-label="Previous" tabindex="0" role="button">Previous</button>',
                    nextArrow: '<button type="button" data-role="none" class="slick-next" aria-label="Next" tabindex="0" role="button">Next</button>',
                    autoplay: !1,
                    autoplaySpeed: 3e3,
                    centerMode: !1,
                    centerPadding: "50px",
                    cssEase: "ease",
                    customPaging: function(b, c) {
                        return a('<button type="button" data-role="none" role="button" tabindex="0" />').text(c + 1)
                    },
                    dots: !1,
                    dotsClass: "slick-dots",
                    draggable: !0,
                    easing: "linear",
                    edgeFriction: .35,
                    fade: !1,
                    focusOnSelect: !1,
                    infinite: !0,
                    initialSlide: 0,
                    lazyLoad: "ondemand",
                    mobileFirst: !1,
                    pauseOnHover: !0,
                    pauseOnFocus: !0,
                    pauseOnDotsHover: !1,
                    respondTo: "window",
                    responsive: null,
                    rows: 1,
                    rtl: !1,
                    slide: "",
                    slidesPerRow: 1,
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    speed: 500,
                    swipe: !0,
                    swipeToSlide: !1,
                    touchMove: !0,
                    touchThreshold: 5,
                    useCSS: !0,
                    useTransform: !0,
                    variableWidth: !1,
                    vertical: !1,
                    verticalSwiping: !1,
                    waitForAnimate: !0,
                    zIndex: 1e3
                }, e.initials = {
                    animating: !1,
                    dragging: !1,
                    autoPlayTimer: null,
                    currentDirection: 0,
                    currentLeft: null,
                    currentSlide: 0,
                    direction: 1,
                    $dots: null,
                    listWidth: null,
                    listHeight: null,
                    loadIndex: 0,
                    $nextArrow: null,
                    $prevArrow: null,
                    slideCount: null,
                    slideWidth: null,
                    $slideTrack: null,
                    $slides: null,
                    sliding: !1,
                    slideOffset: 0,
                    swipeLeft: null,
                    $list: null,
                    touchObject: {},
                    transformsEnabled: !1,
                    unslicked: !1
                }, a.extend(e, e.initials), e.activeBreakpoint = null, e.animType = null, e.animProp = null, e.breakpoints = [], e.breakpointSettings = [], e.cssTransitions = !1, e.focussed = !1, e.interrupted = !1, e.hidden = "hidden", e.paused = !0, e.positionProp = null, e.respondTo = null, e.rowCount = 1, e.shouldClick = !0, e.$slider = a(c), e.$slidesCache = null, e.transformType = null, e.transitionType = null, e.visibilityChange = "visibilitychange", e.windowWidth = 0, e.windowTimer = null, f = a(c).data("slick") || {}, e.options = a.extend({}, e.defaults, d, f), e.currentSlide = e.options.initialSlide, e.originalSettings = e.options, "undefined" != typeof document.mozHidden ? (e.hidden = "mozHidden", e.visibilityChange = "mozvisibilitychange") : "undefined" != typeof document.webkitHidden && (e.hidden = "webkitHidden", e.visibilityChange = "webkitvisibilitychange"), e.autoPlay = a.proxy(e.autoPlay, e), e.autoPlayClear = a.proxy(e.autoPlayClear, e), e.autoPlayIterator = a.proxy(e.autoPlayIterator, e), e.changeSlide = a.proxy(e.changeSlide, e), e.clickHandler = a.proxy(e.clickHandler, e), e.selectHandler = a.proxy(e.selectHandler, e), e.setPosition = a.proxy(e.setPosition, e), e.swipeHandler = a.proxy(e.swipeHandler, e), e.dragHandler = a.proxy(e.dragHandler, e), e.keyHandler = a.proxy(e.keyHandler, e), e.instanceUid = b++, e.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/, e.registerBreakpoints(), e.init(!0)
            }
            var b = 0;
            return c
        }(), b.prototype.activateADA = function() {
            var a = this;
            a.$slideTrack.find(".slick-active").attr({
                "aria-hidden": "false"
            }).find("a, input, button, select").attr({
                tabindex: "0"
            })
        }, b.prototype.addSlide = b.prototype.slickAdd = function(b, c, d) {
            var e = this;
            if ("boolean" == typeof c) d = c, c = null;
            else if (0 > c || c >= e.slideCount) return !1;
            e.unload(), "number" == typeof c ? 0 === c && 0 === e.$slides.length ? a(b).appendTo(e.$slideTrack) : d ? a(b).insertBefore(e.$slides.eq(c)) : a(b).insertAfter(e.$slides.eq(c)) : d === !0 ? a(b).prependTo(e.$slideTrack) : a(b).appendTo(e.$slideTrack), e.$slides = e.$slideTrack.children(this.options.slide), e.$slideTrack.children(this.options.slide).detach(), e.$slideTrack.append(e.$slides), e.$slides.each(function(b, c) {
                a(c).attr("data-slick-index", b)
            }), e.$slidesCache = e.$slides, e.reinit()
        }, b.prototype.animateHeight = function() {
            var a = this;
            if (1 === a.options.slidesToShow && a.options.adaptiveHeight === !0 && a.options.vertical === !1) {
                var b = a.$slides.eq(a.currentSlide).outerHeight(!0);
                a.$list.animate({
                    height: b
                }, a.options.speed)
            }
        }, b.prototype.animateSlide = function(b, c) {
            var d = {},
                e = this;
            e.animateHeight(), e.options.rtl === !0 && e.options.vertical === !1 && (b = -b), e.transformsEnabled === !1 ? e.options.vertical === !1 ? e.$slideTrack.animate({
                left: b
            }, e.options.speed, e.options.easing, c) : e.$slideTrack.animate({
                top: b
            }, e.options.speed, e.options.easing, c) : e.cssTransitions === !1 ? (e.options.rtl === !0 && (e.currentLeft = -e.currentLeft), a({
                animStart: e.currentLeft
            }).animate({
                animStart: b
            }, {
                duration: e.options.speed,
                easing: e.options.easing,
                step: function(a) {
                    a = Math.ceil(a), e.options.vertical === !1 ? (d[e.animType] = "translate(" + a + "px, 0px)", e.$slideTrack.css(d)) : (d[e.animType] = "translate(0px," + a + "px)", e.$slideTrack.css(d))
                },
                complete: function() {
                    c && c.call()
                }
            })) : (e.applyTransition(), b = Math.ceil(b), e.options.vertical === !1 ? d[e.animType] = "translate3d(" + b + "px, 0px, 0px)" : d[e.animType] = "translate3d(0px," + b + "px, 0px)", e.$slideTrack.css(d), c && setTimeout(function() {
                e.disableTransition(), c.call()
            }, e.options.speed))
        }, b.prototype.getNavTarget = function() {
            var b = this,
                c = b.options.asNavFor;
            return c && null !== c && (c = a(c).not(b.$slider)), c
        }, b.prototype.asNavFor = function(b) {
            var c = this,
                d = c.getNavTarget();
            null !== d && "object" == typeof d && d.each(function() {
                var c = a(this).slick("getSlick");
                c.unslicked || c.slideHandler(b, !0)
            })
        }, b.prototype.applyTransition = function(a) {
            var b = this,
                c = {};
            b.options.fade === !1 ? c[b.transitionType] = b.transformType + " " + b.options.speed + "ms " + b.options.cssEase : c[b.transitionType] = "opacity " + b.options.speed + "ms " + b.options.cssEase, b.options.fade === !1 ? b.$slideTrack.css(c) : b.$slides.eq(a).css(c)
        }, b.prototype.autoPlay = function() {
            var a = this;
            a.autoPlayClear(), a.slideCount > a.options.slidesToShow && (a.autoPlayTimer = setInterval(a.autoPlayIterator, a.options.autoplaySpeed))
        }, b.prototype.autoPlayClear = function() {
            var a = this;
            a.autoPlayTimer && clearInterval(a.autoPlayTimer)
        }, b.prototype.autoPlayIterator = function() {
            var a = this,
                b = a.currentSlide + a.options.slidesToScroll;
            a.paused || a.interrupted || a.focussed || (a.options.infinite === !1 && (1 === a.direction && a.currentSlide + 1 === a.slideCount - 1 ? a.direction = 0 : 0 === a.direction && (b = a.currentSlide - a.options.slidesToScroll, a.currentSlide - 1 === 0 && (a.direction = 1))), a.slideHandler(b))
        }, b.prototype.buildArrows = function() {
            var b = this;
            b.options.arrows === !0 && (b.$prevArrow = a(b.options.prevArrow).addClass("slick-arrow"), b.$nextArrow = a(b.options.nextArrow).addClass("slick-arrow"), b.slideCount > b.options.slidesToShow ? (b.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), b.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), b.htmlExpr.test(b.options.prevArrow) && b.$prevArrow.prependTo(b.options.appendArrows), b.htmlExpr.test(b.options.nextArrow) && b.$nextArrow.appendTo(b.options.appendArrows), b.options.infinite !== !0 && b.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true")) : b.$prevArrow.add(b.$nextArrow).addClass("slick-hidden").attr({
                "aria-disabled": "true",
                tabindex: "-1"
            }))
        }, b.prototype.buildDots = function() {
            var c, d, b = this;
            if (b.options.dots === !0 && b.slideCount > b.options.slidesToShow) {
                for (b.$slider.addClass("slick-dotted"), d = a("<ul />").addClass(b.options.dotsClass), c = 0; c <= b.getDotCount(); c += 1) d.append(a("<li />").append(b.options.customPaging.call(this, b, c)));
                b.$dots = d.appendTo(b.options.appendDots), b.$dots.find("li").first().addClass("slick-active").attr("aria-hidden", "false")
            }
        }, b.prototype.buildOut = function() {
            var b = this;
            b.$slides = b.$slider.children(b.options.slide + ":not(.slick-cloned)").addClass("slick-slide"), b.slideCount = b.$slides.length, b.$slides.each(function(b, c) {
                a(c).attr("data-slick-index", b).data("originalStyling", a(c).attr("style") || "")
            }), b.$slider.addClass("slick-slider"), b.$slideTrack = 0 === b.slideCount ? a('<div class="slick-track"/>').appendTo(b.$slider) : b.$slides.wrapAll('<div class="slick-track"/>').parent(), b.$list = b.$slideTrack.wrap('<div aria-live="polite" class="slick-list"/>').parent(), b.$slideTrack.css("opacity", 0), (b.options.centerMode === !0 || b.options.swipeToSlide === !0) && (b.options.slidesToScroll = 1), a("img[data-lazy]", b.$slider).not("[src]").addClass("slick-loading"), b.setupInfinite(), b.buildArrows(), b.buildDots(), b.updateDots(), b.setSlideClasses("number" == typeof b.currentSlide ? b.currentSlide : 0), b.options.draggable === !0 && b.$list.addClass("draggable")
        }, b.prototype.buildRows = function() {
            var b, c, d, e, f, g, h, a = this;
            if (e = document.createDocumentFragment(), g = a.$slider.children(), a.options.rows > 1) {
                for (h = a.options.slidesPerRow * a.options.rows, f = Math.ceil(g.length / h), b = 0; f > b; b++) {
                    var i = document.createElement("div");
                    for (c = 0; c < a.options.rows; c++) {
                        var j = document.createElement("div");
                        for (d = 0; d < a.options.slidesPerRow; d++) {
                            var k = b * h + (c * a.options.slidesPerRow + d);
                            g.get(k) && j.appendChild(g.get(k))
                        }
                        i.appendChild(j)
                    }
                    e.appendChild(i)
                }
                a.$slider.empty().append(e), a.$slider.children().children().children().css({
                    width: 100 / a.options.slidesPerRow + "%",
                    display: "inline-block"
                })
            }
        }, b.prototype.checkResponsive = function(b, c) {
            var e, f, g, d = this,
                h = !1,
                i = d.$slider.width(),
                j = window.innerWidth || a(window).width();
            if ("window" === d.respondTo ? g = j : "slider" === d.respondTo ? g = i : "min" === d.respondTo && (g = Math.min(j, i)), d.options.responsive && d.options.responsive.length && null !== d.options.responsive) {
                f = null;
                for (e in d.breakpoints) d.breakpoints.hasOwnProperty(e) && (d.originalSettings.mobileFirst === !1 ? g < d.breakpoints[e] && (f = d.breakpoints[e]) : g > d.breakpoints[e] && (f = d.breakpoints[e]));
                null !== f ? null !== d.activeBreakpoint ? (f !== d.activeBreakpoint || c) && (d.activeBreakpoint = f, "unslick" === d.breakpointSettings[f] ? d.unslick(f) : (d.options = a.extend({}, d.originalSettings, d.breakpointSettings[f]), b === !0 && (d.currentSlide = d.options.initialSlide), d.refresh(b)), h = f) : (d.activeBreakpoint = f, "unslick" === d.breakpointSettings[f] ? d.unslick(f) : (d.options = a.extend({}, d.originalSettings, d.breakpointSettings[f]), b === !0 && (d.currentSlide = d.options.initialSlide), d.refresh(b)), h = f) : null !== d.activeBreakpoint && (d.activeBreakpoint = null, d.options = d.originalSettings, b === !0 && (d.currentSlide = d.options.initialSlide), d.refresh(b), h = f), b || h === !1 || d.$slider.trigger("breakpoint", [d, h])
            }
        }, b.prototype.changeSlide = function(b, c) {
            var f, g, h, d = this,
                e = a(b.currentTarget);
            switch (e.is("a") && b.preventDefault(), e.is("li") || (e = e.closest("li")), h = d.slideCount % d.options.slidesToScroll !== 0, f = h ? 0 : (d.slideCount - d.currentSlide) % d.options.slidesToScroll, b.data.message) {
                case "previous":
                    g = 0 === f ? d.options.slidesToScroll : d.options.slidesToShow - f, d.slideCount > d.options.slidesToShow && d.slideHandler(d.currentSlide - g, !1, c);
                    break;
                case "next":
                    g = 0 === f ? d.options.slidesToScroll : f, d.slideCount > d.options.slidesToShow && d.slideHandler(d.currentSlide + g, !1, c);
                    break;
                case "index":
                    var i = 0 === b.data.index ? 0 : b.data.index || e.index() * d.options.slidesToScroll;
                    d.slideHandler(d.checkNavigable(i), !1, c), e.children().trigger("focus");
                    break;
                default:
                    return
            }
        }, b.prototype.checkNavigable = function(a) {
            var c, d, b = this;
            if (c = b.getNavigableIndexes(), d = 0, a > c[c.length - 1]) a = c[c.length - 1];
            else
                for (var e in c) {
                    if (a < c[e]) {
                        a = d;
                        break
                    }
                    d = c[e]
                }
            return a
        }, b.prototype.cleanUpEvents = function() {
            var b = this;
            b.options.dots && null !== b.$dots && a("li", b.$dots).off("click.slick", b.changeSlide).off("mouseenter.slick", a.proxy(b.interrupt, b, !0)).off("mouseleave.slick", a.proxy(b.interrupt, b, !1)), b.$slider.off("focus.slick blur.slick"), b.options.arrows === !0 && b.slideCount > b.options.slidesToShow && (b.$prevArrow && b.$prevArrow.off("click.slick", b.changeSlide), b.$nextArrow && b.$nextArrow.off("click.slick", b.changeSlide)), b.$list.off("touchstart.slick mousedown.slick", b.swipeHandler), b.$list.off("touchmove.slick mousemove.slick", b.swipeHandler), b.$list.off("touchend.slick mouseup.slick", b.swipeHandler), b.$list.off("touchcancel.slick mouseleave.slick", b.swipeHandler),
                b.$list.off("click.slick", b.clickHandler), a(document).off(b.visibilityChange, b.visibility), b.cleanUpSlideEvents(), b.options.accessibility === !0 && b.$list.off("keydown.slick", b.keyHandler), b.options.focusOnSelect === !0 && a(b.$slideTrack).children().off("click.slick", b.selectHandler), a(window).off("orientationchange.slick.slick-" + b.instanceUid, b.orientationChange), a(window).off("resize.slick.slick-" + b.instanceUid, b.resize), a("[draggable!=true]", b.$slideTrack).off("dragstart", b.preventDefault), a(window).off("load.slick.slick-" + b.instanceUid, b.setPosition), a(document).off("ready.slick.slick-" + b.instanceUid, b.setPosition)
        }, b.prototype.cleanUpSlideEvents = function() {
            var b = this;
            b.$list.off("mouseenter.slick", a.proxy(b.interrupt, b, !0)), b.$list.off("mouseleave.slick", a.proxy(b.interrupt, b, !1))
        }, b.prototype.cleanUpRows = function() {
            var b, a = this;
            a.options.rows > 1 && (b = a.$slides.children().children(), b.removeAttr("style"), a.$slider.empty().append(b))
        }, b.prototype.clickHandler = function(a) {
            var b = this;
            b.shouldClick === !1 && (a.stopImmediatePropagation(), a.stopPropagation(), a.preventDefault())
        }, b.prototype.destroy = function(b) {
            var c = this;
            c.autoPlayClear(), c.touchObject = {}, c.cleanUpEvents(), a(".slick-cloned", c.$slider).detach(), c.$dots && c.$dots.remove(), c.$prevArrow && c.$prevArrow.length && (c.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), c.htmlExpr.test(c.options.prevArrow) && c.$prevArrow.remove()), c.$nextArrow && c.$nextArrow.length && (c.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), c.htmlExpr.test(c.options.nextArrow) && c.$nextArrow.remove()), c.$slides && (c.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function() {
                a(this).attr("style", a(this).data("originalStyling"))
            }), c.$slideTrack.children(this.options.slide).detach(), c.$slideTrack.detach(), c.$list.detach(), c.$slider.append(c.$slides)), c.cleanUpRows(), c.$slider.removeClass("slick-slider"), c.$slider.removeClass("slick-initialized"), c.$slider.removeClass("slick-dotted"), c.unslicked = !0, b || c.$slider.trigger("destroy", [c])
        }, b.prototype.disableTransition = function(a) {
            var b = this,
                c = {};
            c[b.transitionType] = "", b.options.fade === !1 ? b.$slideTrack.css(c) : b.$slides.eq(a).css(c)
        }, b.prototype.fadeSlide = function(a, b) {
            var c = this;
            c.cssTransitions === !1 ? (c.$slides.eq(a).css({
                zIndex: c.options.zIndex
            }), c.$slides.eq(a).animate({
                opacity: 1
            }, c.options.speed, c.options.easing, b)) : (c.applyTransition(a), c.$slides.eq(a).css({
                opacity: 1,
                zIndex: c.options.zIndex
            }), b && setTimeout(function() {
                c.disableTransition(a), b.call()
            }, c.options.speed))
        }, b.prototype.fadeSlideOut = function(a) {
            var b = this;
            b.cssTransitions === !1 ? b.$slides.eq(a).animate({
                opacity: 0,
                zIndex: b.options.zIndex - 2
            }, b.options.speed, b.options.easing) : (b.applyTransition(a), b.$slides.eq(a).css({
                opacity: 0,
                zIndex: b.options.zIndex - 2
            }))
        }, b.prototype.filterSlides = b.prototype.slickFilter = function(a) {
            var b = this;
            null !== a && (b.$slidesCache = b.$slides, b.unload(), b.$slideTrack.children(this.options.slide).detach(), b.$slidesCache.filter(a).appendTo(b.$slideTrack), b.reinit())
        }, b.prototype.focusHandler = function() {
            var b = this;
            b.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick", "*:not(.slick-arrow)", function(c) {
                c.stopImmediatePropagation();
                var d = a(this);
                setTimeout(function() {
                    b.options.pauseOnFocus && (b.focussed = d.is(":focus"), b.autoPlay())
                }, 0)
            })
        }, b.prototype.getCurrent = b.prototype.slickCurrentSlide = function() {
            var a = this;
            return a.currentSlide
        }, b.prototype.getDotCount = function() {
            var a = this,
                b = 0,
                c = 0,
                d = 0;
            if (a.options.infinite === !0)
                for (; b < a.slideCount;) ++d, b = c + a.options.slidesToScroll, c += a.options.slidesToScroll <= a.options.slidesToShow ? a.options.slidesToScroll : a.options.slidesToShow;
            else if (a.options.centerMode === !0) d = a.slideCount;
            else if (a.options.asNavFor)
                for (; b < a.slideCount;) ++d, b = c + a.options.slidesToScroll, c += a.options.slidesToScroll <= a.options.slidesToShow ? a.options.slidesToScroll : a.options.slidesToShow;
            else d = 1 + Math.ceil((a.slideCount - a.options.slidesToShow) / a.options.slidesToScroll);
            return d - 1
        }, b.prototype.getLeft = function(a) {
            var c, d, f, b = this,
                e = 0;
            return b.slideOffset = 0, d = b.$slides.first().outerHeight(!0), b.options.infinite === !0 ? (b.slideCount > b.options.slidesToShow && (b.slideOffset = b.slideWidth * b.options.slidesToShow * -1, e = d * b.options.slidesToShow * -1), b.slideCount % b.options.slidesToScroll !== 0 && a + b.options.slidesToScroll > b.slideCount && b.slideCount > b.options.slidesToShow && (a > b.slideCount ? (b.slideOffset = (b.options.slidesToShow - (a - b.slideCount)) * b.slideWidth * -1, e = (b.options.slidesToShow - (a - b.slideCount)) * d * -1) : (b.slideOffset = b.slideCount % b.options.slidesToScroll * b.slideWidth * -1, e = b.slideCount % b.options.slidesToScroll * d * -1))) : a + b.options.slidesToShow > b.slideCount && (b.slideOffset = (a + b.options.slidesToShow - b.slideCount) * b.slideWidth, e = (a + b.options.slidesToShow - b.slideCount) * d), b.slideCount <= b.options.slidesToShow && (b.slideOffset = 0, e = 0), b.options.centerMode === !0 && b.options.infinite === !0 ? b.slideOffset += b.slideWidth * Math.floor(b.options.slidesToShow / 2) - b.slideWidth : b.options.centerMode === !0 && (b.slideOffset = 0, b.slideOffset += b.slideWidth * Math.floor(b.options.slidesToShow / 2)), c = b.options.vertical === !1 ? a * b.slideWidth * -1 + b.slideOffset : a * d * -1 + e, b.options.variableWidth === !0 && (f = b.slideCount <= b.options.slidesToShow || b.options.infinite === !1 ? b.$slideTrack.children(".slick-slide").eq(a) : b.$slideTrack.children(".slick-slide").eq(a + b.options.slidesToShow), c = b.options.rtl === !0 ? f[0] ? -1 * (b.$slideTrack.width() - f[0].offsetLeft - f.width()) : 0 : f[0] ? -1 * f[0].offsetLeft : 0, b.options.centerMode === !0 && (f = b.slideCount <= b.options.slidesToShow || b.options.infinite === !1 ? b.$slideTrack.children(".slick-slide").eq(a) : b.$slideTrack.children(".slick-slide").eq(a + b.options.slidesToShow + 1), c = b.options.rtl === !0 ? f[0] ? -1 * (b.$slideTrack.width() - f[0].offsetLeft - f.width()) : 0 : f[0] ? -1 * f[0].offsetLeft : 0, c += (b.$list.width() - f.outerWidth()) / 2)), c
        }, b.prototype.getOption = b.prototype.slickGetOption = function(a) {
            var b = this;
            return b.options[a]
        }, b.prototype.getNavigableIndexes = function() {
            var e, a = this,
                b = 0,
                c = 0,
                d = [];
            for (a.options.infinite === !1 ? e = a.slideCount : (b = -1 * a.options.slidesToScroll, c = -1 * a.options.slidesToScroll, e = 2 * a.slideCount); e > b;) d.push(b), b = c + a.options.slidesToScroll, c += a.options.slidesToScroll <= a.options.slidesToShow ? a.options.slidesToScroll : a.options.slidesToShow;
            return d
        }, b.prototype.getSlick = function() {
            return this
        }, b.prototype.getSlideCount = function() {
            var c, d, e, b = this;
            return e = b.options.centerMode === !0 ? b.slideWidth * Math.floor(b.options.slidesToShow / 2) : 0, b.options.swipeToSlide === !0 ? (b.$slideTrack.find(".slick-slide").each(function(c, f) {
                return f.offsetLeft - e + a(f).outerWidth() / 2 > -1 * b.swipeLeft ? (d = f, !1) : void 0
            }), c = Math.abs(a(d).attr("data-slick-index") - b.currentSlide) || 1) : b.options.slidesToScroll
        }, b.prototype.goTo = b.prototype.slickGoTo = function(a, b) {
            var c = this;
            c.changeSlide({
                data: {
                    message: "index",
                    index: parseInt(a)
                }
            }, b)
        }, b.prototype.init = function(b) {
            var c = this;
            a(c.$slider).hasClass("slick-initialized") || (a(c.$slider).addClass("slick-initialized"), c.buildRows(), c.buildOut(), c.setProps(), c.startLoad(), c.loadSlider(), c.initializeEvents(), c.updateArrows(), c.updateDots(), c.checkResponsive(!0), c.focusHandler()), b && c.$slider.trigger("init", [c]), c.options.accessibility === !0 && c.initADA(), c.options.autoplay && (c.paused = !1, c.autoPlay())
        }, b.prototype.initADA = function() {
            var b = this;
            b.$slides.add(b.$slideTrack.find(".slick-cloned")).attr({
                "aria-hidden": "true",
                tabindex: "-1"
            }).find("a, input, button, select").attr({
                tabindex: "-1"
            }), b.$slideTrack.attr("role", "listbox"), b.$slides.not(b.$slideTrack.find(".slick-cloned")).each(function(c) {
                a(this).attr({
                    role: "option",
                    "aria-describedby": "slick-slide" + b.instanceUid + c
                })
            }), null !== b.$dots && b.$dots.attr("role", "tablist").find("li").each(function(c) {
                a(this).attr({
                    role: "presentation",
                    "aria-selected": "false",
                    "aria-controls": "navigation" + b.instanceUid + c,
                    id: "slick-slide" + b.instanceUid + c
                })
            }).first().attr("aria-selected", "true").end().find("button").attr("role", "button").end().closest("div").attr("role", "toolbar"), b.activateADA()
        }, b.prototype.initArrowEvents = function() {
            var a = this;
            a.options.arrows === !0 && a.slideCount > a.options.slidesToShow && (a.$prevArrow.off("click.slick").on("click.slick", {
                message: "previous"
            }, a.changeSlide), a.$nextArrow.off("click.slick").on("click.slick", {
                message: "next"
            }, a.changeSlide))
        }, b.prototype.initDotEvents = function() {
            var b = this;
            b.options.dots === !0 && b.slideCount > b.options.slidesToShow && a("li", b.$dots).on("click.slick", {
                message: "index"
            }, b.changeSlide), b.options.dots === !0 && b.options.pauseOnDotsHover === !0 && a("li", b.$dots).on("mouseenter.slick", a.proxy(b.interrupt, b, !0)).on("mouseleave.slick", a.proxy(b.interrupt, b, !1))
        }, b.prototype.initSlideEvents = function() {
            var b = this;
            b.options.pauseOnHover && (b.$list.on("mouseenter.slick", a.proxy(b.interrupt, b, !0)), b.$list.on("mouseleave.slick", a.proxy(b.interrupt, b, !1)))
        }, b.prototype.initializeEvents = function() {
            var b = this;
            b.initArrowEvents(), b.initDotEvents(), b.initSlideEvents(), b.$list.on("touchstart.slick mousedown.slick", {
                action: "start"
            }, b.swipeHandler), b.$list.on("touchmove.slick mousemove.slick", {
                action: "move"
            }, b.swipeHandler), b.$list.on("touchend.slick mouseup.slick", {
                action: "end"
            }, b.swipeHandler), b.$list.on("touchcancel.slick mouseleave.slick", {
                action: "end"
            }, b.swipeHandler), b.$list.on("click.slick", b.clickHandler), a(document).on(b.visibilityChange, a.proxy(b.visibility, b)), b.options.accessibility === !0 && b.$list.on("keydown.slick", b.keyHandler), b.options.focusOnSelect === !0 && a(b.$slideTrack).children().on("click.slick", b.selectHandler), a(window).on("orientationchange.slick.slick-" + b.instanceUid, a.proxy(b.orientationChange, b)), a(window).on("resize.slick.slick-" + b.instanceUid, a.proxy(b.resize, b)), a("[draggable!=true]", b.$slideTrack).on("dragstart", b.preventDefault), a(window).on("load.slick.slick-" + b.instanceUid, b.setPosition), a(document).on("ready.slick.slick-" + b.instanceUid, b.setPosition)
        }, b.prototype.initUI = function() {
            var a = this;
            a.options.arrows === !0 && a.slideCount > a.options.slidesToShow && (a.$prevArrow.show(), a.$nextArrow.show()), a.options.dots === !0 && a.slideCount > a.options.slidesToShow && a.$dots.show()
        }, b.prototype.keyHandler = function(a) {
            var b = this;
            a.target.tagName.match("TEXTAREA|INPUT|SELECT") || (37 === a.keyCode && b.options.accessibility === !0 ? b.changeSlide({
                data: {
                    message: b.options.rtl === !0 ? "next" : "previous"
                }
            }) : 39 === a.keyCode && b.options.accessibility === !0 && b.changeSlide({
                data: {
                    message: b.options.rtl === !0 ? "previous" : "next"
                }
            }))
        }, b.prototype.lazyLoad = function() {
            function g(c) {
                a("img[data-lazy]", c).each(function() {
                    var c = a(this),
                        d = a(this).attr("data-lazy"),
                        e = document.createElement("img");
                    e.onload = function() {
                        c.animate({
                            opacity: 0
                        }, 100, function() {
                            c.attr("src", d).animate({
                                opacity: 1
                            }, 200, function() {
                                c.removeAttr("data-lazy").removeClass("slick-loading")
                            }), b.$slider.trigger("lazyLoaded", [b, c, d])
                        })
                    }, e.onerror = function() {
                        c.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), b.$slider.trigger("lazyLoadError", [b, c, d])
                    }, e.src = d
                })
            }
            var c, d, e, f, b = this;
            b.options.centerMode === !0 ? b.options.infinite === !0 ? (e = b.currentSlide + (b.options.slidesToShow / 2 + 1), f = e + b.options.slidesToShow + 2) : (e = Math.max(0, b.currentSlide - (b.options.slidesToShow / 2 + 1)), f = 2 + (b.options.slidesToShow / 2 + 1) + b.currentSlide) : (e = b.options.infinite ? b.options.slidesToShow + b.currentSlide : b.currentSlide, f = Math.ceil(e + b.options.slidesToShow), b.options.fade === !0 && (e > 0 && e--, f <= b.slideCount && f++)), c = b.$slider.find(".slick-slide").slice(e, f), g(c), b.slideCount <= b.options.slidesToShow ? (d = b.$slider.find(".slick-slide"), g(d)) : b.currentSlide >= b.slideCount - b.options.slidesToShow ? (d = b.$slider.find(".slick-cloned").slice(0, b.options.slidesToShow), g(d)) : 0 === b.currentSlide && (d = b.$slider.find(".slick-cloned").slice(-1 * b.options.slidesToShow), g(d))
        }, b.prototype.loadSlider = function() {
            var a = this;
            a.setPosition(), a.$slideTrack.css({
                opacity: 1
            }), a.$slider.removeClass("slick-loading"), a.initUI(), "progressive" === a.options.lazyLoad && a.progressiveLazyLoad()
        }, b.prototype.next = b.prototype.slickNext = function() {
            var a = this;
            a.changeSlide({
                data: {
                    message: "next"
                }
            })
        }, b.prototype.orientationChange = function() {
            var a = this;
            a.checkResponsive(), a.setPosition()
        }, b.prototype.pause = b.prototype.slickPause = function() {
            var a = this;
            a.autoPlayClear(), a.paused = !0
        }, b.prototype.play = b.prototype.slickPlay = function() {
            var a = this;
            a.autoPlay(), a.options.autoplay = !0, a.paused = !1, a.focussed = !1, a.interrupted = !1
        }, b.prototype.postSlide = function(a) {
            var b = this;
            b.unslicked || (b.$slider.trigger("afterChange", [b, a]), b.animating = !1, b.setPosition(), b.swipeLeft = null, b.options.autoplay && b.autoPlay(), b.options.accessibility === !0 && b.initADA())
        }, b.prototype.prev = b.prototype.slickPrev = function() {
            var a = this;
            a.changeSlide({
                data: {
                    message: "previous"
                }
            })
        }, b.prototype.preventDefault = function(a) {
            a.preventDefault()
        }, b.prototype.progressiveLazyLoad = function(b) {
            b = b || 1;
            var e, f, g, c = this,
                d = a("img[data-lazy]", c.$slider);
            d.length ? (e = d.first(), f = e.attr("data-lazy"), g = document.createElement("img"), g.onload = function() {
                e.attr("src", f).removeAttr("data-lazy").removeClass("slick-loading"), c.options.adaptiveHeight === !0 && c.setPosition(), c.$slider.trigger("lazyLoaded", [c, e, f]), c.progressiveLazyLoad()
            }, g.onerror = function() {
                3 > b ? setTimeout(function() {
                    c.progressiveLazyLoad(b + 1)
                }, 500) : (e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), c.$slider.trigger("lazyLoadError", [c, e, f]), c.progressiveLazyLoad())
            }, g.src = f) : c.$slider.trigger("allImagesLoaded", [c])
        }, b.prototype.refresh = function(b) {
            var d, e, c = this;
            e = c.slideCount - c.options.slidesToShow, !c.options.infinite && c.currentSlide > e && (c.currentSlide = e), c.slideCount <= c.options.slidesToShow && (c.currentSlide = 0), d = c.currentSlide, c.destroy(!0), a.extend(c, c.initials, {
                currentSlide: d
            }), c.init(), b || c.changeSlide({
                data: {
                    message: "index",
                    index: d
                }
            }, !1)
        }, b.prototype.registerBreakpoints = function() {
            var c, d, e, b = this,
                f = b.options.responsive || null;
            if ("array" === a.type(f) && f.length) {
                b.respondTo = b.options.respondTo || "window";
                for (c in f)
                    if (e = b.breakpoints.length - 1, d = f[c].breakpoint, f.hasOwnProperty(c)) {
                        for (; e >= 0;) b.breakpoints[e] && b.breakpoints[e] === d && b.breakpoints.splice(e, 1), e--;
                        b.breakpoints.push(d), b.breakpointSettings[d] = f[c].settings
                    }
                b.breakpoints.sort(function(a, c) {
                    return b.options.mobileFirst ? a - c : c - a
                })
            }
        }, b.prototype.reinit = function() {
            var b = this;
            b.$slides = b.$slideTrack.children(b.options.slide).addClass("slick-slide"), b.slideCount = b.$slides.length, b.currentSlide >= b.slideCount && 0 !== b.currentSlide && (b.currentSlide = b.currentSlide - b.options.slidesToScroll), b.slideCount <= b.options.slidesToShow && (b.currentSlide = 0), b.registerBreakpoints(), b.setProps(), b.setupInfinite(), b.buildArrows(), b.updateArrows(), b.initArrowEvents(), b.buildDots(), b.updateDots(), b.initDotEvents(), b.cleanUpSlideEvents(), b.initSlideEvents(), b.checkResponsive(!1, !0), b.options.focusOnSelect === !0 && a(b.$slideTrack).children().on("click.slick", b.selectHandler), b.setSlideClasses("number" == typeof b.currentSlide ? b.currentSlide : 0), b.setPosition(), b.focusHandler(), b.paused = !b.options.autoplay, b.autoPlay(), b.$slider.trigger("reInit", [b])
        }, b.prototype.resize = function() {
            var b = this;
            a(window).width() !== b.windowWidth && (clearTimeout(b.windowDelay), b.windowDelay = window.setTimeout(function() {
                b.windowWidth = a(window).width(), b.checkResponsive(), b.unslicked || b.setPosition()
            }, 50))
        }, b.prototype.removeSlide = b.prototype.slickRemove = function(a, b, c) {
            var d = this;
            return "boolean" == typeof a ? (b = a, a = b === !0 ? 0 : d.slideCount - 1) : a = b === !0 ? --a : a, !(d.slideCount < 1 || 0 > a || a > d.slideCount - 1) && (d.unload(), c === !0 ? d.$slideTrack.children().remove() : d.$slideTrack.children(this.options.slide).eq(a).remove(), d.$slides = d.$slideTrack.children(this.options.slide), d.$slideTrack.children(this.options.slide).detach(), d.$slideTrack.append(d.$slides), d.$slidesCache = d.$slides, void d.reinit())
        }, b.prototype.setCSS = function(a) {
            var d, e, b = this,
                c = {};
            b.options.rtl === !0 && (a = -a), d = "left" == b.positionProp ? Math.ceil(a) + "px" : "0px", e = "top" == b.positionProp ? Math.ceil(a) + "px" : "0px", c[b.positionProp] = a, b.transformsEnabled === !1 ? b.$slideTrack.css(c) : (c = {}, b.cssTransitions === !1 ? (c[b.animType] = "translate(" + d + ", " + e + ")", b.$slideTrack.css(c)) : (c[b.animType] = "translate3d(" + d + ", " + e + ", 0px)", b.$slideTrack.css(c)))
        }, b.prototype.setDimensions = function() {
            var a = this;
            a.options.vertical === !1 ? a.options.centerMode === !0 && a.$list.css({
                padding: "0px " + a.options.centerPadding
            }) : (a.$list.height(a.$slides.first().outerHeight(!0) * a.options.slidesToShow), a.options.centerMode === !0 && a.$list.css({
                padding: a.options.centerPadding + " 0px"
            })), a.listWidth = a.$list.width(), a.listHeight = a.$list.height(), a.options.vertical === !1 && a.options.variableWidth === !1 ? (a.slideWidth = Math.ceil(a.listWidth / a.options.slidesToShow), a.$slideTrack.width(Math.ceil(a.slideWidth * a.$slideTrack.children(".slick-slide").length))) : a.options.variableWidth === !0 ? a.$slideTrack.width(5e3 * a.slideCount) : (a.slideWidth = Math.ceil(a.listWidth), a.$slideTrack.height(Math.ceil(a.$slides.first().outerHeight(!0) * a.$slideTrack.children(".slick-slide").length)));
            var b = a.$slides.first().outerWidth(!0) - a.$slides.first().width();
            a.options.variableWidth === !1 && a.$slideTrack.children(".slick-slide").width(a.slideWidth - b)
        }, b.prototype.setFade = function() {
            var c, b = this;
            b.$slides.each(function(d, e) {
                c = b.slideWidth * d * -1, b.options.rtl === !0 ? a(e).css({
                    position: "relative",
                    right: c,
                    top: 0,
                    zIndex: b.options.zIndex - 2,
                    opacity: 0
                }) : a(e).css({
                    position: "relative",
                    left: c,
                    top: 0,
                    zIndex: b.options.zIndex - 2,
                    opacity: 0
                })
            }), b.$slides.eq(b.currentSlide).css({
                zIndex: b.options.zIndex - 1,
                opacity: 1
            })
        }, b.prototype.setHeight = function() {
            var a = this;
            if (1 === a.options.slidesToShow && a.options.adaptiveHeight === !0 && a.options.vertical === !1) {
                var b = a.$slides.eq(a.currentSlide).outerHeight(!0);
                a.$list.css("height", b)
            }
        }, b.prototype.setOption = b.prototype.slickSetOption = function() {
            var c, d, e, f, h, b = this,
                g = !1;
            if ("object" === a.type(arguments[0]) ? (e = arguments[0], g = arguments[1], h = "multiple") : "string" === a.type(arguments[0]) && (e = arguments[0], f = arguments[1], g = arguments[2], "responsive" === arguments[0] && "array" === a.type(arguments[1]) ? h = "responsive" : "undefined" != typeof arguments[1] && (h = "single")), "single" === h) b.options[e] = f;
            else if ("multiple" === h) a.each(e, function(a, c) {
                b.options[a] = c
            });
            else if ("responsive" === h)
                for (d in f)
                    if ("array" !== a.type(b.options.responsive)) b.options.responsive = [f[d]];
                    else {
                        for (c = b.options.responsive.length - 1; c >= 0;) b.options.responsive[c].breakpoint === f[d].breakpoint && b.options.responsive.splice(c, 1), c--;
                        b.options.responsive.push(f[d])
                    }
            g && (b.unload(), b.reinit())
        }, b.prototype.setPosition = function() {
            var a = this;
            a.setDimensions(), a.setHeight(), a.options.fade === !1 ? a.setCSS(a.getLeft(a.currentSlide)) : a.setFade(), a.$slider.trigger("setPosition", [a])
        }, b.prototype.setProps = function() {
            var a = this,
                b = document.body.style;
            a.positionProp = a.options.vertical === !0 ? "top" : "left", "top" === a.positionProp ? a.$slider.addClass("slick-vertical") : a.$slider.removeClass("slick-vertical"), (void 0 !== b.WebkitTransition || void 0 !== b.MozTransition || void 0 !== b.msTransition) && a.options.useCSS === !0 && (a.cssTransitions = !0), a.options.fade && ("number" == typeof a.options.zIndex ? a.options.zIndex < 3 && (a.options.zIndex = 3) : a.options.zIndex = a.defaults.zIndex), void 0 !== b.OTransform && (a.animType = "OTransform", a.transformType = "-o-transform", a.transitionType = "OTransition", void 0 === b.perspectiveProperty && void 0 === b.webkitPerspective && (a.animType = !1)), void 0 !== b.MozTransform && (a.animType = "MozTransform", a.transformType = "-moz-transform", a.transitionType = "MozTransition", void 0 === b.perspectiveProperty && void 0 === b.MozPerspective && (a.animType = !1)), void 0 !== b.webkitTransform && (a.animType = "webkitTransform", a.transformType = "-webkit-transform", a.transitionType = "webkitTransition", void 0 === b.perspectiveProperty && void 0 === b.webkitPerspective && (a.animType = !1)), void 0 !== b.msTransform && (a.animType = "msTransform", a.transformType = "-ms-transform", a.transitionType = "msTransition", void 0 === b.msTransform && (a.animType = !1)), void 0 !== b.transform && a.animType !== !1 && (a.animType = "transform", a.transformType = "transform", a.transitionType = "transition"), a.transformsEnabled = a.options.useTransform && null !== a.animType && a.animType !== !1
        }, b.prototype.setSlideClasses = function(a) {
            var c, d, e, f, b = this;
            d = b.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden", "true"), b.$slides.eq(a).addClass("slick-current"), b.options.centerMode === !0 ? (c = Math.floor(b.options.slidesToShow / 2), b.options.infinite === !0 && (a >= c && a <= b.slideCount - 1 - c ? b.$slides.slice(a - c, a + c + 1).addClass("slick-active").attr("aria-hidden", "false") : (e = b.options.slidesToShow + a, d.slice(e - c + 1, e + c + 2).addClass("slick-active").attr("aria-hidden", "false")), 0 === a ? d.eq(d.length - 1 - b.options.slidesToShow).addClass("slick-center") : a === b.slideCount - 1 && d.eq(b.options.slidesToShow).addClass("slick-center")), b.$slides.eq(a).addClass("slick-center")) : a >= 0 && a <= b.slideCount - b.options.slidesToShow ? b.$slides.slice(a, a + b.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false") : d.length <= b.options.slidesToShow ? d.addClass("slick-active").attr("aria-hidden", "false") : (f = b.slideCount % b.options.slidesToShow, e = b.options.infinite === !0 ? b.options.slidesToShow + a : a, b.options.slidesToShow == b.options.slidesToScroll && b.slideCount - a < b.options.slidesToShow ? d.slice(e - (b.options.slidesToShow - f), e + f).addClass("slick-active").attr("aria-hidden", "false") : d.slice(e, e + b.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false")), "ondemand" === b.options.lazyLoad && b.lazyLoad()
        }, b.prototype.setupInfinite = function() {
            var c, d, e, b = this;
            if (b.options.fade === !0 && (b.options.centerMode = !1), b.options.infinite === !0 && b.options.fade === !1 && (d = null, b.slideCount > b.options.slidesToShow)) {
                for (e = b.options.centerMode === !0 ? b.options.slidesToShow + 1 : b.options.slidesToShow, c = b.slideCount; c > b.slideCount - e; c -= 1) d = c - 1, a(b.$slides[d]).clone(!0).attr("id", "").attr("data-slick-index", d - b.slideCount).prependTo(b.$slideTrack).addClass("slick-cloned");
                for (c = 0; e > c; c += 1) d = c, a(b.$slides[d]).clone(!0).attr("id", "").attr("data-slick-index", d + b.slideCount).appendTo(b.$slideTrack).addClass("slick-cloned");
                b.$slideTrack.find(".slick-cloned").find("[id]").each(function() {
                    a(this).attr("id", "")
                })
            }
        }, b.prototype.interrupt = function(a) {
            var b = this;
            a || b.autoPlay(), b.interrupted = a
        }, b.prototype.selectHandler = function(b) {
            var c = this,
                d = a(b.target).is(".slick-slide") ? a(b.target) : a(b.target).parents(".slick-slide"),
                e = parseInt(d.attr("data-slick-index"));
            return e || (e = 0), c.slideCount <= c.options.slidesToShow ? (c.setSlideClasses(e), void c.asNavFor(e)) : void c.slideHandler(e)
        }, b.prototype.slideHandler = function(a, b, c) {
            var d, e, f, g, j, h = null,
                i = this;
            return b = b || !1, i.animating === !0 && i.options.waitForAnimate === !0 || i.options.fade === !0 && i.currentSlide === a || i.slideCount <= i.options.slidesToShow ? void 0 : (b === !1 && i.asNavFor(a), d = a, h = i.getLeft(d), g = i.getLeft(i.currentSlide), i.currentLeft = null === i.swipeLeft ? g : i.swipeLeft, i.options.infinite === !1 && i.options.centerMode === !1 && (0 > a || a > i.getDotCount() * i.options.slidesToScroll) ? void(i.options.fade === !1 && (d = i.currentSlide, c !== !0 ? i.animateSlide(g, function() {
                i.postSlide(d)
            }) : i.postSlide(d))) : i.options.infinite === !1 && i.options.centerMode === !0 && (0 > a || a > i.slideCount - i.options.slidesToScroll) ? void(i.options.fade === !1 && (d = i.currentSlide, c !== !0 ? i.animateSlide(g, function() {
                i.postSlide(d)
            }) : i.postSlide(d))) : (i.options.autoplay && clearInterval(i.autoPlayTimer), e = 0 > d ? i.slideCount % i.options.slidesToScroll !== 0 ? i.slideCount - i.slideCount % i.options.slidesToScroll : i.slideCount + d : d >= i.slideCount ? i.slideCount % i.options.slidesToScroll !== 0 ? 0 : d - i.slideCount : d, i.animating = !0, i.$slider.trigger("beforeChange", [i, i.currentSlide, e]), f = i.currentSlide, i.currentSlide = e, i.setSlideClasses(i.currentSlide), i.options.asNavFor && (j = i.getNavTarget(), j = j.slick("getSlick"), j.slideCount <= j.options.slidesToShow && j.setSlideClasses(i.currentSlide)), i.updateDots(), i.updateArrows(), i.options.fade === !0 ? (c !== !0 ? (i.fadeSlideOut(f), i.fadeSlide(e, function() {
                i.postSlide(e)
            })) : i.postSlide(e), void i.animateHeight()) : void(c !== !0 ? i.animateSlide(h, function() {
                i.postSlide(e)
            }) : i.postSlide(e))))
        }, b.prototype.startLoad = function() {
            var a = this;
            a.options.arrows === !0 && a.slideCount > a.options.slidesToShow && (a.$prevArrow.hide(), a.$nextArrow.hide()), a.options.dots === !0 && a.slideCount > a.options.slidesToShow && a.$dots.hide(), a.$slider.addClass("slick-loading")
        }, b.prototype.swipeDirection = function() {
            var a, b, c, d, e = this;
            return a = e.touchObject.startX - e.touchObject.curX, b = e.touchObject.startY - e.touchObject.curY, c = Math.atan2(b, a), d = Math.round(180 * c / Math.PI), 0 > d && (d = 360 - Math.abs(d)), 45 >= d && d >= 0 ? e.options.rtl === !1 ? "left" : "right" : 360 >= d && d >= 315 ? e.options.rtl === !1 ? "left" : "right" : d >= 135 && 225 >= d ? e.options.rtl === !1 ? "right" : "left" : e.options.verticalSwiping === !0 ? d >= 35 && 135 >= d ? "down" : "up" : "vertical"
        }, b.prototype.swipeEnd = function(a) {
            var c, d, b = this;
            if (b.dragging = !1, b.interrupted = !1, b.shouldClick = !(b.touchObject.swipeLength > 10), void 0 === b.touchObject.curX) return !1;
            if (b.touchObject.edgeHit === !0 && b.$slider.trigger("edge", [b, b.swipeDirection()]), b.touchObject.swipeLength >= b.touchObject.minSwipe) {
                switch (d = b.swipeDirection()) {
                    case "left":
                    case "down":
                        c = b.options.swipeToSlide ? b.checkNavigable(b.currentSlide + b.getSlideCount()) : b.currentSlide + b.getSlideCount(), b.currentDirection = 0;
                        break;
                    case "right":
                    case "up":
                        c = b.options.swipeToSlide ? b.checkNavigable(b.currentSlide - b.getSlideCount()) : b.currentSlide - b.getSlideCount(), b.currentDirection = 1
                }
                "vertical" != d && (b.slideHandler(c), b.touchObject = {}, b.$slider.trigger("swipe", [b, d]))
            } else b.touchObject.startX !== b.touchObject.curX && (b.slideHandler(b.currentSlide), b.touchObject = {})
        }, b.prototype.swipeHandler = function(a) {
            var b = this;
            if (!(b.options.swipe === !1 || "ontouchend" in document && b.options.swipe === !1 || b.options.draggable === !1 && -1 !== a.type.indexOf("mouse"))) switch (b.touchObject.fingerCount = a.originalEvent && void 0 !== a.originalEvent.touches ? a.originalEvent.touches.length : 1, b.touchObject.minSwipe = b.listWidth / b.options.touchThreshold, b.options.verticalSwiping === !0 && (b.touchObject.minSwipe = b.listHeight / b.options.touchThreshold), a.data.action) {
                case "start":
                    b.swipeStart(a);
                    break;
                case "move":
                    b.swipeMove(a);
                    break;
                case "end":
                    b.swipeEnd(a)
            }
        }, b.prototype.swipeMove = function(a) {
            var d, e, f, g, h, b = this;
            return h = void 0 !== a.originalEvent ? a.originalEvent.touches : null, !(!b.dragging || h && 1 !== h.length) && (d = b.getLeft(b.currentSlide), b.touchObject.curX = void 0 !== h ? h[0].pageX : a.clientX, b.touchObject.curY = void 0 !== h ? h[0].pageY : a.clientY, b.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(b.touchObject.curX - b.touchObject.startX, 2))), b.options.verticalSwiping === !0 && (b.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(b.touchObject.curY - b.touchObject.startY, 2)))), e = b.swipeDirection(), "vertical" !== e ? (void 0 !== a.originalEvent && b.touchObject.swipeLength > 4 && a.preventDefault(), g = (b.options.rtl === !1 ? 1 : -1) * (b.touchObject.curX > b.touchObject.startX ? 1 : -1), b.options.verticalSwiping === !0 && (g = b.touchObject.curY > b.touchObject.startY ? 1 : -1), f = b.touchObject.swipeLength, b.touchObject.edgeHit = !1, b.options.infinite === !1 && (0 === b.currentSlide && "right" === e || b.currentSlide >= b.getDotCount() && "left" === e) && (f = b.touchObject.swipeLength * b.options.edgeFriction, b.touchObject.edgeHit = !0), b.options.vertical === !1 ? b.swipeLeft = d + f * g : b.swipeLeft = d + f * (b.$list.height() / b.listWidth) * g, b.options.verticalSwiping === !0 && (b.swipeLeft = d + f * g), b.options.fade !== !0 && b.options.touchMove !== !1 && (b.animating === !0 ? (b.swipeLeft = null, !1) : void b.setCSS(b.swipeLeft))) : void 0)
        }, b.prototype.swipeStart = function(a) {
            var c, b = this;
            return b.interrupted = !0, 1 !== b.touchObject.fingerCount || b.slideCount <= b.options.slidesToShow ? (b.touchObject = {}, !1) : (void 0 !== a.originalEvent && void 0 !== a.originalEvent.touches && (c = a.originalEvent.touches[0]), b.touchObject.startX = b.touchObject.curX = void 0 !== c ? c.pageX : a.clientX, b.touchObject.startY = b.touchObject.curY = void 0 !== c ? c.pageY : a.clientY, void(b.dragging = !0))
        }, b.prototype.unfilterSlides = b.prototype.slickUnfilter = function() {
            var a = this;
            null !== a.$slidesCache && (a.unload(), a.$slideTrack.children(this.options.slide).detach(), a.$slidesCache.appendTo(a.$slideTrack), a.reinit())
        }, b.prototype.unload = function() {
            var b = this;
            a(".slick-cloned", b.$slider).remove(), b.$dots && b.$dots.remove(), b.$prevArrow && b.htmlExpr.test(b.options.prevArrow) && b.$prevArrow.remove(), b.$nextArrow && b.htmlExpr.test(b.options.nextArrow) && b.$nextArrow.remove(), b.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden", "true").css("width", "")
        }, b.prototype.unslick = function(a) {
            var b = this;
            b.$slider.trigger("unslick", [b, a]), b.destroy()
        }, b.prototype.updateArrows = function() {
            var b, a = this;
            b = Math.floor(a.options.slidesToShow / 2), a.options.arrows === !0 && a.slideCount > a.options.slidesToShow && !a.options.infinite && (a.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), a.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), 0 === a.currentSlide ? (a.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true"), a.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : a.currentSlide >= a.slideCount - a.options.slidesToShow && a.options.centerMode === !1 ? (a.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), a.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : a.currentSlide >= a.slideCount - 1 && a.options.centerMode === !0 && (a.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), a.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")))
        }, b.prototype.updateDots = function() {
            var a = this;
            null !== a.$dots && (a.$dots.find("li").removeClass("slick-active").attr("aria-hidden", "true"), a.$dots.find("li").eq(Math.floor(a.currentSlide / a.options.slidesToScroll)).addClass("slick-active").attr("aria-hidden", "false"))
        }, b.prototype.visibility = function() {
            var a = this;
            a.options.autoplay && (document[a.hidden] ? a.interrupted = !0 : a.interrupted = !1)
        }, a.fn.slick = function() {
            var f, g, a = this,
                c = arguments[0],
                d = Array.prototype.slice.call(arguments, 1),
                e = a.length;
            for (f = 0; e > f; f++)
                if ("object" == typeof c || "undefined" == typeof c ? a[f].slick = new b(a[f], c) : g = a[f].slick[c].apply(a[f].slick, d), "undefined" != typeof g) return g;
            return a
        }
    }),
    function(root, factory) {
        "use strict";
        "function" == typeof define && define.amd ? define([], factory) : "object" == typeof exports ? module.exports = factory() : root.viewportUnitsBuggyfill = factory()
    }(this, function() {
        "use strict";

        function debounce(func, wait) {
            var timeout;
            return function() {
                var context = this,
                    args = arguments,
                    callback = function() {
                        func.apply(context, args)
                    };
                clearTimeout(timeout), timeout = setTimeout(callback, wait)
            }
        }

        function inIframe() {
            try {
                return window.self !== window.top
            } catch (e) {
                return !0
            }
        }

        function initialize(initOptions) {
            if (!initialized) {
                if (initOptions === !0 && (initOptions = {
                        force: !0
                    }), options = initOptions || {}, options.isMobileSafari = isMobileSafari, options.isBadStockAndroid = isBadStockAndroid, !options.ignoreVmax || options.force || isOldIE || (isBuggyIE = !1), isOldIE || !options.force && !isMobileSafari && !isBuggyIE && !isBadStockAndroid && !isOperaMini && (!options.hacks || !options.hacks.required(options))) return window.console && isOldIE && console.info("viewport-units-buggyfill requires a proper CSSOM and basic viewport unit support, which are not available in IE8 and below"), {
                    init: function() {}
                };
                window.dispatchEvent(new CustomEvent("viewport-units-buggyfill-init")), options.hacks && options.hacks.initialize(options), initialized = !0, styleNode = document.createElement("style"), styleNode.id = "patched-viewport", document.head.appendChild(styleNode), importCrossOriginLinks(function() {
                    var _refresh = debounce(refresh, options.refreshDebounceWait || 100);
                    window.addEventListener("orientationchange", _refresh, !0), window.addEventListener("pageshow", _refresh, !0), (options.force || isBuggyIE || inIframe()) && (window.addEventListener("resize", _refresh, !0), options._listeningToResize = !0), options.hacks && options.hacks.initializeEvents(options, refresh, _refresh), refresh()
                })
            }
        }

        function updateStyles() {
            styleNode.textContent = getReplacedViewportUnits(), styleNode.parentNode.appendChild(styleNode), window.dispatchEvent(new CustomEvent("viewport-units-buggyfill-style"))
        }

        function refresh() {
            initialized && (findProperties(), setTimeout(function() {
                updateStyles()
            }, 1))
        }

        function processStylesheet(ss) {
            try {
                if (!ss.cssRules) return
            } catch (e) {
                if ("SecurityError" !== e.name) throw e;
                return
            }
            for (var rules = [], i = 0; i < ss.cssRules.length; i++) {
                var rule = ss.cssRules[i];
                rules.push(rule)
            }
            return rules
        }

        function findProperties() {
            return declarations = [], forEach.call(document.styleSheets, function(sheet) {
                var cssRules = processStylesheet(sheet);
                cssRules && "patched-viewport" !== sheet.ownerNode.id && "ignore" !== sheet.ownerNode.getAttribute("data-viewport-units-buggyfill") && (sheet.media && sheet.media.mediaText && window.matchMedia && !window.matchMedia(sheet.media.mediaText).matches || forEach.call(cssRules, findDeclarations))
            }), declarations
        }

        function findDeclarations(rule) {
            if (7 === rule.type) {
                var value;
                try {
                    value = rule.cssText
                } catch (e) {
                    return
                }
                return viewportUnitExpression.lastIndex = 0, void(viewportUnitExpression.test(value) && (declarations.push([rule, null, value]), options.hacks && options.hacks.findDeclarations(declarations, rule, null, value)))
            }
            if (!rule.style) {
                if (!rule.cssRules) return;
                return void forEach.call(rule.cssRules, function(_rule) {
                    findDeclarations(_rule)
                })
            }
            forEach.call(rule.style, function(name) {
                var value = rule.style.getPropertyValue(name);
                rule.style.getPropertyPriority(name) && (value += " !important"), viewportUnitExpression.lastIndex = 0, viewportUnitExpression.test(value) && (declarations.push([rule, name, value]), options.hacks && options.hacks.findDeclarations(declarations, rule, name, value))
            })
        }

        function getReplacedViewportUnits() {
            dimensions = getViewport();
            var open, close, css = [],
                buffer = [];
            return declarations.forEach(function(item) {
                var _item = overwriteDeclaration.apply(null, item),
                    _open = _item.selector.length ? _item.selector.join(" {\n") + " {\n" : "",
                    _close = new Array(_item.selector.length + 1).join("\n}");
                return _open && _open === open ? (_open && !open && (open = _open, close = _close), void buffer.push(_item.content)) : (buffer.length && (css.push(open + buffer.join("\n") + close), buffer.length = 0), void(_open ? (open = _open, close = _close, buffer.push(_item.content)) : (css.push(_item.content), open = null, close = null)))
            }), buffer.length && css.push(open + buffer.join("\n") + close), isOperaMini && css.push("* { content: normal !important; }"), css.join("\n\n")
        }

        function overwriteDeclaration(rule, name, value) {
            var _value, _selectors = [];
            _value = value.replace(viewportUnitExpression, replaceValues), options.hacks && (_value = options.hacks.overwriteDeclaration(rule, name, _value)), name && (_selectors.push(rule.selectorText), _value = name + ": " + _value + ";");
            for (var _rule = rule.parentRule; _rule;) _selectors.unshift("@media " + _rule.media.mediaText), _rule = _rule.parentRule;
            return {
                selector: _selectors,
                content: _value
            }
        }

        function replaceValues(match, number, unit) {
            var _base = dimensions[unit],
                _number = parseFloat(number) / 100;
            return _number * _base + "px"
        }

        function getViewport() {
            var vh = window.innerHeight,
                vw = window.innerWidth;
            return {
                vh: vh,
                vw: vw,
                vmax: Math.max(vw, vh),
                vmin: Math.min(vw, vh)
            }
        }

        function importCrossOriginLinks(next) {
            var _waiting = 0,
                decrease = function() {
                    _waiting--, _waiting || next()
                };
            forEach.call(document.styleSheets, function(sheet) {
                sheet.href && origin(sheet.href) !== origin(location.href) && "ignore" !== sheet.ownerNode.getAttribute("data-viewport-units-buggyfill") && (_waiting++, convertLinkToStyle(sheet.ownerNode, decrease))
            }), _waiting || next()
        }

        function origin(url) {
            return url.slice(0, url.indexOf("/", url.indexOf("://") + 3))
        }

        function convertLinkToStyle(link, next) {
            getCors(link.href, function() {
                var style = document.createElement("style");
                style.media = link.media, style.setAttribute("data-href", link.href), style.textContent = this.responseText, link.parentNode.replaceChild(style, link), next()
            }, next)
        }

        function getCors(url, success, error) {
            var xhr = new XMLHttpRequest;
            if ("withCredentials" in xhr) xhr.open("GET", url, !0);
            else {
                if ("undefined" == typeof XDomainRequest) throw new Error("cross-domain XHR not supported");
                xhr = new XDomainRequest, xhr.open("GET", url)
            }
            return xhr.onload = success, xhr.onerror = error, xhr.send(), xhr
        }
        var options, dimensions, declarations, styleNode, initialized = !1,
            userAgent = window.navigator.userAgent,
            viewportUnitExpression = /([+-]?[0-9.]+)(vh|vw|vmin|vmax)/g,
            forEach = [].forEach,
            isBuggyIE = /MSIE [0-9]\./i.test(userAgent),
            isOldIE = /MSIE [0-8]\./i.test(userAgent),
            isOperaMini = userAgent.indexOf("Opera Mini") > -1,
            isMobileSafari = /(iPhone|iPod|iPad).+AppleWebKit/i.test(userAgent) && function() {
                var iOSversion = userAgent.match(/OS (\d)/);
                return iOSversion && iOSversion.length > 1 && parseInt(iOSversion[1]) < 10
            }(),
            isBadStockAndroid = function() {
                var isAndroid = userAgent.indexOf(" Android ") > -1;
                if (!isAndroid) return !1;
                var isStockAndroid = userAgent.indexOf("Version/") > -1;
                if (!isStockAndroid) return !1;
                var versionNumber = parseFloat((userAgent.match("Android ([0-9.]+)") || [])[1]);
                return versionNumber <= 4.4
            }();
        isBuggyIE || (isBuggyIE = !!navigator.userAgent.match(/Trident.*rv[ :]*1[01]\.| Edge\/1\d\./));
        try {
            new CustomEvent("test")
        } catch (e) {
            var CustomEvent = function(event, params) {
                var evt;
                return params = params || {
                    bubbles: !1,
                    cancelable: !1,
                    detail: void 0
                }, evt = document.createEvent("CustomEvent"), evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail), evt
            };
            CustomEvent.prototype = window.Event.prototype, window.CustomEvent = CustomEvent
        }
        return {
            version: "0.6.0",
            findProperties: findProperties,
            getCss: getReplacedViewportUnits,
            init: initialize,
            refresh: refresh
        }
    });
var outdatedBrowser = function(t) {
    function o(t) {
        s.style.opacity = t / 100, s.style.filter = "alpha(opacity=" + t + ")"
    }

    function e(t) {
        o(t), 1 == t && (s.style.display = "block"), 100 == t && (u = !0)
    }

    function r() {
        var t = document.getElementById("btnCloseUpdateBrowser"),
            o = document.getElementById("btnUpdateBrowser");
        s.style.backgroundColor = bkgColor, s.style.color = txtColor, s.children[0].style.color = txtColor, s.children[1].style.color = txtColor, o.style.color = txtColor, o.style.borderColor && (o.style.borderColor = txtColor), t.style.color = txtColor, t.onmousedown = function() {
            return s.style.display = "none", !1
        }, o.onmouseover = function() {
            this.style.color = bkgColor, this.style.backgroundColor = txtColor
        }, o.onmouseout = function() {
            this.style.color = txtColor, this.style.backgroundColor = bkgColor
        }
    }

    function l() {
        var t = !1;
        if (window.XMLHttpRequest) t = new XMLHttpRequest;
        else if (window.ActiveXObject) try {
            t = new ActiveXObject("Msxml2.XMLHTTP")
        } catch (o) {
            try {
                t = new ActiveXObject("Microsoft.XMLHTTP")
            } catch (o) {
                t = !1
            }
        }
        return t
    }

    function a(t) {
        var o = l();
        return o && (o.onreadystatechange = function() {
            n(o)
        }, o.open("GET", t, !0), o.send(null)), !1
    }

    function n(t) {
        var o = document.getElementById("outdated");
        return 4 == t.readyState && (o.innerHTML = 200 == t.status || 304 == t.status ? t.responseText : d, r()), !1
    }
    var s = document.getElementById("outdated");
    this.defaultOpts = {
        bgColor: "#f25648",
        color: "#ffffff",
        lowerThan: "transform",
        languagePath: "../outdatedbrowser/lang/en.html"
    }, t ? ("IE8" == t.lowerThan || "borderSpacing" == t.lowerThan ? t.lowerThan = "borderSpacing" : "IE9" == t.lowerThan || "boxShadow" == t.lowerThan ? t.lowerThan = "boxShadow" : "IE10" == t.lowerThan || "transform" == t.lowerThan || "" == t.lowerThan || "undefined" == typeof t.lowerThan ? t.lowerThan = "transform" : ("IE11" == t.lowerThan || "borderImage" == t.lowerThan) && (t.lowerThan = "borderImage"), this.defaultOpts.bgColor = t.bgColor, this.defaultOpts.color = t.color, this.defaultOpts.lowerThan = t.lowerThan, this.defaultOpts.languagePath = t.languagePath, bkgColor = this.defaultOpts.bgColor, txtColor = this.defaultOpts.color, cssProp = this.defaultOpts.lowerThan, languagePath = this.defaultOpts.languagePath) : (bkgColor = this.defaultOpts.bgColor, txtColor = this.defaultOpts.color, cssProp = this.defaultOpts.lowerThan, languagePath = this.defaultOpts.languagePath);
    var u = !0,
        i = function() {
            var t = document.createElement("div"),
                o = "Khtml Ms O Moz Webkit".split(" "),
                e = o.length;
            return function(r) {
                if (r in t.style) return !0;
                for (r = r.replace(/^[a-z]/, function(t) {
                        return t.toUpperCase()
                    }); e--;)
                    if (o[e] + r in t.style) return !0;
                return !1
            }
        }();
    if (!i("" + cssProp)) {
        if (u && "1" !== s.style.opacity) {
            u = !1;
            for (var c = 1; 100 >= c; c++) setTimeout(function(t) {
                return function() {
                    e(t)
                }
            }(c), 8 * c)
        }
        " " === languagePath || 0 == languagePath.length ? r() : a(languagePath);
        var d = '<h6>Your browser is out-of-date!</h6><p>Update your browser to view this website correctly. <a id="btnUpdateBrowser" href="http://outdatedbrowser.com/">Update my browser now </a></p><p class="last"><a href="#" id="btnCloseUpdateBrowser" title="Close">&times;</a></p>'
    }
};
$.event.special.clickTouchEvent = {
        setup: function() {
            var a = "ontouchend" in document ? "touchend" : "click";
            $(this).on(a + ".myclickTouchEvent", function(b) {
                b.type = "clickTouchEvent", $.event.handle.apply(this, [b])
            })
        },
        teardown: function() {
            $(this).off(".clickTouchEvent")
        }
    },
    function($) {
        function b(l) {
            function e() {
                l ? h.removeData(l) : f && delete a[f]
            }

            function o() {
                k.id = setTimeout(function() {
                    k.fn()
                }, j)
            }
            var h, m = this,
                k = {},
                g = l ? $.fn : $,
                n = arguments,
                i = 4,
                f = n[1],
                j = n[2],
                p = n[3];
            if ("string" != typeof f && (i--, f = l = 0, j = n[1], p = n[2]), l ? (h = m.eq(0), h.data(l, k = h.data(l) || {})) : f && (k = a[f] || (a[f] = {})), k.id && clearTimeout(k.id), delete k.id, p) k.fn = function(q) {
                "string" == typeof p && (p = g[p]), p.apply(m, d.call(n, i)) !== !0 || q ? e() : o()
            }, o();
            else {
                if (k.fn) return void 0 === j ? e() : k.fn(j === !1), !0;
                e()
            }
        }
        var a = {},
            c = "doTimeout",
            d = Array.prototype.slice;
        $[c] = function() {
            return b.apply(window, [0].concat(d.call(arguments)))
        }, $.fn[c] = function() {
            var f = d.call(arguments),
                e = b.apply(this, [c + f[0]].concat(f));
            return "number" == typeof f[0] || "number" == typeof f[1] ? this : e
        }
    }(jQuery),
    function(b, c) {
        var a, $ = b.jQuery || b.Cowboy || (b.Cowboy = {});
        $.throttle = a = function(e, f, j, i) {
            function g() {
                function l() {
                    d = +new Date, j.apply(o, n)
                }

                function k() {
                    h = c
                }
                var o = this,
                    m = +new Date - d,
                    n = arguments;
                i && !h && l(), h && clearTimeout(h), i === c && m > e ? l() : f !== !0 && (h = setTimeout(i ? k : l, i === c ? e - m : e))
            }
            var h, d = 0;
            return "boolean" != typeof f && (i = j, j = f, f = c), $.guid && (g.guid = j.guid = j.guid || $.guid++), g
        }, $.debounce = function(d, e, f) {
            return f === c ? a(d, e, !1) : a(d, f, e !== !1)
        }
    }(this),
    function($, c, b) {
        function a(g, e) {
            function f(i) {
                $(d).each(function() {
                    var j = $(this);
                    this === i.target || j.has(i.target).length || j.triggerHandler(e, [i.target])
                })
            }
            e = e || g + b;
            var d = $(),
                h = g + "." + e + "-special-event";
            $.event.special[e] = {
                setup: function() {
                    d = d.add(this), 1 === d.length && $(c).bind(h, f)
                },
                teardown: function() {
                    d = d.not(this), 0 === d.length && $(c).unbind(h)
                },
                add: function(i) {
                    var j = i.handler;
                    i.handler = function(l, k) {
                        l.target = k, j.apply(this, arguments)
                    }
                }
            }
        }
        $.map("click dblclick mousemove mousedown mouseup mouseover mouseout change select submit keydown keypress keyup".split(" "), function(d) {
            a(d)
        }), a("focusin", "focus" + b), a("focusout", "blur" + b), $.addOutsideEvent = a
    }(jQuery, document, "outside"),
    function($) {
        $.fn.animatePNG = function(step, frames, speed, loop) {
            var index = 0;
            this.each(function() {
                var $t = $(this),
                    nT = frames;
                $t.doTimeout("loop", speed, function() {
                    if (index++, index == nT) {
                        if (0 == loop) return !1;
                        index = 0
                    }
                    return $t.css("backgroundPosition", "-" + index * step + "px 0px"), !0
                }), null == step && $t.doTimeout("loop")
            })
        }
    }(jQuery),
    function(defaults, $, window, document, undefined) {
        "use strict";
        $.extend({}).fn.extend({
            animateSpriteIMG: function(options) {
                return options = $.extend({}, defaults, options), $(this).each(function() {
                    var $el = $(this),
                        transX = 0,
                        transY = 0,
                        i = 1,
                        j = 1,
                        nTFrames = 1;
                    $el.doTimeout("animation", options.speed, function() {
                        if (i <= options.totalRow)
                            if (j < options.totalColumn) {
                                if (nTFrames >= options.totalFrames && (nTFrames = 1, transX = 0, transY = 0, i = 1, j = 1, !options.loop)) return $el.attr("style", ""), !1;
                                transX += options.widthFrame, $el.css({
                                    transform: "translate3d(-" + transX + "px, -" + transY + "px, 0px)"
                                }), j += 1
                            } else j = 1, i += 1, transY += options.heightFrame, transX = 0;
                        else transX = 0, transY = 0, i = 1, j = 1;
                        return nTFrames += 1, !0
                    }), options.pause && $el.doTimeout("animation"), options.destroy && ($el.doTimeout("animation"), $el.attr("style", ""))
                })
            },
            pause: function(options) {
                var $el = $(this);
                return $el.animateSpriteIMG({
                    pause: !0
                }), $.extend(defaults, options)
            },
            destroy: function(options) {
                var $el = $(this);
                return $el.animateSpriteIMG({
                    destroy: !0
                }), $.extend(defaults, options)
            }
        })
    }({
        widthFrame: 0,
        heightFrame: 0,
        totalFrames: 0,
        totalRow: 1,
        totalColumn: 1,
        speed: 50,
        loop: !1,
        pause: !1,
        play: !1,
        destroy: !1
    }, jQuery, window, document), $(document).on("click", ".js-btn-goto", function() {
        var $this = $(this),
            aux = $this.attr("data-go"),
            $elemento = $("" + aux);
        return goTo($elemento), !1
    }),
    function($) {
        $.fn.hoverIntent = function(handlerIn, handlerOut, selector) {
            var cfg = {
                interval: 100,
                sensitivity: 6,
                timeout: 0
            };
            cfg = "object" == typeof handlerIn ? $.extend(cfg, handlerIn) : $.isFunction(handlerOut) ? $.extend(cfg, {
                over: handlerIn,
                out: handlerOut,
                selector: selector
            }) : $.extend(cfg, {
                over: handlerIn,
                out: handlerIn,
                selector: handlerOut
            });
            var cX, cY, pX, pY, track = function(ev) {
                    cX = ev.pageX, cY = ev.pageY
                },
                compare = function(ev, ob) {
                    return ob.hoverIntent_t = clearTimeout(ob.hoverIntent_t), Math.sqrt((pX - cX) * (pX - cX) + (pY - cY) * (pY - cY)) < cfg.sensitivity ? ($(ob).off("mousemove.hoverIntent", track), ob.hoverIntent_s = !0, cfg.over.apply(ob, [ev])) : (pX = cX, pY = cY, ob.hoverIntent_t = setTimeout(function() {
                        compare(ev, ob)
                    }, cfg.interval), void 0)
                },
                delay = function(ev, ob) {
                    return ob.hoverIntent_t = clearTimeout(ob.hoverIntent_t), ob.hoverIntent_s = !1, cfg.out.apply(ob, [ev])
                },
                handleHover = function(e) {
                    var ev = $.extend({}, e),
                        ob = this;
                    ob.hoverIntent_t && (ob.hoverIntent_t = clearTimeout(ob.hoverIntent_t)), "mouseenter" === e.type ? (pX = ev.pageX, pY = ev.pageY, $(ob).on("mousemove.hoverIntent", track), ob.hoverIntent_s || (ob.hoverIntent_t = setTimeout(function() {
                        compare(ev, ob)
                    }, cfg.interval))) : ($(ob).off("mousemove.hoverIntent", track), ob.hoverIntent_s && (ob.hoverIntent_t = setTimeout(function() {
                        delay(ev, ob)
                    }, cfg.timeout)))
                };
            return this.on({
                "mouseenter.hoverIntent": handleHover,
                "mouseleave.hoverIntent": handleHover
            }, cfg.selector)
        }
    }(jQuery),
    function(root, factory) {
        "function" == typeof define && define.amd ? define(factory) : "object" == typeof module && module.exports ? module.exports = factory() : root.bodymovin = factory()
    }(window, function() {
        function roundValues(t) {
            bm_rnd = t ? Math.round : function(t) {
                return t
            }
        }

        function roundTo2Decimals(t) {
            return Math.round(1e4 * t) / 1e4
        }

        function roundTo3Decimals(t) {
            return Math.round(100 * t) / 100
        }

        function styleDiv(t) {
            t.style.position = "absolute", t.style.top = 0, t.style.left = 0, t.style.display = "block", t.style.transformOrigin = t.style.webkitTransformOrigin = "0 0", t.style.backfaceVisibility = t.style.webkitBackfaceVisibility = "visible", t.style.transformStyle = t.style.webkitTransformStyle = t.style.mozTransformStyle = "preserve-3d"
        }

        function styleUnselectableDiv(t) {
            t.style.userSelect = "none", t.style.MozUserSelect = "none", t.style.webkitUserSelect = "none", t.style.oUserSelect = "none"
        }

        function BMEnterFrameEvent(t, e, s, r) {
            this.type = t, this.currentTime = e, this.totalTime = s, this.direction = 0 > r ? -1 : 1
        }

        function BMCompleteEvent(t, e) {
            this.type = t, this.direction = 0 > e ? -1 : 1
        }

        function BMCompleteLoopEvent(t, e, s, r) {
            this.type = t, this.currentLoop = e, this.totalLoops = s, this.direction = 0 > r ? -1 : 1
        }

        function BMSegmentStartEvent(t, e, s) {
            this.type = t, this.firstFrame = e, this.totalFrames = s
        }

        function BMDestroyEvent(t, e) {
            this.type = t, this.target = e
        }

        function _addEventListener(t, e) {
            this._cbs[t] || (this._cbs[t] = []), this._cbs[t].push(e)
        }

        function _removeEventListener(t, e) {
            if (e) {
                if (this._cbs[t]) {
                    for (var s = 0, r = this._cbs[t].length; r > s;) this._cbs[t][s] === e && (this._cbs[t].splice(s, 1), s -= 1, r -= 1), s += 1;
                    this._cbs[t].length || (this._cbs[t] = null)
                }
            } else this._cbs[t] = null
        }

        function _triggerEvent(t, e) {
            if (this._cbs[t])
                for (var s = this._cbs[t].length, r = 0; s > r; r++) this._cbs[t][r](e)
        }

        function randomString(t, e) {
            void 0 === e && (e = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890");
            var s, r = "";
            for (s = t; s > 0; --s) r += e[Math.round(Math.random() * (e.length - 1))];
            return r
        }

        function HSVtoRGB(t, e, s) {
            var r, i, a, n, o, h, l, p;
            switch (1 === arguments.length && (e = t.s, s = t.v, t = t.h), n = Math.floor(6 * t), o = 6 * t - n, h = s * (1 - e), l = s * (1 - o * e), p = s * (1 - (1 - o) * e), n % 6) {
                case 0:
                    r = s, i = p, a = h;
                    break;
                case 1:
                    r = l, i = s, a = h;
                    break;
                case 2:
                    r = h, i = s, a = p;
                    break;
                case 3:
                    r = h, i = l, a = s;
                    break;
                case 4:
                    r = p, i = h, a = s;
                    break;
                case 5:
                    r = s, i = h, a = l
            }
            return [r, i, a]
        }

        function RGBtoHSV(t, e, s) {
            1 === arguments.length && (e = t.g, s = t.b, t = t.r);
            var r, i = Math.max(t, e, s),
                a = Math.min(t, e, s),
                n = i - a,
                o = 0 === i ? 0 : n / i,
                h = i / 255;
            switch (i) {
                case a:
                    r = 0;
                    break;
                case t:
                    r = e - s + n * (s > e ? 6 : 0), r /= 6 * n;
                    break;
                case e:
                    r = s - t + 2 * n, r /= 6 * n;
                    break;
                case s:
                    r = t - e + 4 * n, r /= 6 * n
            }
            return [r, o, h]
        }

        function addSaturationToRGB(t, e) {
            var s = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
            return s[1] += e, s[1] > 1 ? s[1] = 1 : s[1] <= 0 && (s[1] = 0), HSVtoRGB(s[0], s[1], s[2])
        }

        function addBrightnessToRGB(t, e) {
            var s = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
            return s[2] += e, s[2] > 1 ? s[2] = 1 : s[2] < 0 && (s[2] = 0), HSVtoRGB(s[0], s[1], s[2])
        }

        function addHueToRGB(t, e) {
            var s = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
            return s[0] += e / 360, s[0] > 1 ? s[0] -= 1 : s[0] < 0 && (s[0] += 1), HSVtoRGB(s[0], s[1], s[2])
        }

        function componentToHex(t) {
            var e = t.toString(16);
            return 1 == e.length ? "0" + e : e
        }

        function fillToRgba(t, e) {
            if (!cachedColors[t]) {
                var s = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);
                cachedColors[t] = parseInt(s[1], 16) + "," + parseInt(s[2], 16) + "," + parseInt(s[3], 16)
            }
            return "rgba(" + cachedColors[t] + "," + e + ")"
        }

        function RenderedFrame(t, e) {
            this.tr = t, this.o = e
        }

        function LetterProps(t, e, s, r, i, a) {
            this.o = t, this.sw = e, this.sc = s, this.fc = r, this.m = i, this.props = a
        }

        function iterateDynamicProperties(t) {
            var e, s = this.dynamicProperties;
            for (e = 0; s > e; e += 1) this.dynamicProperties[e].getValue(t)
        }

        function reversePath(t, e) {
            var s, r, i = [],
                a = [],
                n = [],
                o = {},
                h = 0;
            e && (i[0] = t.o[0], a[0] = t.i[0], n[0] = t.v[0], h = 1), r = t.i.length;
            var l = r - 1;
            for (s = h; r > s; s += 1) i.push(t.o[l]), a.push(t.i[l]), n.push(t.v[l]), l -= 1;
            return o.i = i, o.o = a, o.v = n, o
        }

        function Matrix() {}

        function matrixManagerFunction() {
            var t = new Matrix,
                e = function(e, s, r, i, a) {
                    return t.reset().translate(i, a).rotate(e).scale(s, r).toCSS()
                },
                s = function(t) {
                    return e(t.tr.r[2], t.tr.s[0], t.tr.s[1], t.tr.p[0], t.tr.p[1])
                };
            return {
                getMatrix: s
            }
        }

        function createElement(t, e, s) {
            if (!e) {
                var r = Object.create(t.prototype, s),
                    i = {};
                return r && "[object Function]" === i.toString.call(r.init) && r.init(), r
            }
            e.prototype = Object.create(t.prototype), e.prototype.constructor = e, e.prototype._parent = t.prototype
        }

        function extendPrototype(t, e) {
            for (var s in t.prototype) t.prototype.hasOwnProperty(s) && (e.prototype[s] = t.prototype[s])
        }

        function bezFunction() {
            function t(t, e, s, r, i, a) {
                var n = t * r + e * i + s * a - i * r - a * t - s * e;
                return n > -1e-4 && 1e-4 > n
            }

            function e(e, s, r, i, a, n, o, h, l) {
                return t(e, s, i, a, o, h) && t(e, r, i, n, o, l)
            }

            function s(t) {
                this.segmentLength = 0, this.points = new Array(t)
            }

            function r(t, e) {
                this.partialLength = t, this.point = e
            }

            function i(t, e) {
                var s = e.segments,
                    r = s.length,
                    i = bm_floor((r - 1) * t),
                    a = t * e.addedLength,
                    n = 0;
                if (a == s[i].l) return s[i].p;
                for (var o = s[i].l > a ? -1 : 1, h = !0; h;) s[i].l <= a && s[i + 1].l > a ? (n = (a - s[i].l) / (s[i + 1].l - s[i].l), h = !1) : i += o, (0 > i || i >= r - 1) && (h = !1);
                return s[i].p + (s[i + 1].p - s[i].p) * n
            }

            function a() {
                this.pt1 = new Array(2), this.pt2 = new Array(2), this.pt3 = new Array(2), this.pt4 = new Array(2)
            }

            function n(t, e, s, r, n, o, h) {
                var l = new a;
                n = 0 > n ? 0 : n > 1 ? 1 : n;
                var p = i(n, h);
                o = o > 1 ? 1 : o;
                var m, f = i(o, h),
                    d = t.length,
                    c = 1 - p,
                    u = 1 - f;
                for (m = 0; d > m; m += 1) l.pt1[m] = Math.round(1e3 * (c * c * c * t[m] + (p * c * c + c * p * c + c * c * p) * s[m] + (p * p * c + c * p * p + p * c * p) * r[m] + p * p * p * e[m])) / 1e3, l.pt3[m] = Math.round(1e3 * (c * c * u * t[m] + (p * c * u + c * p * u + c * c * f) * s[m] + (p * p * u + c * p * f + p * c * f) * r[m] + p * p * f * e[m])) / 1e3, l.pt4[m] = Math.round(1e3 * (c * u * u * t[m] + (p * u * u + c * f * u + c * u * f) * s[m] + (p * f * u + c * f * f + p * u * f) * r[m] + p * f * f * e[m])) / 1e3, l.pt2[m] = Math.round(1e3 * (u * u * u * t[m] + (f * u * u + u * f * u + u * u * f) * s[m] + (f * f * u + u * f * f + f * u * f) * r[m] + f * f * f * e[m])) / 1e3;
                return l
            }
            var o = (Math, function() {
                    function t(t, e) {
                        this.l = t, this.p = e
                    }
                    return function(e, s, r, i) {
                        var a, n, o, h, l, p, m = defaultCurveSegments,
                            f = 0,
                            d = [],
                            c = [],
                            u = {
                                addedLength: 0,
                                segments: []
                            };
                        for (o = r.length, a = 0; m > a; a += 1) {
                            for (l = a / (m - 1), p = 0, n = 0; o > n; n += 1) h = bm_pow(1 - l, 3) * e[n] + 3 * bm_pow(1 - l, 2) * l * r[n] + 3 * (1 - l) * bm_pow(l, 2) * i[n] + bm_pow(l, 3) * s[n], d[n] = h, null !== c[n] && (p += bm_pow(d[n] - c[n], 2)), c[n] = d[n];
                            p && (p = bm_sqrt(p), f += p), u.segments.push(new t(f, l))
                        }
                        return u.addedLength = f, u
                    }
                }()),
                h = function() {
                    var e = {};
                    return function(i) {
                        var a = i.s,
                            n = i.e,
                            o = i.to,
                            h = i.ti,
                            l = (a.join("_") + "_" + n.join("_") + "_" + o.join("_") + "_" + h.join("_")).replace(/\./g, "p");
                        if (e[l]) return void(i.bezierData = e[l]);
                        var p, m, f, d, c, u, y, g = defaultCurveSegments,
                            v = 0,
                            b = null;
                        2 === a.length && (a[0] != n[0] || a[1] != n[1]) && t(a[0], a[1], n[0], n[1], a[0] + o[0], a[1] + o[1]) && t(a[0], a[1], n[0], n[1], n[0] + h[0], n[1] + h[1]) && (g = 2);
                        var E = new s(g);
                        for (f = o.length, p = 0; g > p; p += 1) {
                            for (y = new Array(f), c = p / (g - 1), u = 0, m = 0; f > m; m += 1) d = bm_pow(1 - c, 3) * a[m] + 3 * bm_pow(1 - c, 2) * c * (a[m] + o[m]) + 3 * (1 - c) * bm_pow(c, 2) * (n[m] + h[m]) + bm_pow(c, 3) * n[m], y[m] = d, null !== b && (u += bm_pow(y[m] - b[m], 2));
                            u = bm_sqrt(u), v += u, E.points[p] = new r(u, y), b = y
                        }
                        E.segmentLength = v, i.bezierData = E, e[l] = E
                    }
                }();
            return {
                getBezierLength: o,
                getNewSegment: n,
                buildBezierData: h,
                pointOnLine2D: t,
                pointOnLine3D: e
            }
        }

        function dataFunctionManager() {
            function t(i, a, o) {
                var h, l, p, m, f, d, c, u, y = i.length;
                for (m = 0; y > m; m += 1)
                    if (h = i[m], "ks" in h && !h.completed) {
                        if (h.completed = !0, h.tt && (i[m - 1].td = h.tt), l = [], p = -1, h.hasMask) {
                            var g = h.masksProperties;
                            for (d = g.length, f = 0; d > f; f += 1)
                                if (g[f].pt.k.i) r(g[f].pt.k);
                                else
                                    for (u = g[f].pt.k.length, c = 0; u > c; c += 1) g[f].pt.k[c].s && r(g[f].pt.k[c].s[0]), g[f].pt.k[c].e && r(g[f].pt.k[c].e[0])
                        }
                        0 === h.ty ? (h.layers = e(h.refId, a), t(h.layers, a, o)) : 4 === h.ty ? s(h.shapes) : 5 == h.ty && n(h, o)
                    }
            }

            function e(t, e) {
                for (var s = 0, r = e.length; r > s;) {
                    if (e[s].id === t) return JSON.parse(JSON.stringify(e[s].layers));
                    s += 1
                }
            }

            function s(t) {
                var e, i, a, n = t.length,
                    o = !1;
                for (e = n - 1; e >= 0; e -= 1)
                    if ("sh" == t[e].ty) {
                        if (t[e].ks.k.i) r(t[e].ks.k);
                        else
                            for (a = t[e].ks.k.length, i = 0; a > i; i += 1) t[e].ks.k[i].s && r(t[e].ks.k[i].s[0]), t[e].ks.k[i].e && r(t[e].ks.k[i].e[0]);
                        o = !0
                    } else "gr" == t[e].ty && s(t[e].it)
            }

            function r(t) {
                var e, s = t.i.length;
                for (e = 0; s > e; e += 1) t.i[e][0] += t.v[e][0], t.i[e][1] += t.v[e][1], t.o[e][0] += t.v[e][0], t.o[e][1] += t.v[e][1]
            }

            function i(t, e) {
                var s = e ? e.split(".") : [100, 100, 100];
                return t[0] > s[0] || !(s[0] > t[0]) && (t[1] > s[1] || !(s[1] > t[1]) && (t[2] > s[2] || !(s[2] > t[2]) && void 0))
            }

            function a(e, s) {
                o(e), t(e.layers, e.assets, s)
            }

            function n(t, e) {
                var s, r, i, a, n, o, h, l = [],
                    p = t.t.d,
                    m = 0,
                    f = t.t.m.g,
                    d = 0,
                    c = 0,
                    u = 0,
                    y = [],
                    g = 0,
                    v = 0,
                    b = e.getFontByName(p.f),
                    E = 0,
                    P = b.fStyle.split(" "),
                    k = "normal",
                    x = "normal";
                for (r = P.length, s = 0; r > s; s += 1) "italic" === P[s].toLowerCase() ? x = "italic" : "bold" === P[s].toLowerCase() ? k = "700" : "black" === P[s].toLowerCase() ? k = "900" : "medium" === P[s].toLowerCase() ? k = "500" : "regular" === P[s].toLowerCase() || "normal" === P[s].toLowerCase() ? k = "400" : ("light" === P[s].toLowerCase() || "thin" === P[s].toLowerCase()) && (k = "200");
                if (p.fWeight = k, p.fStyle = x, r = p.t.length, p.sz) {
                    var S = p.sz[0],
                        C = -1;
                    for (s = 0; r > s; s += 1) i = !1, " " === p.t.charAt(s) ? C = s : 13 === p.t.charCodeAt(s) && (g = 0, i = !0), e.chars ? (h = e.getCharData(p.t.charAt(s), b.fStyle, b.fFamily), E = i ? 0 : h.w * p.s / 100) : E = e.measureText(p.t.charAt(s), p.f, p.s), g + E > S ? (-1 === C ? (p.t = p.t.substr(0, s) + "\r" + p.t.substr(s), r += 1) : (s = C, p.t = p.t.substr(0, s) + "\r" + p.t.substr(s + 1)), C = -1, g = 0) : g += E;
                    r = p.t.length
                }
                for (g = 0, E = 0, s = 0; r > s; s += 1)
                    if (i = !1, " " === p.t.charAt(s) ? a = " " : 13 === p.t.charCodeAt(s) ? (y.push(g), v = g > v ? g : v, g = 0, a = "", i = !0, u += 1) : a = p.t.charAt(s), e.chars ? (h = e.getCharData(p.t.charAt(s), b.fStyle, e.getFontByName(p.f).fFamily), E = i ? 0 : h.w * p.s / 100) : E = e.measureText(a, p.f, p.s), g += E, l.push({
                            l: E,
                            an: E,
                            add: d,
                            n: i,
                            anIndexes: [],
                            val: a,
                            line: u
                        }), 2 == f) {
                        if (d += E, "" == a || " " == a || s == r - 1) {
                            for (("" == a || " " == a) && (d -= E); s >= c;) l[c].an = d, l[c].ind = m, l[c].extra = E, c += 1;
                            m += 1, d = 0
                        }
                    } else if (3 == f) {
                    if (d += E, "" == a || s == r - 1) {
                        for ("" == a && (d -= E); s >= c;) l[c].an = d, l[c].ind = m, l[c].extra = E, c += 1;
                        d = 0, m += 1
                    }
                } else l[m].ind = m, l[m].extra = 0, m += 1;
                if (p.l = l, v = g > v ? g : v, y.push(g), p.sz) p.boxWidth = p.sz[0], t.t.d.justifyOffset = 0;
                else switch (p.boxWidth = v, p.j) {
                    case 1:
                        t.t.d.justifyOffset = -p.boxWidth;
                        break;
                    case 2:
                        t.t.d.justifyOffset = -p.boxWidth / 2;
                        break;
                    default:
                        t.t.d.justifyOffset = 0
                }
                p.lineWidths = y;
                var D = t.t.a;
                o = D.length;
                var M, w, A = [];
                for (n = 0; o > n; n += 1) {
                    for (D[n].a.sc && (p.strokeColorAnim = !0), D[n].a.sw && (p.strokeWidthAnim = !0), (D[n].a.fc || D[n].a.fh || D[n].a.fs || D[n].a.fb) && (p.fillColorAnim = !0), w = 0, M = D[n].s.b, s = 0; r > s; s += 1) l[s].anIndexes[n] = w, (1 == M && "" != l[s].val || 2 == M && "" != l[s].val && " " != l[s].val || 3 == M && (l[s].n || " " == l[s].val || s == r - 1) || 4 == M && (l[s].n || s == r - 1)) && (1 === D[n].s.rn && A.push(w), w += 1);
                    t.t.a[n].s.totalChars = w;
                    var T, I = -1;
                    if (1 === D[n].s.rn)
                        for (s = 0; r > s; s += 1) I != l[s].anIndexes[n] && (I = l[s].anIndexes[n], T = A.splice(Math.floor(Math.random() * A.length), 1)[0]), l[s].anIndexes[n] = T
                }
                0 !== o || "m" in t.t.p || (t.singleShape = !0), p.yOffset = p.lh || 1.2 * p.s, p.ascent = b.ascent * p.s / 100
            }
            var o = function() {
                    function t(e) {
                        var s, r, i, a = e.length;
                        for (s = 0; a > s; s += 1)
                            if ("gr" === e[s].ty) t(e[s].it);
                            else if ("fl" === e[s].ty || "st" === e[s].ty)
                            if (e[s].c.k && e[s].c.k[0].i)
                                for (i = e[s].c.k.length, r = 0; i > r; r += 1) e[s].c.k[r].s && (e[s].c.k[r].s[0] /= 255, e[s].c.k[r].s[1] /= 255, e[s].c.k[r].s[2] /= 255, e[s].c.k[r].s[3] /= 255), e[s].c.k[r].e && (e[s].c.k[r].e[0] /= 255, e[s].c.k[r].e[1] /= 255, e[s].c.k[r].e[2] /= 255, e[s].c.k[r].e[3] /= 255);
                            else e[s].c.k[0] /= 255, e[s].c.k[1] /= 255, e[s].c.k[2] /= 255, e[s].c.k[3] /= 255
                    }

                    function e(e) {
                        var s, r = e.length;
                        for (s = 0; r > s; s += 1) 4 === e[s].ty && t(e[s].shapes)
                    }
                    var s = [4, 1, 9];
                    return function(t) {
                        if (i(s, t.v) && (e(t.layers), t.assets)) {
                            var r, a = t.assets.length;
                            for (r = 0; a > r; r += 1) t.assets[r].layers && e(t.assets[r].layers)
                        }
                    }
                }(),
                h = {};
            return h.completeData = a, h
        }

        function ShapeModifier() {}

        function TrimModifier() {}

        function RoundCornersModifier() {}

        function BaseRenderer() {}

        function SVGRenderer(t, e) {
            this.animationItem = t, this.layers = null, this.renderedFrame = -1, this.globalData = {
                frameNum: -1
            }, this.renderConfig = {
                preserveAspectRatio: e && e.preserveAspectRatio || "xMidYMid meet",
                progressiveLoad: e && e.progressiveLoad || !1
            }, this.elements = [], this.destroyed = !1
        }

        function CanvasRenderer(t, e) {
            this.animationItem = t, this.renderConfig = {
                clearCanvas: !e || void 0 === e.clearCanvas || e.clearCanvas,
                context: e && e.context || null,
                progressiveLoad: e && e.progressiveLoad || !1,
                preserveAspectRatio: e && e.preserveAspectRatio || "xMidYMid meet"
            }, this.renderConfig.dpr = e && e.dpr || 1, this.animationItem.wrapper && (this.renderConfig.dpr = e && e.dpr || window.devicePixelRatio || 1), this.renderedFrame = -1, this.globalData = {
                frameNum: -1
            }, this.contextData = {
                saved: Array.apply(null, {
                    length: 15
                }),
                savedOp: Array.apply(null, {
                    length: 15
                }),
                cArrPos: 0,
                cTr: new Matrix,
                cO: 1
            };
            var s, r = 15;
            for (s = 0; r > s; s += 1) this.contextData.saved[s] = Array.apply(null, {
                length: 16
            });
            this.elements = [], this.transformMat = new Matrix, this.completeLayers = !1
        }

        function HybridRenderer(t) {
            this.animationItem = t, this.layers = null, this.renderedFrame = -1, this.globalData = {
                frameNum: -1
            }, this.elements = [], this.threeDElements = [], this.destroyed = !1, this.camera = null, this.supports3d = !0
        }

        function MaskElement(t, e, s) {
            this.dynamicProperties = [], this.data = t, this.element = e, this.globalData = s, this.paths = [], this.storedData = [], this.masksProperties = this.data.masksProperties, this.viewData = new Array(this.masksProperties.length), this.maskElement = null, this.firstFrame = !0;
            var r, i, a, n, o, h, l, p, m = this.globalData.defs,
                f = this.masksProperties.length,
                d = this.masksProperties,
                c = 0,
                u = [],
                y = randomString(10),
                g = "clipPath",
                v = "clip-path";
            for (r = 0; f > r; r++)
                if (("a" !== d[r].mode && "n" !== d[r].mode || d[r].inv) && (g = "mask", v = "mask"), "s" != d[r].mode && "i" != d[r].mode || 0 != c ? o = null : (o = document.createElementNS(svgNS, "rect"), o.setAttribute("fill", "#ffffff"), o.setAttribute("width", this.element.comp.data ? this.element.comp.data.w : this.element.globalData.compSize.w), o.setAttribute("height", this.element.comp.data ? this.element.comp.data.h : this.element.globalData.compSize.h), u.push(o)), "n" != d[r].mode && d[r].cl !== !1) {
                    if (c += 1, i = document.createElementNS(svgNS, "path"), d[r].cl ? "s" == d[r].mode ? i.setAttribute("fill", "#000000") : i.setAttribute("fill", "#ffffff") : (i.setAttribute("fill", "none"), "s" == d[r].mode ? i.setAttribute("fill", "#000000") : i.setAttribute("fill", "#ffffff"), i.setAttribute("stroke-width", "1"), i.setAttribute("stroke-miterlimit", "10")), i.setAttribute("clip-rule", "nonzero"), 0 !== d[r].x.k) {
                        g = "mask", v = "mask", p = PropertyFactory.getProp(this.element, d[r].x, 0, null, this.dynamicProperties);
                        var b = "fi_" + randomString(10);
                        h = document.createElementNS(svgNS, "filter"), h.setAttribute("id", b), l = document.createElementNS(svgNS, "feMorphology"), l.setAttribute("operator", "dilate"), l.setAttribute("in", "SourceGraphic"), l.setAttribute("radius", "0"), h.appendChild(l), m.appendChild(h), "s" == d[r].mode ? i.setAttribute("stroke", "#000000") : i.setAttribute("stroke", "#ffffff")
                    } else l = null, p = null;
                    if (this.storedData[r] = {
                            elem: i,
                            x: p,
                            expan: l,
                            lastPath: "",
                            lastOperator: "",
                            filterId: b,
                            lastRadius: 0
                        }, "i" == d[r].mode) {
                        n = u.length;
                        var E = document.createElementNS(svgNS, "g");
                        for (a = 0; n > a; a += 1) E.appendChild(u[a]);
                        var P = document.createElementNS(svgNS, "mask");
                        P.setAttribute("mask-type", "alpha"), P.setAttribute("id", y + "_" + c), P.appendChild(i), m.appendChild(P), E.setAttribute("mask", "url(#" + y + "_" + c + ")"), u.length = 0, u.push(E)
                    } else u.push(i);
                    d[r].inv && !this.solidPath && (this.solidPath = this.createLayerSolidPath()), this.viewData[r] = {
                        elem: i,
                        lastPath: "",
                        prop: ShapePropertyFactory.getShapeProp(this.element, d[r], 3, this.dynamicProperties, null)
                    }, o && (this.viewData[r].invRect = o), this.viewData[r].prop.k || this.drawPath(d[r], this.viewData[r].prop.v, this.viewData[r])
                } else this.viewData[r] = {
                    prop: ShapePropertyFactory.getShapeProp(this.element, d[r], 3, this.dynamicProperties, null)
                };
            for (this.maskElement = document.createElementNS(svgNS, g), f = u.length, r = 0; f > r; r += 1) this.maskElement.appendChild(u[r]);
            this.maskElement.setAttribute("id", y), c > 0 && this.element.maskedElement.setAttribute(v, "url(#" + y + ")"), m.appendChild(this.maskElement)
        }

        function BaseElement() {}

        function SVGBaseElement(t, e, s, r, i) {
            this.globalData = s, this.comp = r, this.data = t, this.matteElement = null, this.parentContainer = e, this.layerId = i ? i.layerId : "ly_" + randomString(10), this.placeholder = i, this.init()
        }

        function ITextElement(t, e, s, r) {}

        function SVGTextElement(t, e, s, r, i) {
            this.textSpans = [], this.renderType = "svg", this._parent.constructor.call(this, t, e, s, r, i)
        }

        function ICompElement(t, e, s, r, i) {
            this._parent.constructor.call(this, t, e, s, r, i), this.layers = t.layers, this.supports3d = !0, this.completeLayers = !1, this.elements = Array.apply(null, {
                length: this.layers.length
            }), this.data.tm && (this.tm = PropertyFactory.getProp(this, this.data.tm, 0, s.frameRate, this.dynamicProperties)), this.data.xt ? (this.layerElement = document.createElementNS(svgNS, "g"), this.buildAllItems()) : s.progressiveLoad || this.buildAllItems()
        }

        function IImageElement(t, e, s, r, i) {
            this.assetData = s.getAssetData(t.refId), this._parent.constructor.call(this, t, e, s, r, i)
        }

        function IShapeElement(t, e, s, r, i) {
            this.shapes = [], this.shapesData = t.shapes, this.stylesList = [], this.viewData = [], this.shapeModifiers = [], this._parent.constructor.call(this, t, e, s, r, i)
        }

        function ISolidElement(t, e, s, r, i) {
            this._parent.constructor.call(this, t, e, s, r, i)
        }

        function CVBaseElement(t, e, s) {
            this.globalData = s, this.data = t, this.comp = e, this.canvasContext = s.canvasContext, this.init()
        }

        function CVCompElement(t, e, s) {
            this._parent.constructor.call(this, t, e, s);
            var r = {};
            for (var i in s) s.hasOwnProperty(i) && (r[i] = s[i]);
            r.renderer = this, r.compHeight = this.data.h, r.compWidth = this.data.w, this.renderConfig = {
                clearCanvas: !0
            }, this.contextData = {
                saved: Array.apply(null, {
                    length: 15
                }),
                savedOp: Array.apply(null, {
                    length: 15
                }),
                cArrPos: 0,
                cTr: new Matrix,
                cO: 1
            }, this.completeLayers = !1;
            var a, n = 15;
            for (a = 0; n > a; a += 1) this.contextData.saved[a] = Array.apply(null, {
                length: 16
            });
            this.transformMat = new Matrix, this.parentGlobalData = this.globalData;
            var o = document.createElement("canvas");
            r.canvasContext = o.getContext("2d"), this.canvasContext = r.canvasContext, o.width = this.data.w, o.height = this.data.h, this.canvas = o, this.globalData = r, this.layers = t.layers, this.elements = Array.apply(null, {
                length: this.layers.length
            }), this.data.tm && (this.tm = PropertyFactory.getProp(this, this.data.tm, 0, s.frameRate, this.dynamicProperties)), (this.data.xt || !s.progressiveLoad) && this.buildAllItems()
        }

        function CVImageElement(t, e, s) {
            this.assetData = s.getAssetData(t.refId), this._parent.constructor.call(this, t, e, s), this.globalData.addPendingElement()
        }

        function CVMaskElement(t, e) {
            this.data = t, this.element = e, this.dynamicProperties = [], this.masksProperties = this.data.masksProperties, this.viewData = new Array(this.masksProperties.length);
            var s, r = this.masksProperties.length;
            for (s = 0; r > s; s++) this.viewData[s] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[s], 3, this.dynamicProperties, null)
        }

        function CVShapeElement(t, e, s) {
            this.shapes = [], this.stylesList = [], this.viewData = [], this.shapeModifiers = [], this.shapesData = t.shapes, this.firstFrame = !0, this._parent.constructor.call(this, t, e, s)
        }

        function CVSolidElement(t, e, s) {
            this._parent.constructor.call(this, t, e, s)
        }

        function CVTextElement(t, e, s) {
            this.textSpans = [], this.yOffset = 0, this.fillColorAnim = !1, this.strokeColorAnim = !1, this.strokeWidthAnim = !1, this.stroke = !1, this.fill = !1, this.justifyOffset = 0, this.currentRender = null, this.renderType = "canvas", this.values = {
                fill: "rgba(0,0,0,0)",
                stroke: "rgba(0,0,0,0)",
                sWidth: 0,
                fValue: ""
            }, this._parent.constructor.call(this, t, e, s)
        }

        function HBaseElement(t, e, s, r, i) {
            this.globalData = s, this.comp = r, this.data = t, this.matteElement = null, this.parentContainer = e, this.layerId = i ? i.layerId : "ly_" + randomString(10), this.placeholder = i, this.init()
        }

        function HSolidElement(t, e, s, r, i) {
            this._parent.constructor.call(this, t, e, s, r, i)
        }

        function HCompElement(t, e, s, r, i) {
            this._parent.constructor.call(this, t, e, s, r, i), this.layers = t.layers, this.supports3d = !0, this.completeLayers = !1, this.elements = Array.apply(null, {
                length: this.layers.length
            }), this.data.tm && (this.tm = PropertyFactory.getProp(this, this.data.tm, 0, s.frameRate, this.dynamicProperties)), this.data.hasMask && (this.supports3d = !1), this.data.xt && (this.layerElement = document.createElement("div")), this.buildAllItems()
        }

        function HShapeElement(t, e, s, r, i) {
            this.shapes = [], this.shapeModifiers = [], this.shapesData = t.shapes, this.stylesList = [], this.viewData = [], this._parent.constructor.call(this, t, e, s, r, i), this.addedTransforms = {
                mdf: !1,
                mats: [this.finalTransform.mat]
            }, this.currentBBox = {
                x: 999999,
                y: -999999,
                h: 0,
                w: 0
            }
        }

        function HTextElement(t, e, s, r, i) {
            this.textSpans = [], this.textPaths = [], this.currentBBox = {
                x: 999999,
                y: -999999,
                h: 0,
                w: 0
            }, this.renderType = "svg", this.isMasked = !1, this._parent.constructor.call(this, t, e, s, r, i)
        }

        function HImageElement(t, e, s, r, i) {
            this.assetData = s.getAssetData(t.refId), this._parent.constructor.call(this, t, e, s, r, i)
        }

        function HCameraElement(t, e, s, r, i) {
            if (this._parent.constructor.call(this, t, e, s, r, i), this.pe = PropertyFactory.getProp(this, t.pe, 0, 0, this.dynamicProperties), t.ks.p.s ? (this.px = PropertyFactory.getProp(this, t.ks.p.x, 1, 0, this.dynamicProperties), this.py = PropertyFactory.getProp(this, t.ks.p.y, 1, 0, this.dynamicProperties), this.pz = PropertyFactory.getProp(this, t.ks.p.z, 1, 0, this.dynamicProperties)) : this.p = PropertyFactory.getProp(this, t.ks.p, 1, 0, this.dynamicProperties), t.ks.a && (this.a = PropertyFactory.getProp(this, t.ks.a, 1, 0, this.dynamicProperties)), t.ks.or.k.length) {
                var a, n = t.ks.or.k.length;
                for (a = 0; n > a; a += 1) t.ks.or.k[a].to = null, t.ks.or.k[a].ti = null
            }
            this.or = PropertyFactory.getProp(this, t.ks.or, 1, degToRads, this.dynamicProperties), this.or.sh = !0, this.rx = PropertyFactory.getProp(this, t.ks.rx, 0, degToRads, this.dynamicProperties), this.ry = PropertyFactory.getProp(this, t.ks.ry, 0, degToRads, this.dynamicProperties), this.rz = PropertyFactory.getProp(this, t.ks.rz, 0, degToRads, this.dynamicProperties), this.mat = new Matrix
        }

        function SliderEffect(t, e, s) {
            this.p = PropertyFactory.getProp(e, t.v, 0, 0, s)
        }

        function AngleEffect(t, e, s) {
            this.p = PropertyFactory.getProp(e, t.v, 0, 0, s)
        }

        function ColorEffect(t, e, s) {
            this.p = PropertyFactory.getProp(e, t.v, 1, 0, s)
        }

        function PointEffect(t, e, s) {
            this.p = PropertyFactory.getProp(e, t.v, 1, 0, s)
        }

        function CheckboxEffect(t, e, s) {
            this.p = PropertyFactory.getProp(e, t.v, 1, 0, s)
        }

        function NoValueEffect(t, e, s) {
            this.p = {}
        }

        function groupEffectFunction(t) {}

        function GroupEffect() {
            var t = groupEffectFunction;
            return t
        }

        function EffectsManager(t, e, s) {
            var r, i, a = t.ef,
                n = [],
                o = a.length;
            for (r = 0; o > r; r++) switch (a[r].ty) {
                case 0:
                    i = new SliderEffect(a[r], e, s), n.push(i.proxyFunction.bind(i));
                    break;
                case 1:
                    i = new AngleEffect(a[r], e, s), n.push(i.proxyFunction.bind(i));
                    break;
                case 2:
                    i = new ColorEffect(a[r], e, s), n.push(i.proxyFunction.bind(i));
                    break;
                case 3:
                    i = new PointEffect(a[r], e, s), n.push(i.proxyFunction.bind(i));
                    break;
                case 4:
                case 7:
                    i = new CheckboxEffect(a[r], e, s), n.push(i.proxyFunction.bind(i));
                    break;
                case 5:
                    i = new EffectsManager(a[r], e, s), n.push(i);
                    break;
                case 6:
                    i = new NoValueEffect(a[r], e, s), n.push(i)
            }
            var h = function(e) {
                for (var s = t.ef, r = 0, i = s.length; i > r;) {
                    if (e === s[r].nm || e === s[r].ix) return 5 === s[r].ty ? n[r] : n[r]();
                    r += 1
                }
            };
            return h
        }

        function play(animation) {
            animationManager.play(animation)
        }

        function pause(animation) {
            animationManager.pause(animation)
        }

        function togglePause(animation) {
            animationManager.togglePause(animation)
        }

        function setSpeed(value, animation) {
            animationManager.setSpeed(value, animation)
        }

        function setDirection(value, animation) {
            animationManager.setDirection(value, animation)
        }

        function stop(animation) {
            animationManager.stop(animation)
        }

        function moveFrame(value) {
            animationManager.moveFrame(value)
        }

        function searchAnimations() {
            standalone === !0 ? animationManager.searchAnimations(animationData, standalone, renderer) : animationManager.searchAnimations()
        }

        function registerAnimation(elem) {
            return animationManager.registerAnimation(elem)
        }

        function resize() {
            animationManager.resize()
        }

        function start() {
            animationManager.start()
        }

        function goToAndStop(val, isFrame, animation) {
            animationManager.goToAndStop(val, isFrame, animation)
        }

        function setSubframeRendering(flag) {
            subframeEnabled = flag
        }

        function loadAnimation(params) {
            return standalone === !0 && (params.animationData = JSON.parse(animationData)), animationManager.loadAnimation(params)
        }

        function destroy(animation) {
            return animationManager.destroy(animation)
        }

        function setQuality(value) {
            if ("string" == typeof value) switch (value) {
                case "high":
                    defaultCurveSegments = 200;
                    break;
                case "medium":
                    defaultCurveSegments = 50;
                    break;
                case "low":
                    defaultCurveSegments = 10
            } else !isNaN(value) && value > 1 && (defaultCurveSegments = value);
            roundValues(!(defaultCurveSegments >= 50))
        }

        function installPlugin(type, plugin) {
            "expressions" === type && (expressionsPlugin = plugin)
        }

        function getFactory(name) {
            switch (name) {
                case "propertyFactory":
                    return PropertyFactory;
                case "shapePropertyFactory":
                    return ShapePropertyFactory;
                case "matrix":
                    return Matrix
            }
        }

        function checkReady() {
            "complete" === document.readyState && (clearInterval(readyStateCheckInterval), searchAnimations())
        }

        function getQueryVariable(variable) {
            for (var vars = queryString.split("&"), i = 0; i < vars.length; i++) {
                var pair = vars[i].split("=");
                if (decodeURIComponent(pair[0]) == variable) return decodeURIComponent(pair[1])
            }
        }
        var svgNS = "http://www.w3.org/2000/svg",
            subframeEnabled = !0,
            expressionsPlugin, isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent),
            cachedColors = {},
            bm_rounder = Math.round,
            bm_rnd, bm_pow = Math.pow,
            bm_sqrt = Math.sqrt,
            bm_abs = Math.abs,
            bm_floor = Math.floor,
            bm_max = Math.max,
            bm_min = Math.min,
            blitter = 10,
            BMMath = {};
        ! function() {
            var t, e = Object.getOwnPropertyNames(Math),
                s = e.length;
            for (t = 0; s > t; t += 1) BMMath[e[t]] = Math[e[t]]
        }(), BMMath.random = Math.random, BMMath.abs = function(t) {
            var e = typeof t;
            if ("object" === e && t.length) {
                var s, r = Array.apply(null, {
                        length: t.length
                    }),
                    i = t.length;
                for (s = 0; i > s; s += 1) r[s] = Math.abs(t[s]);
                return r
            }
            return t
        };
        var defaultCurveSegments = 75,
            degToRads = Math.PI / 180,
            roundCorner = .5519;
        roundValues(!1);
        var rgbToHex = function() {
                var t, e, s = [];
                for (t = 0; 256 > t; t += 1) e = t.toString(16), s[t] = 1 == e.length ? "0" + e : e;
                return function(t, e, r) {
                    return 0 > t && (t = 0), 0 > e && (e = 0), 0 > r && (r = 0), "#" + s[t] + s[e] + s[r]
                }
            }(),
            fillColorToString = function() {
                var t = [];
                return function(e, s) {
                    return void 0 !== s && (e[3] = s), t[e[0]] || (t[e[0]] = {}), t[e[0]][e[1]] || (t[e[0]][e[1]] = {}), t[e[0]][e[1]][e[2]] || (t[e[0]][e[1]][e[2]] = {}), t[e[0]][e[1]][e[2]][e[3]] || (t[e[0]][e[1]][e[2]][e[3]] = "rgba(" + e.join(",") + ")"), t[e[0]][e[1]][e[2]][e[3]]
                }
            }(),
            Matrix = function() {
                function t() {
                    return this.props[0] = 1, this.props[1] = 0, this.props[2] = 0, this.props[3] = 0, this.props[4] = 0, this.props[5] = 1, this.props[6] = 0, this.props[7] = 0, this.props[8] = 0, this.props[9] = 0, this.props[10] = 1, this.props[11] = 0, this.props[12] = 0, this.props[13] = 0, this.props[14] = 0, this.props[15] = 1, this
                }

                function e(t) {
                    if (0 === t) return this;
                    var e = Math.cos(t),
                        s = Math.sin(t);
                    return this._t(e, -s, 0, 0, s, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
                }

                function s(t) {
                    if (0 === t) return this;
                    var e = Math.cos(t),
                        s = Math.sin(t);
                    return this._t(1, 0, 0, 0, 0, e, -s, 0, 0, s, e, 0, 0, 0, 0, 1)
                }

                function r(t) {
                    if (0 === t) return this;
                    var e = Math.cos(t),
                        s = Math.sin(t);
                    return this._t(e, 0, s, 0, 0, 1, 0, 0, -s, 0, e, 0, 0, 0, 0, 1)
                }

                function i(t) {
                    if (0 === t) return this;
                    var e = Math.cos(t),
                        s = Math.sin(t);
                    return this._t(e, -s, 0, 0, s, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
                }

                function a(t, e) {
                    return this._t(1, e, t, 1, 0, 0)
                }

                function n(t, e) {
                    return this.shear(Math.tan(t), Math.tan(e))
                }

                function o(t, e) {
                    var s = Math.cos(e),
                        r = Math.sin(e);
                    return this._t(s, r, 0, 0, -r, s, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, Math.tan(t), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(s, -r, 0, 0, r, s, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
                }

                function h(t, e, s) {
                    return s = isNaN(s) ? 1 : s, 1 == t && 1 == e && 1 == s ? this : this._t(t, 0, 0, 0, 0, e, 0, 0, 0, 0, s, 0, 0, 0, 0, 1)
                }

                function l(t, e, s, r, i, a, n, o, h, l, p, m, f, d, c, u) {
                    return this.props[0] = t, this.props[1] = e, this.props[2] = s, this.props[3] = r, this.props[4] = i, this.props[5] = a, this.props[6] = n, this.props[7] = o, this.props[8] = h, this.props[9] = l, this.props[10] = p, this.props[11] = m, this.props[12] = f, this.props[13] = d, this.props[14] = c, this.props[15] = u, this
                }

                function p(t, e, s) {
                    return s = s || 0, 0 !== t || 0 !== e || 0 !== s ? this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, t, e, s, 1) : this
                }

                function m(t, e, s, r, i, a, n, o, h, l, p, m, f, d, c, u) {
                    if (1 === t && 0 === e && 0 === s && 0 === r && 0 === i && 1 === a && 0 === n && 0 === o && 0 === h && 0 === l && 1 === p && 0 === m) return (0 !== f || 0 !== d || 0 !== c) && (this.props[12] = this.props[12] * t + this.props[13] * i + this.props[14] * h + this.props[15] * f, this.props[13] = this.props[12] * e + this.props[13] * a + this.props[14] * l + this.props[15] * d, this.props[14] = this.props[12] * s + this.props[13] * n + this.props[14] * p + this.props[15] * c, this.props[15] = this.props[12] * r + this.props[13] * o + this.props[14] * m + this.props[15] * u), this;
                    var y = this.props[0],
                        g = this.props[1],
                        v = this.props[2],
                        b = this.props[3],
                        E = this.props[4],
                        P = this.props[5],
                        k = this.props[6],
                        x = this.props[7],
                        S = this.props[8],
                        C = this.props[9],
                        D = this.props[10],
                        M = this.props[11],
                        w = this.props[12],
                        A = this.props[13],
                        T = this.props[14],
                        I = this.props[15];
                    return this.props[0] = y * t + g * i + v * h + b * f, this.props[1] = y * e + g * a + v * l + b * d, this.props[2] = y * s + g * n + v * p + b * c, this.props[3] = y * r + g * o + v * m + b * u, this.props[4] = E * t + P * i + k * h + x * f, this.props[5] = E * e + P * a + k * l + x * d, this.props[6] = E * s + P * n + k * p + x * c, this.props[7] = E * r + P * o + k * m + x * u, this.props[8] = S * t + C * i + D * h + M * f, this.props[9] = S * e + C * a + D * l + M * d, this.props[10] = S * s + C * n + D * p + M * c, this.props[11] = S * r + C * o + D * m + M * u, this.props[12] = w * t + A * i + T * h + I * f, this.props[13] = w * e + A * a + T * l + I * d, this.props[14] = w * s + A * n + T * p + I * c, this.props[15] = w * r + A * o + T * m + I * u, this
                }

                function f(t) {
                    var e;
                    for (e = 0; 16 > e; e += 1) t.props[e] = this.props[e]
                }

                function d(t) {
                    var e;
                    for (e = 0; 16 > e; e += 1) this.props[e] = t[e]
                }

                function c(t, e, s) {
                    return {
                        x: t * this.props[0] + e * this.props[4] + s * this.props[8] + this.props[12],
                        y: t * this.props[1] + e * this.props[5] + s * this.props[9] + this.props[13],
                        z: t * this.props[2] + e * this.props[6] + s * this.props[10] + this.props[14]
                    }
                }

                function u(t, e, s) {
                    return t * this.props[0] + e * this.props[4] + s * this.props[8] + this.props[12]
                }

                function y(t, e, s) {
                    return t * this.props[1] + e * this.props[5] + s * this.props[9] + this.props[13]
                }

                function g(t, e, s) {
                    return t * this.props[2] + e * this.props[6] + s * this.props[10] + this.props[14]
                }

                function v(t) {
                    var e, s = this.props[0] * this.props[5] - this.props[1] * this.props[4],
                        r = this.props[5] / s,
                        i = -this.props[1] / s,
                        a = -this.props[4] / s,
                        n = this.props[0] / s,
                        o = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / s,
                        h = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / s,
                        l = t.length,
                        p = [];
                    for (e = 0; l > e; e += 1) p[e] = [t[e][0] * r + t[e][1] * a + o, t[e][0] * i + t[e][1] * n + h, 0];
                    return p
                }

                function b(t, e, s) {
                    return [t * this.props[0] + e * this.props[4] + s * this.props[8] + this.props[12], t * this.props[1] + e * this.props[5] + s * this.props[9] + this.props[13], t * this.props[2] + e * this.props[6] + s * this.props[10] + this.props[14]]
                }

                function E(t, e) {
                    return bm_rnd(t * this.props[0] + e * this.props[4] + this.props[12]) + "," + bm_rnd(t * this.props[1] + e * this.props[5] + this.props[13])
                }

                function P() {
                    return [this.props[0], this.props[1], this.props[2], this.props[3], this.props[4], this.props[5], this.props[6], this.props[7], this.props[8], this.props[9], this.props[10], this.props[11], this.props[12], this.props[13], this.props[14], this.props[15]]
                }

                function k() {
                    return isSafari ? "matrix3d(" + roundTo2Decimals(this.props[0]) + "," + roundTo2Decimals(this.props[1]) + "," + roundTo2Decimals(this.props[2]) + "," + roundTo2Decimals(this.props[3]) + "," + roundTo2Decimals(this.props[4]) + "," + roundTo2Decimals(this.props[5]) + "," + roundTo2Decimals(this.props[6]) + "," + roundTo2Decimals(this.props[7]) + "," + roundTo2Decimals(this.props[8]) + "," + roundTo2Decimals(this.props[9]) + "," + roundTo2Decimals(this.props[10]) + "," + roundTo2Decimals(this.props[11]) + "," + roundTo2Decimals(this.props[12]) + "," + roundTo2Decimals(this.props[13]) + "," + roundTo2Decimals(this.props[14]) + "," + roundTo2Decimals(this.props[15]) + ")" : (this.cssParts[1] = this.props.join(","), this.cssParts.join(""))
                }

                function x() {
                    return "matrix(" + this.props[0] + "," + this.props[1] + "," + this.props[4] + "," + this.props[5] + "," + this.props[12] + "," + this.props[13] + ")"
                }

                function S() {
                    return "" + this.toArray()
                }
                return function() {
                    this.reset = t, this.rotate = e, this.rotateX = s, this.rotateY = r, this.rotateZ = i, this.skew = n, this.skewFromAxis = o, this.shear = a, this.scale = h, this.setTransform = l, this.translate = p, this.transform = m, this.applyToPoint = c, this.applyToX = u, this.applyToY = y, this.applyToZ = g, this.applyToPointArray = b, this.applyToPointStringified = E, this.toArray = P, this.toCSS = k, this.to2dCSS = x, this.toString = S, this.clone = f, this.cloneFromProps = d, this.inversePoints = v, this._t = this.transform, this.props = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], this.cssParts = ["matrix3d(", "", ")"]
                }
            }();
        ! function(t, e) {
            function s(s, l, p) {
                var d = [];
                l = 1 == l ? {
                    entropy: !0
                } : l || {};
                var v = n(a(l.entropy ? [s, h(t)] : null == s ? o() : s, 3), d),
                    b = new r(d),
                    E = function() {
                        for (var t = b.g(f), e = u, s = 0; y > t;) t = (t + s) * m, e *= m, s = b.g(1);
                        for (; t >= g;) t /= 2, e /= 2, s >>>= 1;
                        return (t + s) / e
                    };
                return E.int32 = function() {
                    return 0 | b.g(4)
                }, E.quick = function() {
                    return b.g(4) / 4294967296
                }, E.double = E, n(h(b.S), t), (l.pass || p || function(t, s, r, a) {
                    return a && (a.S && i(a, b), t.state = function() {
                        return i(b, {})
                    }), r ? (e[c] = t, s) : t
                })(E, v, "global" in l ? l.global : this == e, l.state)
            }

            function r(t) {
                var e, s = t.length,
                    r = this,
                    i = 0,
                    a = r.i = r.j = 0,
                    n = r.S = [];
                for (s || (t = [s++]); m > i;) n[i] = i++;
                for (i = 0; m > i; i++) n[i] = n[a = v & a + t[i % s] + (e = n[i])], n[a] = e;
                (r.g = function(t) {
                    for (var e, s = 0, i = r.i, a = r.j, n = r.S; t--;) e = n[i = v & i + 1], s = s * m + n[v & (n[i] = n[a = v & a + e]) + (n[a] = e)];
                    return r.i = i, r.j = a, s
                })(m)
            }

            function i(t, e) {
                return e.i = t.i, e.j = t.j, e.S = t.S.slice(), e
            }

            function a(t, e) {
                var s, r = [],
                    i = typeof t;
                if (e && "object" == i)
                    for (s in t) try {
                        r.push(a(t[s], e - 1))
                    } catch (n) {}
                return r.length ? r : "string" == i ? t : t + "\0"
            }

            function n(t, e) {
                for (var s, r = t + "", i = 0; i < r.length;) e[v & i] = v & (s ^= 19 * e[v & i]) + r.charCodeAt(i++);
                return h(e)
            }

            function o() {
                try {
                    if (l) return h(l.randomBytes(m));
                    var e = new Uint8Array(m);
                    return (p.crypto || p.msCrypto).getRandomValues(e), h(e)
                } catch (s) {
                    var r = p.navigator,
                        i = r && r.plugins;
                    return [+new Date, p, i, p.screen, h(t)]
                }
            }

            function h(t) {
                return String.fromCharCode.apply(0, t)
            }
            var l, p = this,
                m = 256,
                f = 6,
                d = 52,
                c = "random",
                u = e.pow(m, f),
                y = e.pow(2, d),
                g = 2 * y,
                v = m - 1;
            e["seed" + c] = s, n(e.random(), t)
        }([], BMMath);
        var BezierFactory = function() {
                function t(t, e, s, r, i) {
                    var a = i || ("bez_" + t + "_" + e + "_" + s + "_" + r).replace(/\./g, "p");
                    if (p[a]) return p[a];
                    var n = new h([t, e, s, r]);
                    return p[a] = n, n
                }

                function e(t, e) {
                    return 1 - 3 * e + 3 * t
                }

                function s(t, e) {
                    return 3 * e - 6 * t
                }

                function r(t) {
                    return 3 * t
                }

                function i(t, i, a) {
                    return ((e(i, a) * t + s(i, a)) * t + r(i)) * t
                }

                function a(t, i, a) {
                    return 3 * e(i, a) * t * t + 2 * s(i, a) * t + r(i)
                }

                function n(t, e, s, r, a) {
                    var n, o, h = 0;
                    do o = e + (s - e) / 2, n = i(o, r, a) - t, n > 0 ? s = o : e = o; while (Math.abs(n) > d && ++h < c);
                    return o
                }

                function o(t, e, s, r) {
                    for (var n = 0; m > n; ++n) {
                        var o = a(e, s, r);
                        if (0 === o) return e;
                        var h = i(e, s, r) - t;
                        e -= h / o
                    }
                    return e
                }

                function h(t) {
                    this._p = t, this._mSampleValues = g ? new Float32Array(u) : new Array(u), this._precomputed = !1, this.get = this.get.bind(this)
                }
                var l = {};
                l.getBezierEasing = t;
                var p = {},
                    m = 4,
                    f = .001,
                    d = 1e-7,
                    c = 10,
                    u = 11,
                    y = 1 / (u - 1),
                    g = "function" == typeof Float32Array;
                return h.prototype = {
                    get: function(t) {
                        var e = this._p[0],
                            s = this._p[1],
                            r = this._p[2],
                            a = this._p[3];
                        return this._precomputed || this._precompute(), e === s && r === a ? t : 0 === t ? 0 : 1 === t ? 1 : i(this._getTForX(t), s, a)
                    },
                    _precompute: function() {
                        var t = this._p[0],
                            e = this._p[1],
                            s = this._p[2],
                            r = this._p[3];
                        this._precomputed = !0, (t !== e || s !== r) && this._calcSampleValues()
                    },
                    _calcSampleValues: function() {
                        for (var t = this._p[0], e = this._p[2], s = 0; u > s; ++s) this._mSampleValues[s] = i(s * y, t, e)
                    },
                    _getTForX: function(t) {
                        for (var e = this._p[0], s = this._p[2], r = this._mSampleValues, i = 0, h = 1, l = u - 1; h !== l && r[h] <= t; ++h) i += y;
                        --h;
                        var p = (t - r[h]) / (r[h + 1] - r[h]),
                            m = i + p * y,
                            d = a(m, e, s);
                        return d >= f ? o(t, m, e, s) : 0 === d ? m : n(t, i, i + y, e, s)
                    }
                }, l
            }(),
            MatrixManager = matrixManagerFunction;
        ! function() {
            for (var t = 0, e = ["ms", "moz", "webkit", "o"], s = 0; s < e.length && !window.requestAnimationFrame; ++s) window.requestAnimationFrame = window[e[s] + "RequestAnimationFrame"], window.cancelAnimationFrame = window[e[s] + "CancelAnimationFrame"] || window[e[s] + "CancelRequestAnimationFrame"];
            window.requestAnimationFrame || (window.requestAnimationFrame = function(e, s) {
                var r = (new Date).getTime(),
                    i = Math.max(0, 16 - (r - t)),
                    a = window.setTimeout(function() {
                        e(r + i)
                    }, i);
                return t = r + i, a
            }), window.cancelAnimationFrame || (window.cancelAnimationFrame = function(t) {
                clearTimeout(t)
            })
        }();
        var bez = bezFunction(),
            dataManager = dataFunctionManager(),
            FontManager = function() {
                function t(t, e) {
                    var s = document.createElement("span");
                    s.style.fontFamily = e;
                    var r = document.createElement("span");
                    r.innerHTML = "giItT1WQy@!-/#", s.style.position = "absolute", s.style.left = "-10000px", s.style.top = "-10000px", s.style.fontSize = "300px", s.style.fontVariant = "normal", s.style.fontStyle = "normal", s.style.fontWeight = "normal", s.style.letterSpacing = "0", s.appendChild(r), document.body.appendChild(s);
                    var i = r.offsetWidth;
                    return r.style.fontFamily = t + ", " + e, {
                        node: r,
                        w: i,
                        parent: s
                    }
                }

                function e() {
                    var t, s, r, i = this.fonts.length,
                        a = i;
                    for (t = 0; i > t; t += 1)
                        if (this.fonts[t].loaded) a -= 1;
                        else if ("t" === this.fonts[t].fOrigin) {
                        if (window.Typekit && window.Typekit.load && 0 === this.typekitLoaded) {
                            this.typekitLoaded = 1;
                            try {
                                Typekit.load({
                                    async: !0,
                                    active: function() {
                                        this.typekitLoaded = 2
                                    }.bind(this)
                                })
                            } catch (n) {}
                        }
                        2 === this.typekitLoaded && (this.fonts[t].loaded = !0)
                    } else "n" === this.fonts[t].fOrigin ? this.fonts[t].loaded = !0 : (s = this.fonts[t].monoCase.node, r = this.fonts[t].monoCase.w, s.offsetWidth !== r ? (a -= 1, this.fonts[t].loaded = !0) : (s = this.fonts[t].sansCase.node, r = this.fonts[t].sansCase.w, s.offsetWidth !== r && (a -= 1, this.fonts[t].loaded = !0)), this.fonts[t].loaded && (this.fonts[t].sansCase.parent.parentNode.removeChild(this.fonts[t].sansCase.parent), this.fonts[t].monoCase.parent.parentNode.removeChild(this.fonts[t].monoCase.parent)));
                    0 !== a && Date.now() - this.initTime < h ? setTimeout(e.bind(this), 20) : setTimeout(function() {
                        this.loaded = !0
                    }.bind(this), 0)
                }

                function s(t, e) {
                    var s = document.createElementNS(svgNS, "text");
                    s.style.fontSize = "100px", s.style.fontFamily = e.fFamily, s.textContent = "1", e.fClass ? (s.style.fontFamily = "inherit", s.className = e.fClass) : s.style.fontFamily = e.fFamily, t.appendChild(s);
                    var r = document.createElement("canvas").getContext("2d");
                    return r.font = "100px " + e.fFamily, r
                }

                function r(r, i) {
                    if (!r) return void(this.loaded = !0);
                    if (this.chars) return this.loaded = !0, void(this.fonts = r.list);
                    var a, n = r.list,
                        o = n.length;
                    for (a = 0; o > a; a += 1) {
                        if (n[a].loaded = !1, n[a].monoCase = t(n[a].fFamily, "monospace"), n[a].sansCase = t(n[a].fFamily, "sans-serif"), n[a].fPath) {
                            if ("p" === n[a].fOrigin) {
                                var h = document.createElement("style");
                                h.type = "text/css", h.innerHTML = "@font-face {font-family: " + n[a].fFamily + "; font-style: normal; src: url('" + n[a].fPath + "');}", i.appendChild(h)
                            } else if ("g" === n[a].fOrigin) {
                                var l = document.createElement("link");
                                l.type = "text/css", l.rel = "stylesheet", l.href = n[a].fPath, i.appendChild(l)
                            } else if ("t" === n[a].fOrigin) {
                                var p = document.createElement("script");
                                p.setAttribute("src", n[a].fPath), i.appendChild(p)
                            }
                        } else n[a].loaded = !0;
                        n[a].helper = s(i, n[a]), this.fonts.push(n[a])
                    }
                    e.bind(this)()
                }

                function i(t) {
                    if (t) {
                        this.chars || (this.chars = []);
                        var e, s, r, i = t.length,
                            a = this.chars.length;
                        for (e = 0; i > e; e += 1) {
                            for (s = 0, r = !1; a > s;) this.chars[s].style === t[e].style && this.chars[s].fFamily === t[e].fFamily && this.chars[s].ch === t[e].ch && (r = !0), s += 1;
                            r || (this.chars.push(t[e]), a += 1)
                        }
                    }
                }

                function a(t, e, s) {
                    for (var r = 0, i = this.chars.length; i > r;) {
                        if (this.chars[r].ch === t && this.chars[r].style === e && this.chars[r].fFamily === s) return this.chars[r];
                        r += 1
                    }
                }

                function n(t, e, s) {
                    var r = this.getFontByName(e),
                        i = r.helper;
                    return i.measureText(t).width * s / 100
                }

                function o(t) {
                    for (var e = 0, s = this.fonts.length; s > e;) {
                        if (this.fonts[e].fName === t) return this.fonts[e];
                        e += 1
                    }
                    return "sans-serif"
                }
                var h = 5e3,
                    l = function() {
                        this.fonts = [], this.chars = null, this.typekitLoaded = 0, this.loaded = !1, this.initTime = Date.now()
                    };
                return l.prototype.addChars = i, l.prototype.addFonts = r, l.prototype.getCharData = a, l.prototype.getFontByName = o, l.prototype.measureText = n, l
            }(),
            PropertyFactory = function() {
                function t() {
                    if (this.elem.globalData.frameId !== this.frameId) {
                        this.mdf = !1;
                        var t = this.comp.renderedFrame - this.offsetTime;
                        if (t === this.lastFrame || this.lastFrame !== l && (this.lastFrame >= this.keyframes[this.keyframes.length - 1].t - this.offsetTime && t >= this.keyframes[this.keyframes.length - 1].t - this.offsetTime || this.lastFrame < this.keyframes[0].t - this.offsetTime && t < this.keyframes[0].t - this.offsetTime));
                        else {
                            for (var e, s, r = 0, i = this.keyframes.length - 1, a = 1, n = !0; n;) {
                                if (e = this.keyframes[r], s = this.keyframes[r + 1], r == i - 1 && t >= s.t - this.offsetTime) {
                                    e.h && (e = s);
                                    break
                                }
                                if (s.t - this.offsetTime > t) break;
                                i - 1 > r ? r += a : n = !1
                            }
                            var o, h, p, m, f, d = 0;
                            if (e.to) {
                                e.bezierData || bez.buildBezierData(e);
                                var c = e.bezierData;
                                if (t >= s.t - this.offsetTime || t < e.t - this.offsetTime) {
                                    var u = t >= s.t - this.offsetTime ? c.points.length - 1 : 0;
                                    for (h = c.points[u].point.length, o = 0; h > o; o += 1) this.v[o] = this.mult ? c.points[u].point[o] * this.mult : c.points[u].point[o], this.pv[o] = c.points[u].point[o], this.lastPValue[o] !== this.pv[o] && (this.mdf = !0, this.lastPValue[o] = this.pv[o])
                                } else {
                                    e.__fnct ? f = e.__fnct : (f = BezierFactory.getBezierEasing(e.o.x, e.o.y, e.i.x, e.i.y, e.n).get, e.__fnct = f), p = f((t - (e.t - this.offsetTime)) / (s.t - this.offsetTime - (e.t - this.offsetTime)));
                                    var y, g = c.segmentLength * p,
                                        v = 0;
                                    for (a = 1, n = !0, m = c.points.length; n;) {
                                        if (v += c.points[d].partialLength * a, 0 === g || 0 === p || d == c.points.length - 1) {
                                            for (h = c.points[d].point.length, o = 0; h > o; o += 1) this.v[o] = this.mult ? c.points[d].point[o] * this.mult : c.points[d].point[o], this.pv[o] = c.points[d].point[o], this.lastPValue[o] !== this.pv[o] && (this.mdf = !0, this.lastPValue[o] = this.pv[o]);
                                            break
                                        }
                                        if (g >= v && g < v + c.points[d + 1].partialLength) {
                                            for (y = (g - v) / c.points[d + 1].partialLength, h = c.points[d].point.length, o = 0; h > o; o += 1) this.v[o] = this.mult ? (c.points[d].point[o] + (c.points[d + 1].point[o] - c.points[d].point[o]) * y) * this.mult : c.points[d].point[o] + (c.points[d + 1].point[o] - c.points[d].point[o]) * y, this.pv[o] = c.points[d].point[o] + (c.points[d + 1].point[o] - c.points[d].point[o]) * y, this.lastPValue[o] !== this.pv[o] && (this.mdf = !0, this.lastPValue[o] = this.pv[o]);
                                            break
                                        }
                                        m - 1 > d && 1 == a || d > 0 && -1 == a ? d += a : n = !1
                                    }
                                }
                            } else {
                                var b, E, P, k, x, S = !1;
                                for (i = e.s.length, r = 0; i > r; r += 1) {
                                    if (1 !== e.h && (e.o.x instanceof Array ? (S = !0, e.__fnct || (e.__fnct = []), e.__fnct[r] || (b = e.o.x[r] || e.o.x[0], E = e.o.y[r] || e.o.y[0], P = e.i.x[r] || e.i.x[0], k = e.i.y[r] || e.i.y[0])) : (S = !1, e.__fnct || (b = e.o.x, E = e.o.y, P = e.i.x, k = e.i.y)), S ? e.__fnct[r] ? f = e.__fnct[r] : (f = BezierFactory.getBezierEasing(b, E, P, k).get, e.__fnct[r] = f) : e.__fnct ? f = e.__fnct : (f = BezierFactory.getBezierEasing(b, E, P, k).get, e.__fnct = f), p = t >= s.t - this.offsetTime ? 1 : t < e.t - this.offsetTime ? 0 : f((t - (e.t - this.offsetTime)) / (s.t - this.offsetTime - (e.t - this.offsetTime)))), this.sh && 1 !== e.h) {
                                        var C = e.s[r],
                                            D = e.e[r]; - 180 > C - D ? C += 360 : C - D > 180 && (C -= 360), x = C + (D - C) * p
                                    } else x = 1 === e.h ? e.s[r] : e.s[r] + (e.e[r] - e.s[r]) * p;
                                    1 === i ? (this.v = this.mult ? x * this.mult : x, this.pv = x, this.lastPValue != this.pv && (this.mdf = !0, this.lastPValue = this.pv)) : (this.v[r] = this.mult ? x * this.mult : x, this.pv[r] = x, this.lastPValue[r] !== this.pv[r] && (this.mdf = !0, this.lastPValue[r] = this.pv[r]))
                                }
                            }
                        }
                        this.lastFrame = t, this.frameId = this.elem.globalData.frameId
                    }
                }

                function e() {}

                function s(t, s, r) {
                    this.mult = r, this.v = r ? s.k * r : s.k, this.pv = s.k, this.mdf = !1, this.comp = t.comp, this.k = !1, this.kf = !1, this.vel = 0, this.getValue = e
                }

                function r(t, s, r) {
                    this.mult = r, this.data = s, this.mdf = !1, this.comp = t.comp, this.k = !1, this.kf = !1, this.frameId = -1, this.v = new Array(s.k.length), this.pv = new Array(s.k.length), this.lastValue = new Array(s.k.length);
                    var i = Array.apply(null, {
                        length: s.k.length
                    });
                    this.vel = i.map(function() {
                        return 0
                    });
                    var a, n = s.k.length;
                    for (a = 0; n > a; a += 1) this.v[a] = r ? s.k[a] * r : s.k[a], this.pv[a] = s.k[a];
                    this.getValue = e
                }

                function i(e, s, r) {
                    this.keyframes = s.k, this.offsetTime = e.data.st, this.lastValue = -99999, this.lastPValue = -99999, this.frameId = -1, this.k = !0, this.kf = !0, this.data = s, this.mult = r, this.elem = e, this.comp = e.comp, this.lastFrame = l, this.v = r ? s.k[0].s[0] * r : s.k[0].s[0], this.pv = s.k[0].s[0], this.getValue = t
                }

                function a(e, s, r) {
                    var i, a, n, o, h, p = s.k.length;
                    for (i = 0; p - 1 > i; i += 1) s.k[i].to && s.k[i].s && s.k[i].e && (a = s.k[i].s, n = s.k[i].e, o = s.k[i].to, h = s.k[i].ti, (2 == a.length && bez.pointOnLine2D(a[0], a[1], n[0], n[1], a[0] + o[0], a[1] + o[1]) && bez.pointOnLine2D(a[0], a[1], n[0], n[1], n[0] + h[0], n[1] + h[1]) || bez.pointOnLine3D(a[0], a[1], a[2], n[0], n[1], n[2], a[0] + o[0], a[1] + o[1], a[2] + o[2]) && bez.pointOnLine3D(a[0], a[1], a[2], n[0], n[1], n[2], n[0] + h[0], n[1] + h[1], n[2] + h[2])) && (s.k[i].to = null, s.k[i].ti = null));
                    this.keyframes = s.k, this.offsetTime = e.data.st, this.k = !0, this.kf = !0, this.mult = r, this.elem = e, this.comp = e.comp, this.getValue = t, this.frameId = -1, this.v = new Array(s.k[0].s.length), this.pv = new Array(s.k[0].s.length), this.lastValue = new Array(s.k[0].s.length), this.lastPValue = new Array(s.k[0].s.length), this.lastFrame = l
                }

                function n(t, e, n, o, h) {
                    var l;
                    if (2 === n) l = new p(t, e, h);
                    else if (7 === n) l = new TrimProperty(t, e, h);
                    else if (e.k.length)
                        if ("number" == typeof e.k[0]) l = new r(t, e, o);
                        else switch (n) {
                            case 0:
                                l = new i(t, e, o);
                                break;
                            case 1:
                                l = new a(t, e, o)
                        } else l = new s(t, e, o);
                    return l.k && h.push(l), l
                }

                function o(t, e, s, r) {
                    return new f(t, e, s, r)
                }

                function h(t, e, s) {
                    return new d(t, e, s)
                }
                var l = -999999,
                    p = function() {
                        function t() {
                            return this.p.k && this.p.getValue(), this.p.v
                        }

                        function e() {
                            return this.px.k && this.px.getValue(), this.px.v
                        }

                        function s() {
                            return this.py.k && this.py.getValue(), this.py.v
                        }

                        function r() {
                            return this.a.k && this.a.getValue(), this.a.v
                        }

                        function i() {
                            return this.or.k && this.or.getValue(), this.or.v
                        }

                        function a() {
                            return this.r.k && this.r.getValue(), this.r.v / degToRads
                        }

                        function n() {
                            return this.s.k && this.s.getValue(), this.s.v
                        }

                        function o() {
                            return this.o.k && this.o.getValue(), this.o.v
                        }

                        function h() {
                            return this.sk.k && this.sk.getValue(), this.sk.v
                        }

                        function l() {
                            return this.sa.k && this.sa.getValue(), this.sa.v
                        }

                        function p(t) {
                            var e, s = this.dynamicProperties.length;
                            for (e = 0; s > e; e += 1) this.dynamicProperties[e].getValue(), this.dynamicProperties[e].mdf && (this.mdf = !0);
                            this.a && t.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]), this.s && t.scale(this.s.v[0], this.s.v[1], this.s.v[2]), this.r ? t.rotate(-this.r.v) : t.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]), this.data.p.s ? this.data.p.z ? t.translate(this.px.v, this.py.v, -this.pz.v) : t.translate(this.px.v, this.py.v, 0) : t.translate(this.p.v[0], this.p.v[1], -this.p.v[2])
                        }

                        function m() {
                            if (this.elem.globalData.frameId !== this.frameId) {
                                this.mdf = !1;
                                var t, e = this.dynamicProperties.length;
                                for (t = 0; e > t; t += 1) this.dynamicProperties[t].getValue(), this.dynamicProperties[t].mdf && (this.mdf = !0);
                                this.mdf && (this.v.reset(), this.a && this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]), this.s && this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]), this.sk && this.v.skewFromAxis(-this.sk.v, this.sa.v), this.r ? this.v.rotate(-this.r.v) : this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]), this.data.p.s ? this.data.p.z ? this.v.translate(this.px.v, this.py.v, -this.pz.v) : this.v.translate(this.px.v, this.py.v, 0) : this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2])), this.frameId = this.elem.globalData.frameId
                            }
                        }

                        function f() {
                            this.inverted = !0, this.iv = new Matrix, this.k || (this.data.p.s ? this.iv.translate(this.px.v, this.py.v, -this.pz.v) : this.iv.translate(this.p.v[0], this.p.v[1], -this.p.v[2]), this.r ? this.iv.rotate(-this.r.v) : this.iv.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v), this.s && this.iv.scale(this.s.v[0], this.s.v[1], 1), this.a && this.iv.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]))
                        }
                        return function(d, c, u) {
                            this.elem = d, this.frameId = -1, this.dynamicProperties = [], this.mdf = !1, this.data = c, this.getValue = m, this.applyToMatrix = p, this.setInverted = f, this.v = new Matrix, c.p.s ? (this.px = PropertyFactory.getProp(d, c.p.x, 0, 0, this.dynamicProperties), this.py = PropertyFactory.getProp(d, c.p.y, 0, 0, this.dynamicProperties), c.p.z && (this.pz = PropertyFactory.getProp(d, c.p.z, 0, 0, this.dynamicProperties))) : this.p = PropertyFactory.getProp(d, c.p, 1, 0, this.dynamicProperties), c.r ? this.r = PropertyFactory.getProp(d, c.r, 0, degToRads, this.dynamicProperties) : c.rx && (this.rx = PropertyFactory.getProp(d, c.rx, 0, degToRads, this.dynamicProperties), this.ry = PropertyFactory.getProp(d, c.ry, 0, degToRads, this.dynamicProperties), this.rz = PropertyFactory.getProp(d, c.rz, 0, degToRads, this.dynamicProperties), this.or = PropertyFactory.getProp(d, c.or, 0, degToRads, this.dynamicProperties)), c.sk && (this.sk = PropertyFactory.getProp(d, c.sk, 0, degToRads, this.dynamicProperties), this.sa = PropertyFactory.getProp(d, c.sa, 0, degToRads, this.dynamicProperties)), c.a && (this.a = PropertyFactory.getProp(d, c.a, 1, 0, this.dynamicProperties)), c.s && (this.s = PropertyFactory.getProp(d, c.s, 1, .01, this.dynamicProperties)), this.o = c.o ? PropertyFactory.getProp(d, c.o, 0, .01, u) : {
                                mdf: !1,
                                v: 1
                            }, this.dynamicProperties.length ? u.push(this) : (this.a && this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]), this.s && this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]), this.sk && this.v.skewFromAxis(-this.sk.v, this.sa.v), this.r ? this.v.rotate(-this.r.v) : this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]), this.data.p.s ? c.p.z ? this.v.translate(this.px.v, this.py.v, -this.pz.v) : this.v.translate(this.px.v, this.py.v, 0) : this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2])), Object.defineProperty(this, "position", {
                                get: t
                            }), Object.defineProperty(this, "xPosition", {
                                get: e
                            }), Object.defineProperty(this, "yPosition", {
                                get: s
                            }), Object.defineProperty(this, "orientation", {
                                get: i
                            }), Object.defineProperty(this, "anchorPoint", {
                                get: r
                            }), Object.defineProperty(this, "rotation", {
                                get: a
                            }), Object.defineProperty(this, "scale", {
                                get: n
                            }), Object.defineProperty(this, "opacity", {
                                get: o
                            }), Object.defineProperty(this, "skew", {
                                get: h
                            }), Object.defineProperty(this, "skewAxis", {
                                get: l
                            })
                        }
                    }(),
                    m = function() {
                        function t(t) {
                            if (this.prop.getValue(), this.cmdf = !1, this.omdf = !1, this.prop.mdf || t) {
                                var e, s, r, i = 4 * this.data.p;
                                for (e = 0; i > e; e += 1) s = e % 4 === 0 ? 100 : 255, r = Math.round(this.prop.v[e] * s), this.c[e] !== r && (this.c[e] = r, this.cmdf = !0);
                                if (this.o.length)
                                    for (i = this.prop.v.length, e = 4 * this.data.p; i > e; e += 1) s = e % 2 === 0 ? 100 : 1, r = e % 2 === 0 ? Math.round(100 * this.prop.v[e]) : this.prop.v[e], this.o[e - 4 * this.data.p] !== r && (this.o[e - 4 * this.data.p] = r, this.omdf = !0)
                            }
                        }

                        function e(e, s, r) {
                            this.prop = n(e, s.k, 1, null, []), this.data = s, this.k = this.prop.k, this.c = Array.apply(null, {
                                length: 4 * s.p
                            });
                            var i = s.k.k[0].s ? s.k.k[0].s.length - 4 * s.p : s.k.k.length - 4 * s.p;
                            this.o = Array.apply(null, {
                                length: i
                            }), this.cmdf = !1, this.omdf = !1, this.getValue = t, this.prop.k && r.push(this), this.getValue(!0)
                        }
                        return function(t, s, r) {
                            return new e(t, s, r)
                        }
                    }(),
                    f = function() {
                        function t(t) {
                            var e = 0,
                                s = this.dataProps.length;
                            if (this.elem.globalData.frameId !== this.frameId || t) {
                                for (this.mdf = !1, this.frameId = this.elem.globalData.frameId; s > e;) {
                                    if (this.dataProps[e].p.mdf) {
                                        this.mdf = !0;
                                        break
                                    }
                                    e += 1
                                }
                                if (this.mdf || t)
                                    for ("svg" === this.renderer && (this.dasharray = ""), e = 0; s > e; e += 1) "o" != this.dataProps[e].n ? "svg" === this.renderer ? this.dasharray += " " + this.dataProps[e].p.v : this.dasharray[e] = this.dataProps[e].p.v : this.dashoffset = this.dataProps[e].p.v
                            }
                        }
                        return function(e, s, r, i) {
                            this.elem = e, this.frameId = -1, this.dataProps = new Array(s.length), this.renderer = r, this.mdf = !1, this.k = !1, this.dasharray = "svg" === this.renderer ? "" : new Array(s.length - 1), this.dashoffset = 0;
                            var a, n, o = s.length;
                            for (a = 0; o > a; a += 1) n = PropertyFactory.getProp(e, s[a].v, 0, 0, i), this.k = !!n.k || this.k, this.dataProps[a] = {
                                n: s[a].n,
                                p: n
                            };
                            this.getValue = t, this.k ? i.push(this) : this.getValue(!0)
                        }
                    }(),
                    d = function() {
                        function t() {
                            if (this.dynamicProperties.length) {
                                var t, e = this.dynamicProperties.length;
                                for (t = 0; e > t; t += 1) this.dynamicProperties[t].getValue(), this.dynamicProperties[t].mdf && (this.mdf = !0)
                            }
                            var s = this.data.totalChars,
                                r = 2 === this.data.r ? 1 : 100 / s,
                                i = this.o.v / r,
                                a = this.s.v / r + i,
                                n = this.e.v / r + i;
                            if (a > n) {
                                var o = a;
                                a = n, n = o
                            }
                            this.finalS = a, this.finalE = n
                        }

                        function e(t) {
                            var e = BezierFactory.getBezierEasing(this.ne.v / 100, 0, 1 - this.xe.v / 100, 1).get,
                                a = 0,
                                n = this.finalS,
                                o = this.finalE,
                                h = this.data.sh;
                            if (2 == h) a = o === n ? t >= o ? 1 : 0 : s(0, r(.5 / (o - n) + (t - n) / (o - n), 1)), a = e(a);
                            else if (3 == h) a = o === n ? t >= o ? 0 : 1 : 1 - s(0, r(.5 / (o - n) + (t - n) / (o - n), 1)), a = e(a);
                            else if (4 == h) o === n ? a = t >= o ? 0 : 1 : (a = s(0, r(.5 / (o - n) + (t - n) / (o - n), 1)), .5 > a ? a *= 2 : a = 1 - a);
                            else if (5 == h)
                                if (o === n) a = t >= o ? 0 : 1;
                                else {
                                    var l = o - n;
                                    a = -4 / (l * l) * t * t + 4 / l * t
                                } else 6 == h ? a = o === n ? t >= o ? 0 : 1 : (1 + (Math.cos(Math.PI + 2 * Math.PI * (t - n) / (o - n)) + 0)) / 2 : t >= i(n) && (a = 0 > t - n ? 1 - (n - t) : s(0, r(o - t, 1)));
                            return a * this.a.v
                        }
                        var s = Math.max,
                            r = Math.min,
                            i = Math.floor;
                        return this.mdf = !1,
                            function(s, r, i) {
                                this.mdf = !1, this.k = !1, this.data = r, this.dynamicProperties = [], this.getValue = t, this.getMult = e, this.comp = s.comp, this.finalS = 0, this.finalE = 0, this.s = PropertyFactory.getProp(s, r.s || {
                                    k: 0
                                }, 0, 0, this.dynamicProperties), this.e = "e" in r ? PropertyFactory.getProp(s, r.e, 0, 0, this.dynamicProperties) : {
                                    v: 2 === r.r ? r.totalChars : 100
                                }, this.o = PropertyFactory.getProp(s, r.o || {
                                    k: 0
                                }, 0, 0, this.dynamicProperties), this.xe = PropertyFactory.getProp(s, r.xe || {
                                    k: 0
                                }, 0, 0, this.dynamicProperties), this.ne = PropertyFactory.getProp(s, r.ne || {
                                    k: 0
                                }, 0, 0, this.dynamicProperties), this.a = PropertyFactory.getProp(s, r.a, 0, .01, this.dynamicProperties), this.dynamicProperties.length ? i.push(this) : this.getValue()
                            }
                    }(),
                    c = {};
                return c.getProp = n, c.getDashProp = o, c.getTextSelectorProp = h, c.getGradientProp = m, c
            }(),
            ShapePropertyFactory = function() {
                function t() {
                    this.mdf = !1;
                    var t = this.comp.renderedFrame - this.offsetTime;
                    if (this.lastFrame !== n && (this.lastFrame < this.keyframes[0].t - this.offsetTime && t < this.keyframes[0].t - this.offsetTime || this.lastFrame > this.keyframes[this.keyframes.length - 1].t - this.offsetTime && t > this.keyframes[this.keyframes.length - 1].t - this.offsetTime));
                    else {
                        var e, s, r;
                        if (t < this.keyframes[0].t - this.offsetTime) e = this.keyframes[0].s[0], r = !0;
                        else if (t > this.keyframes[this.keyframes.length - 1].t - this.offsetTime) e = 1 === this.keyframes[this.keyframes.length - 2].h ? this.keyframes[this.keyframes.length - 1].s[0] : this.keyframes[this.keyframes.length - 2].e[0], r = !0;
                        else {
                            for (var i, a, o, h, l, p, m = 0, f = this.keyframes.length - 1, d = !0; d && (i = this.keyframes[m], a = this.keyframes[m + 1], !(a.t - this.offsetTime > t));) f - 1 > m ? m += 1 : d = !1;
                            r = 1 === i.h, r && m === f && (i = a);
                            var c;
                            if (!r) {
                                var u;
                                i.__fnct ? u = i.__fnct : (u = BezierFactory.getBezierEasing(i.o.x, i.o.y, i.i.x, i.i.y).get, i.__fnct = u), c = t >= a.t - this.offsetTime ? 1 : t < i.t - this.offsetTime ? 0 : u((t - (i.t - this.offsetTime)) / (a.t - this.offsetTime - (i.t - this.offsetTime))), s = i.e[0]
                            }
                            e = i.s[0]
                        }
                        this.v.i.length !== e.i.length && (this.v.i.length = e.i.length, this.v.o.length = e.o.length, this.v.v.length = e.v.length, this.pv.i.length = e.i.length, this.pv.o.length = e.o.length, this.pv.v.length = e.v.length), h = this.v.i.length, p = e.i[0].length;
                        var y, g = !1;
                        for (o = 0; h > o; o += 1)
                            for (this.v.i[o] || (this.v.i[o] = Array.apply(null, {
                                    length: p
                                }), this.v.o[o] = Array.apply(null, {
                                    length: p
                                }), this.v.v[o] = Array.apply(null, {
                                    length: p
                                }), this.pv.i[o] = Array.apply(null, {
                                    length: p
                                }), this.pv.o[o] = Array.apply(null, {
                                    length: p
                                }), this.pv.v[o] = Array.apply(null, {
                                    length: p
                                })), l = 0; p > l; l += 1) r ? (y = e.i[o][l], this.v.i[o][l] !== y && (this.v.i[o][l] = y, this.pv.i[o][l] = y, g = !0), y = e.o[o][l], this.v.o[o][l] !== y && (this.v.o[o][l] = y, this.pv.o[o][l] = y, g = !0), y = e.v[o][l], this.v.v[o][l] !== y && (this.v.v[o][l] = y, this.pv.v[o][l] = y, g = !0)) : (y = e.i[o][l] + (s.i[o][l] - e.i[o][l]) * c, this.v.i[o][l] !== y && (this.v.i[o][l] = y, this.pv.i[o][l] = y, g = !0), y = e.o[o][l] + (s.o[o][l] - e.o[o][l]) * c, this.v.o[o][l] !== y && (this.v.o[o][l] = y, this.pv.o[o][l] = y, g = !0), y = e.v[o][l] + (s.v[o][l] - e.v[o][l]) * c, this.v.v[o][l] !== y && (this.v.v[o][l] = y, this.pv.v[o][l] = y, g = !0));
                        this.mdf = g, this.paths.length = 0, this.paths[0] = this.v
                    }
                    this.lastFrame = t
                }

                function e() {
                    return this.v
                }

                function s() {
                    this.paths.length ? (this.paths.length = 1, this.paths[0] = this.v) : this.paths = [this.v]
                }

                function r(t, r, i) {
                    this.comp = t.comp, this.k = !1, this.mdf = !1, this.closed = 3 === i ? r.cl : r.closed, this.numNodes = 3 === i ? r.pt.k.v.length : r.ks.k.v.length, this.v = 3 === i ? r.pt.k : r.ks.k, this.getValue = e, this.pv = this.v, this.v.c = this.closed, this.paths = [this.v], this.reset = s
                }

                function i(e, r, i) {
                    this.comp = e.comp, this.offsetTime = e.data.st, this.getValue = t, this.keyframes = 3 === i ? r.pt.k : r.ks.k, this.k = !0, this.closed = 3 === i ? r.cl : r.closed;
                    var a, o = this.keyframes[0].s[0].i.length,
                        h = this.keyframes[0].s[0].i[0].length;
                    for (this.numNodes = o, this.v = {
                            i: Array.apply(null, {
                                length: o
                            }),
                            o: Array.apply(null, {
                                length: o
                            }),
                            v: Array.apply(null, {
                                length: o
                            }),
                            c: this.closed
                        }, this.pv = {
                            i: Array.apply(null, {
                                length: o
                            }),
                            o: Array.apply(null, {
                                length: o
                            }),
                            v: Array.apply(null, {
                                length: o
                            })
                        }, a = 0; o > a; a += 1) this.v.i[a] = Array.apply(null, {
                        length: h
                    }), this.v.o[a] = Array.apply(null, {
                        length: h
                    }), this.v.v[a] = Array.apply(null, {
                        length: h
                    }), this.pv.i[a] = Array.apply(null, {
                        length: h
                    }), this.pv.o[a] = Array.apply(null, {
                        length: h
                    }), this.pv.v[a] = Array.apply(null, {
                        length: h
                    });
                    this.paths = [], this.lastFrame = n, this.reset = s
                }

                function a(t, e, s, a) {
                    var n;
                    if (3 === s || 4 === s) {
                        var p = 3 === s ? e.pt.k : e.ks.k;
                        n = p.length ? new i(t, e, s) : new r(t, e, s)
                    } else 5 === s ? n = new l(t, e) : 6 === s ? n = new o(t, e) : 7 === s && (n = new h(t, e));
                    return n.k && a.push(n), n
                }
                var n = -999999,
                    o = function() {
                        function t() {
                            var t = this.p.v[0],
                                e = this.p.v[1],
                                s = this.s.v[0] / 2,
                                i = this.s.v[1] / 2;
                            2 !== this.d && 3 !== this.d ? (this.v.v[0] = [t, e - i], this.v.i[0] = [t - s * r, e - i], this.v.o[0] = [t + s * r, e - i], this.v.v[1] = [t + s, e], this.v.i[1] = [t + s, e - i * r], this.v.o[1] = [t + s, e + i * r], this.v.v[2] = [t, e + i], this.v.i[2] = [t + s * r, e + i], this.v.o[2] = [t - s * r, e + i], this.v.v[3] = [t - s, e], this.v.i[3] = [t - s, e + i * r], this.v.o[3] = [t - s, e - i * r]) : (this.v.v[0] = [t, e - i], this.v.o[0] = [t - s * r, e - i], this.v.i[0] = [t + s * r, e - i], this.v.v[1] = [t - s, e], this.v.o[1] = [t - s, e + i * r], this.v.i[1] = [t - s, e - i * r], this.v.v[2] = [t, e + i], this.v.o[2] = [t + s * r, e + i], this.v.i[2] = [t - s * r, e + i], this.v.v[3] = [t + s, e], this.v.o[3] = [t + s, e - i * r], this.v.i[3] = [t + s, e + i * r]), this.paths.length = 0, this.paths[0] = this.v
                        }

                        function e(t) {
                            var e, s = this.dynamicProperties.length;
                            if (this.elem.globalData.frameId !== this.frameId) {
                                for (this.mdf = !1, this.frameId = this.elem.globalData.frameId, e = 0; s > e; e += 1) this.dynamicProperties[e].getValue(t), this.dynamicProperties[e].mdf && (this.mdf = !0);
                                this.mdf && (this.convertEllToPath(), this.paths.length = 0, this.paths[0] = this.v)
                            }
                        }
                        var r = roundCorner;
                        return function(r, i) {
                            this.v = {
                                v: Array.apply(null, {
                                    length: 4
                                }),
                                i: Array.apply(null, {
                                    length: 4
                                }),
                                o: Array.apply(null, {
                                    length: 4
                                }),
                                c: !0
                            }, this.numNodes = 4, this.d = i.d, this.dynamicProperties = [], this.paths = [], i.closed = !0, this.closed = !0, this.elem = r, this.comp = r.comp, this.frameId = -1, this.mdf = !1, this.getValue = e, this.convertEllToPath = t, this.reset = s, this.p = PropertyFactory.getProp(r, i.p, 1, 0, this.dynamicProperties), this.s = PropertyFactory.getProp(r, i.s, 1, 0, this.dynamicProperties), this.dynamicProperties.length ? this.k = !0 : this.convertEllToPath()
                        }
                    }(),
                    h = function() {
                        function t() {
                            var t = Math.floor(this.pt.v),
                                e = 2 * Math.PI / t;
                            this.v.v.length = t, this.v.i.length = t, this.v.o.length = t;
                            var s, r = this.or.v,
                                i = this.os.v,
                                a = 2 * Math.PI * r / (4 * t),
                                n = -Math.PI / 2,
                                o = 3 === this.data.d ? -1 : 1;
                            for (n += this.r.v, s = 0; t > s; s += 1) {
                                var h = r * Math.cos(n),
                                    l = r * Math.sin(n),
                                    p = 0 === h && 0 === l ? 0 : l / Math.sqrt(h * h + l * l),
                                    m = 0 === h && 0 === l ? 0 : -h / Math.sqrt(h * h + l * l);
                                h += +this.p.v[0], l += +this.p.v[1], this.v.v[s] = [h, l], this.v.i[s] = [h + p * a * i * o, l + m * a * i * o], this.v.o[s] = [h - p * a * i * o, l - m * a * i * o], n += e * o
                            }
                            this.numNodes = t, this.paths.length = 0, this.paths[0] = this.v
                        }

                        function e() {
                            var t = 2 * Math.floor(this.pt.v),
                                e = 2 * Math.PI / t;
                            this.v.v.length = t, this.v.i.length = t, this.v.o.length = t;
                            var s, r, i, a, n = !0,
                                o = this.or.v,
                                h = this.ir.v,
                                l = this.os.v,
                                p = this.is.v,
                                m = 2 * Math.PI * o / (2 * t),
                                f = 2 * Math.PI * h / (2 * t),
                                d = -Math.PI / 2;
                            d += this.r.v;
                            var c = 3 === this.data.d ? -1 : 1;
                            for (s = 0; t > s; s += 1) {
                                r = n ? o : h, i = n ? l : p, a = n ? m : f;
                                var u = r * Math.cos(d),
                                    y = r * Math.sin(d),
                                    g = 0 === u && 0 === y ? 0 : y / Math.sqrt(u * u + y * y),
                                    v = 0 === u && 0 === y ? 0 : -u / Math.sqrt(u * u + y * y);
                                u += +this.p.v[0], y += +this.p.v[1], this.v.v[s] = [u, y], this.v.i[s] = [u + g * a * i * c, y + v * a * i * c], this.v.o[s] = [u - g * a * i * c, y - v * a * i * c], n = !n, d += e * c
                            }
                            this.numNodes = t, this.paths.length = 0, this.paths[0] = this.v
                        }

                        function r() {
                            if (this.elem.globalData.frameId !== this.frameId) {
                                this.mdf = !1, this.frameId = this.elem.globalData.frameId;
                                var t, e = this.dynamicProperties.length;
                                for (t = 0; e > t; t += 1) this.dynamicProperties[t].getValue(), this.dynamicProperties[t].mdf && (this.mdf = !0);
                                this.mdf && this.convertToPath()
                            }
                        }
                        return function(i, a) {
                            this.v = {
                                v: [],
                                i: [],
                                o: [],
                                c: !0
                            }, this.elem = i, this.comp = i.comp, this.data = a, this.frameId = -1, this.d = a.d, this.dynamicProperties = [], this.mdf = !1, a.closed = !0, this.closed = !0, this.getValue = r, this.reset = s, 1 === a.sy ? (this.ir = PropertyFactory.getProp(i, a.ir, 0, 0, this.dynamicProperties), this.is = PropertyFactory.getProp(i, a.is, 0, .01, this.dynamicProperties), this.convertToPath = e) : this.convertToPath = t, this.pt = PropertyFactory.getProp(i, a.pt, 0, 0, this.dynamicProperties), this.p = PropertyFactory.getProp(i, a.p, 1, 0, this.dynamicProperties), this.r = PropertyFactory.getProp(i, a.r, 0, degToRads, this.dynamicProperties), this.or = PropertyFactory.getProp(i, a.or, 0, 0, this.dynamicProperties), this.os = PropertyFactory.getProp(i, a.os, 0, .01, this.dynamicProperties), this.paths = [], this.dynamicProperties.length ? this.k = !0 : this.convertToPath()
                        }
                    }(),
                    l = function() {
                        function t(t) {
                            if (this.elem.globalData.frameId !== this.frameId) {
                                this.mdf = !1, this.frameId = this.elem.globalData.frameId;
                                var e, s = this.dynamicProperties.length;
                                for (e = 0; s > e; e += 1) this.dynamicProperties[e].getValue(t), this.dynamicProperties[e].mdf && (this.mdf = !0);
                                this.mdf && this.convertRectToPath()
                            }
                        }

                        function e() {
                            var t = this.p.v[0],
                                e = this.p.v[1],
                                s = this.s.v[0] / 2,
                                r = this.s.v[1] / 2,
                                i = bm_min(s, r, this.r.v),
                                a = i * (1 - roundCorner);
                            2 === this.d || 1 === this.d ? (this.v.v[0] = [t + s, e - r + i], this.v.o[0] = this.v.v[0], this.v.i[0] = [t + s, e - r + a], this.v.v[1] = [t + s, e + r - i], this.v.o[1] = [t + s, e + r - a], this.v.i[1] = this.v.v[1], this.v.v[2] = [t + s - i, e + r], this.v.o[2] = this.v.v[2], this.v.i[2] = [t + s - a, e + r], this.v.v[3] = [t - s + i, e + r], this.v.o[3] = [t - s + a, e + r], this.v.i[3] = this.v.v[3], this.v.v[4] = [t - s, e + r - i], this.v.o[4] = this.v.v[4], this.v.i[4] = [t - s, e + r - a], this.v.v[5] = [t - s, e - r + i], this.v.o[5] = [t - s, e - r + a], this.v.i[5] = this.v.v[5], this.v.v[6] = [t - s + i, e - r], this.v.o[6] = this.v.v[6], this.v.i[6] = [t - s + a, e - r], this.v.v[7] = [t + s - i, e - r], this.v.o[7] = [t + s - a, e - r], this.v.i[7] = this.v.v[7]) : (this.v.v[0] = [t + s, e - r + i], this.v.o[0] = [t + s, e - r + a], this.v.i[0] = this.v.v[0], this.v.v[1] = [t + s - i, e - r], this.v.o[1] = this.v.v[1], this.v.i[1] = [t + s - a, e - r], this.v.v[2] = [t - s + i, e - r], this.v.o[2] = [t - s + a, e - r], this.v.i[2] = this.v.v[2], this.v.v[3] = [t - s, e - r + i], this.v.o[3] = this.v.v[3], this.v.i[3] = [t - s, e - r + a], this.v.v[4] = [t - s, e + r - i], this.v.o[4] = [t - s, e + r - a], this.v.i[4] = this.v.v[4], this.v.v[5] = [t - s + i, e + r], this.v.o[5] = this.v.v[5], this.v.i[5] = [t - s + a, e + r], this.v.v[6] = [t + s - i, e + r], this.v.o[6] = [t + s - a, e + r], this.v.i[6] = this.v.v[6], this.v.v[7] = [t + s, e + r - i], this.v.o[7] = this.v.v[7], this.v.i[7] = [t + s, e + r - a]), this.paths.length = 0, this.paths[0] = this.v
                        }
                        return function(r, i) {
                            this.v = {
                                v: Array.apply(null, {
                                    length: 8
                                }),
                                i: Array.apply(null, {
                                    length: 8
                                }),
                                o: Array.apply(null, {
                                    length: 8
                                }),
                                c: !0
                            }, this.paths = [], this.numNodes = 8, this.elem = r, this.comp = r.comp, this.frameId = -1, this.d = i.d, this.dynamicProperties = [], this.mdf = !1, i.closed = !0, this.closed = !0, this.getValue = t, this.convertRectToPath = e, this.reset = s, this.p = PropertyFactory.getProp(r, i.p, 1, 0, this.dynamicProperties), this.s = PropertyFactory.getProp(r, i.s, 1, 0, this.dynamicProperties), this.r = PropertyFactory.getProp(r, i.r, 0, 0, this.dynamicProperties), this.dynamicProperties.length ? this.k = !0 : this.convertRectToPath()
                        }
                    }(),
                    p = {};
                return p.getShapeProp = a, p
            }(),
            ShapeModifiers = function() {
                function t(t, e) {
                    r[t] || (r[t] = e)
                }

                function e(t, e, s, i) {
                    return new r[t](e, s, i)
                }
                var s = {},
                    r = {};
                return s.registerModifier = t, s.getModifier = e, s
            }();
        ShapeModifier.prototype.initModifierProperties = function() {}, ShapeModifier.prototype.addShapeToModifier = function() {}, ShapeModifier.prototype.addShape = function(t) {
            this.closed || (this.shapes.push({
                shape: t,
                last: []
            }), this.addShapeToModifier(t))
        }, ShapeModifier.prototype.init = function(t, e, s) {
            this.elem = t, this.frameId = -1, this.shapes = [], this.dynamicProperties = [], this.mdf = !1, this.closed = !1, this.k = !1, this.isTrimming = !1, this.comp = t.comp, this.initModifierProperties(t, e), this.dynamicProperties.length ? (this.k = !0, s.push(this)) : this.getValue(!0)
        }, extendPrototype(ShapeModifier, TrimModifier), TrimModifier.prototype.processKeys = function(t) {
            if (this.elem.globalData.frameId !== this.frameId || t) {
                this.mdf = !!t, this.frameId = this.elem.globalData.frameId;
                var e, s = this.dynamicProperties.length;
                for (e = 0; s > e; e += 1) this.dynamicProperties[e].getValue(), this.dynamicProperties[e].mdf && (this.mdf = !0);
                if (this.mdf || t) {
                    var r = this.o.v % 360 / 360;
                    0 > r && (r += 1);
                    var i = this.s.v + r,
                        a = this.e.v + r;
                    if (i > a) {
                        var n = i;
                        i = a, a = n
                    }
                    this.sValue = i, this.eValue = a, this.oValue = r
                }
            }
        }, TrimModifier.prototype.initModifierProperties = function(t, e) {
            this.sValue = 0, this.eValue = 0, this.oValue = 0, this.getValue = this.processKeys, this.s = PropertyFactory.getProp(t, e.s, 0, .01, this.dynamicProperties), this.e = PropertyFactory.getProp(t, e.e, 0, .01, this.dynamicProperties), this.o = PropertyFactory.getProp(t, e.o, 0, 0, this.dynamicProperties), this.dynamicProperties.length || this.getValue(!0)
        }, TrimModifier.prototype.getSegmentsLength = function(t) {
            var e, s = t.c,
                r = t.v,
                i = t.o,
                a = t.i,
                n = r.length,
                o = [],
                h = 0;
            for (e = 0; n - 1 > e; e += 1) o[e] = bez.getBezierLength(r[e], r[e + 1], i[e], a[e + 1]), h += o[e].addedLength;
            return s && (o[e] = bez.getBezierLength(r[e], r[0], i[e], a[0]), h += o[e].addedLength), {
                lengths: o,
                totalLength: h
            }
        }, TrimModifier.prototype.processShapes = function(t) {
            var e, s, r, i, a, n, o, h = this.shapes.length,
                l = this.sValue,
                p = this.eValue,
                m = 0;
            if (p === l)
                for (s = 0; h > s; s += 1) this.shapes[s].shape.paths = [], this.shapes[s].shape.mdf = !0;
            else {
                var f, d, c = [];
                for (s = 0; h > s; s += 1) {
                    if (f = this.shapes[s], f.shape.mdf || this.mdf || t) {
                        if (e = f.shape.paths, i = e.length, o = 0, !f.shape.mdf && f.pathsData) o = f.totalShapeLength;
                        else {
                            for (a = [], r = 0; i > r; r += 1) n = this.getSegmentsLength(e[r]), a.push(n), o += n.totalLength;
                            f.totalShapeLength = o, f.pathsData = a
                        }
                        m += o
                    } else f.shape.paths = f.last;
                    f.shape.mdf = !0
                }
                for (s = 0; h > s; s += 1)
                    if (d = [], f = this.shapes[s], f.shape.mdf) {
                        c.length = 0, 1 >= p ? c.push({
                            s: f.totalShapeLength * l,
                            e: f.totalShapeLength * p
                        }) : l >= 1 ? c.push({
                            s: f.totalShapeLength * (l - 1),
                            e: f.totalShapeLength * (p - 1)
                        }) : (c.push({
                            s: f.totalShapeLength * l,
                            e: f.totalShapeLength
                        }), c.push({
                            s: 0,
                            e: f.totalShapeLength * (p - 1)
                        }));
                        var u, y = this.addShapes(f, c[0]);
                        d.push(y), c.length > 1 && (f.shape.closed ? this.addShapes(f, c[1], y) : (y.i[0] = [y.v[0][0], y.v[0][1]], u = y.v.length - 1, y.o[u] = [y.v[u][0], y.v[u][1]], y = this.addShapes(f, c[1]), d.push(y))), y.i[0] = [y.v[0][0], y.v[0][1]], u = y.v.length - 1, y.o[u] = [y.v[u][0], y.v[u][1]], f.last = d, f.shape.paths = d
                    }
            }
            this.dynamicProperties.length || (this.mdf = !1)
        }, TrimModifier.prototype.addSegment = function(t, e, s, r, i, a) {
            i.o[a] = e, i.i[a + 1] = s, i.v[a + 1] = r, i.v[a] = t
        }, TrimModifier.prototype.addShapes = function(t, e, s) {
            var r, i, a, n, o, h, l, p = t.pathsData,
                m = t.shape.paths,
                f = m.length,
                d = 0;
            for (s ? o = s.v.length - 1 : (s = {
                    c: !1,
                    v: [],
                    i: [],
                    o: []
                }, o = 0), r = 0; f > r; r += 1) {
                for (h = p[r].lengths, a = m[r].c ? h.length : h.length + 1, i = 1; a > i; i += 1)
                    if (n = h[i - 1], d + n.addedLength < e.s) d += n.addedLength;
                    else {
                        if (d > e.e) break;
                        e.s <= d && e.e >= d + n.addedLength ? this.addSegment(m[r].v[i - 1], m[r].o[i - 1], m[r].i[i], m[r].v[i], s, o) : (l = bez.getNewSegment(m[r].v[i - 1], m[r].v[i], m[r].o[i - 1], m[r].i[i], (e.s - d) / n.addedLength, (e.e - d) / n.addedLength, h[i - 1]), this.addSegment(l.pt1, l.pt3, l.pt4, l.pt2, s, o)), d += n.addedLength, o += 1
                    }
                if (m[r].c && d <= e.e) {
                    var c = h[i - 1].addedLength;
                    e.s <= d && e.e >= d + c ? this.addSegment(m[r].v[i - 1], m[r].o[i - 1], m[r].i[0], m[r].v[0], s, o) : (l = bez.getNewSegment(m[r].v[i - 1], m[r].v[0], m[r].o[i - 1], m[r].i[0], (e.s - d) / c, (e.e - d) / c, h[i - 1]), this.addSegment(l.pt1, l.pt3, l.pt4, l.pt2, s, o))
                }
            }
            return s
        }, ShapeModifiers.registerModifier("tm", TrimModifier), extendPrototype(ShapeModifier, RoundCornersModifier), RoundCornersModifier.prototype.processKeys = function(t) {
            if (this.elem.globalData.frameId !== this.frameId || t) {
                this.mdf = !!t, this.frameId = this.elem.globalData.frameId;
                var e, s = this.dynamicProperties.length;
                for (e = 0; s > e; e += 1) this.dynamicProperties[e].getValue(), this.dynamicProperties[e].mdf && (this.mdf = !0)
            }
        }, RoundCornersModifier.prototype.initModifierProperties = function(t, e) {
            this.getValue = this.processKeys, this.rd = PropertyFactory.getProp(t, e.r, 0, null, this.dynamicProperties), this.dynamicProperties.length || this.getValue(!0)
        }, RoundCornersModifier.prototype.processPath = function(t, e) {
            var s, r, i, a, n, o, h, l, p, m, f = t.v.length,
                d = [],
                c = [],
                u = [];
            for (s = 0; f > s; s += 1) r = t.v[s], a = t.o[s], i = t.i[s], r[0] === a[0] && r[1] === a[1] && r[0] === i[0] && r[1] === i[1] ? 0 !== s && s !== f - 1 || t.c ? (n = 0 === s ? t.v[f - 1] : t.v[s - 1], p = Math.sqrt(Math.pow(r[0] - n[0], 2) + Math.pow(r[1] - n[1], 2)), m = Math.min(p / 2, e) / p, o = [r[0] + (n[0] - r[0]) * m, r[1] - (r[1] - n[1]) * m], l = o, h = [o[0] - (o[0] - r[0]) * roundCorner, o[1] - (o[1] - r[1]) * roundCorner], d.push(o), c.push(h), u.push(l), n = s === f - 1 ? t.v[0] : t.v[s + 1], p = Math.sqrt(Math.pow(r[0] - n[0], 2) + Math.pow(r[1] - n[1], 2)), m = Math.min(p / 2, e) / p, o = [r[0] + (n[0] - r[0]) * m, r[1] + (n[1] - r[1]) * m], l = [o[0] - (o[0] - r[0]) * roundCorner, o[1] - (o[1] - r[1]) * roundCorner], h = o, d.push(o), c.push(h), u.push(l)) : (d.push(r), c.push(a), u.push(i)) : (d.push(t.v[s]), c.push(t.o[s]), u.push(t.i[s]));
            return {
                v: d,
                o: c,
                i: u,
                c: t.c
            }
        }, RoundCornersModifier.prototype.processShapes = function() {
            var t, e, s, r, i = this.shapes.length,
                a = this.rd.v;
            if (0 !== a) {
                var n, o = [];
                for (e = 0; i > e; e += 1)
                    if (n = this.shapes[e], n.shape.mdf || this.mdf) {
                        for (n.shape.mdf = !0, t = n.shape.paths, r = t.length, s = 0; r > s; s += 1) o.push(this.processPath(t[s], a));
                        n.shape.paths = o, n.last = o
                    } else n.shape.paths = n.last
            }
            this.dynamicProperties.length || (this.mdf = !1)
        }, ShapeModifiers.registerModifier("rd", RoundCornersModifier);
        var ImagePreloader = function() {
            function t() {
                this.loadedAssets += 1, this.loadedAssets === this.totalImages
            }

            function e(t) {
                var e = "";
                if (this.assetsPath) {
                    var s = t.p; - 1 !== s.indexOf("images/") && (s = s.split("/")[1]), e = this.assetsPath + s
                } else e = this.path, e += t.u ? t.u : "", e += t.p;
                return e
            }

            function s(e) {
                var s = document.createElement("img");
                s.addEventListener("load", t.bind(this), !1), s.addEventListener("error", t.bind(this), !1), s.src = e
            }

            function r(t) {
                this.totalAssets = t.length;
                var r;
                for (r = 0; r < this.totalAssets; r += 1) t[r].layers || (s.bind(this)(e.bind(this)(t[r])), this.totalImages += 1)
            }

            function i(t) {
                this.path = t || ""
            }

            function a(t) {
                this.assetsPath = t || ""
            }
            return function() {
                this.loadAssets = r, this.setAssetsPath = a, this.setPath = i, this.assetsPath = "", this.path = "", this.totalAssets = 0, this.totalImages = 0, this.loadedAssets = 0
            }
        }();
        BaseRenderer.prototype.checkLayers = function(t) {
            var e, s, r = this.layers.length;
            for (this.completeLayers = !0, e = r - 1; e >= 0; e--) this.elements[e] || (s = this.layers[e], s.ip - s.st <= t - this.layers[e].st && s.op - s.st > t - this.layers[e].st && this.buildItem(e)), this.completeLayers = !!this.elements[e] && this.completeLayers
        }, BaseRenderer.prototype.createItem = function(t) {
            switch (t.ty) {
                case 2:
                    return this.createImage(t);
                case 0:
                    return this.createComp(t);
                case 1:
                    return this.createSolid(t);
                case 4:
                    return this.createShape(t);
                case 5:
                    return this.createText(t);
                case 99:
                    return null
            }
            return this.createBase(t)
        }, BaseRenderer.prototype.buildAllItems = function() {
            var t, e = this.layers.length;
            for (t = 0; e > t; t += 1) this.buildItem(t)
        }, BaseRenderer.prototype.includeLayers = function(t) {
            this.completeLayers = !1;
            var e, s, r = t.length,
                i = this.layers.length;
            for (e = 0; r > e; e += 1)
                for (s = 0; i > s;) {
                    if (this.layers[s].id == t[e].id) {
                        this.layers[s] = t[e];
                        break
                    }
                    s += 1
                }
        }, BaseRenderer.prototype.setProjectInterface = function(t) {
            this.globalData.projectInterface = t
        }, BaseRenderer.prototype.initItems = function() {
            this.globalData.progressiveLoad || this.buildAllItems()
        }, BaseRenderer.prototype.buildElementParenting = function(t, e) {
            for (var s = this.elements, r = this.layers, i = 0, a = r.length; a > i;) r[i].ind == e && (s[i] || this.buildItem(i), t.getHierarchy().push(s[i]), void 0 !== r[i].parent && this.buildElementParenting(t, r[i].parent)), i += 1
        }, extendPrototype(BaseRenderer, SVGRenderer), SVGRenderer.prototype.createBase = function(t) {
            return new SVGBaseElement(t, this.layerElement, this.globalData, this)
        }, SVGRenderer.prototype.createShape = function(t) {
            return new IShapeElement(t, this.layerElement, this.globalData, this)
        }, SVGRenderer.prototype.createText = function(t) {
            return new SVGTextElement(t, this.layerElement, this.globalData, this)
        }, SVGRenderer.prototype.createImage = function(t) {
            return new IImageElement(t, this.layerElement, this.globalData, this)
        }, SVGRenderer.prototype.createComp = function(t) {
            return new ICompElement(t, this.layerElement, this.globalData, this)
        }, SVGRenderer.prototype.createSolid = function(t) {
            return new ISolidElement(t, this.layerElement, this.globalData, this)
        }, SVGRenderer.prototype.configAnimation = function(t) {
            this.layerElement = document.createElementNS(svgNS, "svg"), this.layerElement.setAttribute("xmlns", "http://www.w3.org/2000/svg"), this.layerElement.setAttribute("width", t.w), this.layerElement.setAttribute("height", t.h), this.layerElement.setAttribute("viewBox", "0 0 " + t.w + " " + t.h), this.layerElement.setAttribute("preserveAspectRatio", this.renderConfig.preserveAspectRatio), this.layerElement.style.width = "100%", this.layerElement.style.height = "100%", this.layerElement.style.transform = "translate3d(0,0,0)", this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style["-webkit-transform"] = "0px 0px 0px", this.animationItem.wrapper.appendChild(this.layerElement);
            var e = document.createElementNS(svgNS, "defs");
            this.globalData.defs = e, this.layerElement.appendChild(e), this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem), this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem), this.globalData.progressiveLoad = this.renderConfig.progressiveLoad, this.globalData.frameId = 0, this.globalData.compSize = {
                w: t.w,
                h: t.h
            }, this.globalData.frameRate = t.fr;
            var s = document.createElementNS(svgNS, "clipPath"),
                r = document.createElementNS(svgNS, "rect");
            r.setAttribute("width", t.w), r.setAttribute("height", t.h), r.setAttribute("x", 0), r.setAttribute("y", 0);
            var i = "animationMask_" + randomString(10);
            s.setAttribute("id", i), s.appendChild(r);
            var a = document.createElementNS(svgNS, "g");
            a.setAttribute("clip-path", "url(#" + i + ")"), this.layerElement.appendChild(a), e.appendChild(s), this.layerElement = a, this.layers = t.layers, this.globalData.fontManager = new FontManager, this.globalData.fontManager.addChars(t.chars), this.globalData.fontManager.addFonts(t.fonts, e), this.elements = Array.apply(null, {
                length: t.layers.length
            })
        }, SVGRenderer.prototype.destroy = function() {
            this.animationItem.wrapper.innerHTML = "", this.layerElement = null, this.globalData.defs = null;
            var t, e = this.layers ? this.layers.length : 0;
            for (t = 0; e > t; t++) this.elements[t] && this.elements[t].destroy();
            this.elements.length = 0, this.destroyed = !0, this.animationItem = null
        }, SVGRenderer.prototype.updateContainerSize = function() {}, SVGRenderer.prototype.buildItem = function(t) {
            var e = this.elements;
            if (!e[t] && 99 != this.layers[t].ty) {
                var s = this.createItem(this.layers[t]);
                e[t] = s, s.initExpressions(), this.appendElementInPos(s, t), this.layers[t].tt && (this.buildItem(t - 1), s.setMatte(e[t - 1].layerId))
            }
        }, SVGRenderer.prototype.renderFrame = function(t) {
            if (this.renderedFrame != t && !this.destroyed) {
                null === t ? t = this.renderedFrame : this.renderedFrame = t, this.globalData.frameNum = t, this.globalData.frameId += 1, this.globalData.projectInterface.currentFrame = t;
                var e, s = this.layers.length;
                for (this.completeLayers || this.checkLayers(t), e = s - 1; e >= 0; e--)(this.completeLayers || this.elements[e]) && this.elements[e].prepareFrame(t - this.layers[e].st);
                for (e = s - 1; e >= 0; e--)(this.completeLayers || this.elements[e]) && this.elements[e].renderFrame()
            }
        }, SVGRenderer.prototype.appendElementInPos = function(t, e) {
            var s = t.getBaseElement();
            if (s) {
                for (var r, i = 0; e > i;) this.elements[i] && this.elements[i].getBaseElement() && (r = this.elements[i].getBaseElement()), i += 1;
                r ? this.layerElement.insertBefore(s, r) : this.layerElement.appendChild(s)
            }
        }, SVGRenderer.prototype.hide = function() {
            this.layerElement.style.display = "none"
        }, SVGRenderer.prototype.show = function() {
            this.layerElement.style.display = "block"
        }, SVGRenderer.prototype.searchExtraCompositions = function(t) {
            var e, s = t.length,
                r = document.createElementNS(svgNS, "g");
            for (e = 0; s > e; e += 1)
                if (t[e].xt) {
                    var i = this.createComp(t[e], r, this.globalData.comp, null);
                    i.initExpressions(), this.globalData.projectInterface.registerComposition(i)
                }
        }, extendPrototype(BaseRenderer, CanvasRenderer), CanvasRenderer.prototype.createBase = function(t) {
            return new CVBaseElement(t, this, this.globalData)
        }, CanvasRenderer.prototype.createShape = function(t) {
            return new CVShapeElement(t, this, this.globalData)
        }, CanvasRenderer.prototype.createText = function(t) {
            return new CVTextElement(t, this, this.globalData)
        }, CanvasRenderer.prototype.createImage = function(t) {
            return new CVImageElement(t, this, this.globalData)
        }, CanvasRenderer.prototype.createComp = function(t) {
            return new CVCompElement(t, this, this.globalData)
        }, CanvasRenderer.prototype.createSolid = function(t) {
            return new CVSolidElement(t, this, this.globalData)
        }, CanvasRenderer.prototype.ctxTransform = function(t) {
            if (1 !== t[0] || 0 !== t[1] || 0 !== t[4] || 1 !== t[5] || 0 !== t[12] || 0 !== t[13]) {
                if (!this.renderConfig.clearCanvas) return void this.canvasContext.transform(t[0], t[1], t[4], t[5], t[12], t[13]);
                this.transformMat.cloneFromProps(t), this.transformMat.transform(this.contextData.cTr.props[0], this.contextData.cTr.props[1], this.contextData.cTr.props[2], this.contextData.cTr.props[3], this.contextData.cTr.props[4], this.contextData.cTr.props[5], this.contextData.cTr.props[6], this.contextData.cTr.props[7], this.contextData.cTr.props[8], this.contextData.cTr.props[9], this.contextData.cTr.props[10], this.contextData.cTr.props[11], this.contextData.cTr.props[12], this.contextData.cTr.props[13], this.contextData.cTr.props[14], this.contextData.cTr.props[15]), this.contextData.cTr.cloneFromProps(this.transformMat.props);
                var e = this.contextData.cTr.props;
                this.canvasContext.setTransform(e[0], e[1], e[4], e[5], e[12], e[13])
            }
        }, CanvasRenderer.prototype.ctxOpacity = function(t) {
            if (1 !== t) {
                if (!this.renderConfig.clearCanvas) return void(this.canvasContext.globalAlpha *= 0 > t ? 0 : t);
                this.contextData.cO *= 0 > t ? 0 : t, this.canvasContext.globalAlpha = this.contextData.cO
            }
        }, CanvasRenderer.prototype.reset = function() {
            return this.renderConfig.clearCanvas ? (this.contextData.cArrPos = 0, this.contextData.cTr.reset(), void(this.contextData.cO = 1)) : void this.canvasContext.restore()
        }, CanvasRenderer.prototype.save = function(t) {
            if (!this.renderConfig.clearCanvas) return void this.canvasContext.save();
            t && this.canvasContext.save();
            var e = this.contextData.cTr.props;
            (null === this.contextData.saved[this.contextData.cArrPos] || void 0 === this.contextData.saved[this.contextData.cArrPos]) && (this.contextData.saved[this.contextData.cArrPos] = new Array(16));
            var s, r = this.contextData.saved[this.contextData.cArrPos];
            for (s = 0; 16 > s; s += 1) r[s] = e[s];
            this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO, this.contextData.cArrPos += 1
        }, CanvasRenderer.prototype.restore = function(t) {
            if (!this.renderConfig.clearCanvas) return void this.canvasContext.restore();
            t && this.canvasContext.restore(), this.contextData.cArrPos -= 1;
            var e, s = this.contextData.saved[this.contextData.cArrPos],
                r = this.contextData.cTr.props;
            for (e = 0; 16 > e; e += 1) r[e] = s[e];
            this.canvasContext.setTransform(s[0], s[1], s[4], s[5], s[12], s[13]), s = this.contextData.savedOp[this.contextData.cArrPos], this.contextData.cO = s, this.canvasContext.globalAlpha = s
        }, CanvasRenderer.prototype.configAnimation = function(t) {
            this.animationItem.wrapper ? (this.animationItem.container = document.createElement("canvas"), this.animationItem.container.style.width = "100%", this.animationItem.container.style.height = "100%", this.animationItem.container.style.transformOrigin = this.animationItem.container.style.mozTransformOrigin = this.animationItem.container.style.webkitTransformOrigin = this.animationItem.container.style["-webkit-transform"] = "0px 0px 0px", this.animationItem.wrapper.appendChild(this.animationItem.container), this.canvasContext = this.animationItem.container.getContext("2d")) : this.canvasContext = this.renderConfig.context, this.globalData.canvasContext = this.canvasContext, this.globalData.renderer = this, this.globalData.isDashed = !1, this.globalData.totalFrames = Math.floor(t.tf), this.globalData.compWidth = t.w, this.globalData.compHeight = t.h, this.globalData.frameRate = t.fr, this.globalData.frameId = 0, this.globalData.compSize = {
                w: t.w,
                h: t.h
            }, this.globalData.progressiveLoad = this.renderConfig.progressiveLoad, this.layers = t.layers, this.transformCanvas = {}, this.transformCanvas.w = t.w, this.transformCanvas.h = t.h, this.globalData.fontManager = new FontManager, this.globalData.fontManager.addChars(t.chars), this.globalData.fontManager.addFonts(t.fonts, document.body), this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem), this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem), this.globalData.elementLoaded = this.animationItem.elementLoaded.bind(this.animationItem), this.globalData.addPendingElement = this.animationItem.addPendingElement.bind(this.animationItem), this.globalData.transformCanvas = this.transformCanvas, this.elements = Array.apply(null, {
                length: t.layers.length
            }), this.updateContainerSize()
        }, CanvasRenderer.prototype.updateContainerSize = function() {
            var t, e;
            if (this.animationItem.wrapper && this.animationItem.container ? (t = this.animationItem.wrapper.offsetWidth, e = this.animationItem.wrapper.offsetHeight, this.animationItem.container.setAttribute("width", t * this.renderConfig.dpr), this.animationItem.container.setAttribute("height", e * this.renderConfig.dpr)) : (t = this.canvasContext.canvas.width * this.renderConfig.dpr, e = this.canvasContext.canvas.height * this.renderConfig.dpr), "xMidYMid meet" == this.renderConfig.preserveAspectRatio) {
                var s = t / e,
                    r = this.transformCanvas.w / this.transformCanvas.h;
                r > s ? (this.transformCanvas.sx = t / (this.transformCanvas.w / this.renderConfig.dpr), this.transformCanvas.sy = t / (this.transformCanvas.w / this.renderConfig.dpr), this.transformCanvas.tx = 0, this.transformCanvas.ty = (e - this.transformCanvas.h * (t / this.transformCanvas.w)) / 2 * this.renderConfig.dpr) : (this.transformCanvas.sx = e / (this.transformCanvas.h / this.renderConfig.dpr), this.transformCanvas.sy = e / (this.transformCanvas.h / this.renderConfig.dpr), this.transformCanvas.tx = (t - this.transformCanvas.w * (e / this.transformCanvas.h)) / 2 * this.renderConfig.dpr, this.transformCanvas.ty = 0)
            } else "none" == this.renderConfig.preserveAspectRatio ? (this.transformCanvas.sx = t / (this.transformCanvas.w / this.renderConfig.dpr), this.transformCanvas.sy = e / (this.transformCanvas.h / this.renderConfig.dpr), this.transformCanvas.tx = 0, this.transformCanvas.ty = 0) : (this.transformCanvas.sx = this.renderConfig.dpr, this.transformCanvas.sy = this.renderConfig.dpr, this.transformCanvas.tx = 0, this.transformCanvas.ty = 0);
            this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1];
            var i, a = this.elements.length;
            for (i = 0; a > i; i += 1) this.elements[i] && 0 === this.elements[i].data.ty && this.elements[i].resize(this.globalData.transformCanvas)
        }, CanvasRenderer.prototype.destroy = function() {
            this.renderConfig.clearCanvas && (this.animationItem.wrapper.innerHTML = "");
            var t, e = this.layers ? this.layers.length : 0;
            for (t = e - 1; t >= 0; t -= 1) this.elements[t].destroy();
            this.elements.length = 0, this.globalData.canvasContext = null, this.animationItem.container = null, this.destroyed = !0
        }, CanvasRenderer.prototype.renderFrame = function(t) {
            if (!(this.renderedFrame == t && this.renderConfig.clearCanvas === !0 || this.destroyed || null === t)) {
                this.renderedFrame = t, this.globalData.frameNum = t - this.animationItem.firstFrame, this.globalData.frameId += 1, this.globalData.projectInterface.currentFrame = t, this.renderConfig.clearCanvas === !0 ? (this.reset(), this.canvasContext.save(), this.canvasContext.clearRect(this.transformCanvas.tx, this.transformCanvas.ty, this.transformCanvas.w * this.transformCanvas.sx, this.transformCanvas.h * this.transformCanvas.sy)) : this.save(), this.ctxTransform(this.transformCanvas.props), this.canvasContext.beginPath(), this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h), this.canvasContext.closePath(), this.canvasContext.clip();
                var e, s = this.layers.length;
                for (this.completeLayers || this.checkLayers(t), e = 0; s > e; e++)(this.completeLayers || this.elements[e]) && this.elements[e].prepareFrame(t - this.layers[e].st);
                for (e = s - 1; e >= 0; e -= 1)(this.completeLayers || this.elements[e]) && this.elements[e].renderFrame();
                this.renderConfig.clearCanvas !== !0 ? this.restore() : this.canvasContext.restore()
            }
        }, CanvasRenderer.prototype.buildItem = function(t) {
            var e = this.elements;
            if (!e[t] && 99 != this.layers[t].ty) {
                var s = this.createItem(this.layers[t], this, this.globalData);
                e[t] = s, s.initExpressions(), 0 === this.layers[t].ty && s.resize(this.globalData.transformCanvas)
            }
        }, CanvasRenderer.prototype.hide = function() {
            this.animationItem.container.style.display = "none"
        }, CanvasRenderer.prototype.show = function() {
            this.animationItem.container.style.display = "block"
        }, CanvasRenderer.prototype.searchExtraCompositions = function(t) {
            var e, s = t.length;
            for (document.createElementNS(svgNS, "g"), e = 0; s > e; e += 1)
                if (t[e].xt) {
                    var r = this.createComp(t[e], this.globalData.comp, this.globalData);
                    r.initExpressions(), this.globalData.projectInterface.registerComposition(r)
                }
        }, extendPrototype(BaseRenderer, HybridRenderer), HybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem, HybridRenderer.prototype.appendElementInPos = function(t, e) {
            var s = t.getBaseElement();
            if (s) {
                var r = this.layers[e];
                if (r.ddd && this.supports3d) this.addTo3dContainer(s, e);
                else {
                    for (var i, a = 0; e > a;) this.elements[a] && this.elements[a].getBaseElement() && (i = this.elements[a].getBaseElement()), a += 1;
                    i ? r.ddd && this.supports3d || this.layerElement.insertBefore(s, i) : r.ddd && this.supports3d || this.layerElement.appendChild(s)
                }
            }
        }, HybridRenderer.prototype.createBase = function(t) {
            return new SVGBaseElement(t, this.layerElement, this.globalData, this)
        }, HybridRenderer.prototype.createShape = function(t) {
            return this.supports3d ? new HShapeElement(t, this.layerElement, this.globalData, this) : new IShapeElement(t, this.layerElement, this.globalData, this)
        }, HybridRenderer.prototype.createText = function(t) {
            return this.supports3d ? new HTextElement(t, this.layerElement, this.globalData, this) : new SVGTextElement(t, this.layerElement, this.globalData, this);
        }, HybridRenderer.prototype.createCamera = function(t) {
            return this.camera = new HCameraElement(t, this.layerElement, this.globalData, this), this.camera
        }, HybridRenderer.prototype.createImage = function(t) {
            return this.supports3d ? new HImageElement(t, this.layerElement, this.globalData, this) : new IImageElement(t, this.layerElement, this.globalData, this)
        }, HybridRenderer.prototype.createComp = function(t) {
            return this.supports3d ? new HCompElement(t, this.layerElement, this.globalData, this) : new ICompElement(t, this.layerElement, this.globalData, this)
        }, HybridRenderer.prototype.createSolid = function(t) {
            return this.supports3d ? new HSolidElement(t, this.layerElement, this.globalData, this) : new ISolidElement(t, this.layerElement, this.globalData, this)
        }, HybridRenderer.prototype.getThreeDContainer = function(t) {
            var e = document.createElement("div");
            styleDiv(e), e.style.width = this.globalData.compSize.w + "px", e.style.height = this.globalData.compSize.h + "px", e.style.transformOrigin = e.style.mozTransformOrigin = e.style.webkitTransformOrigin = "50% 50%";
            var s = document.createElement("div");
            styleDiv(s), s.style.transform = s.style.webkitTransform = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)", e.appendChild(s), this.resizerElem.appendChild(e);
            var r = {
                container: s,
                perspectiveElem: e,
                startPos: t,
                endPos: t
            };
            return this.threeDElements.push(r), r
        }, HybridRenderer.prototype.build3dContainers = function() {
            var t, e, s = this.layers.length;
            for (t = 0; s > t; t += 1) this.layers[t].ddd ? (e || (e = this.getThreeDContainer(t)), e.endPos = Math.max(e.endPos, t)) : e = null
        }, HybridRenderer.prototype.addTo3dContainer = function(t, e) {
            for (var s = 0, r = this.threeDElements.length; r > s;) {
                if (e <= this.threeDElements[s].endPos) {
                    for (var i, a = this.threeDElements[s].startPos; e > a;) this.elements[a] && this.elements[a].getBaseElement() && (i = this.elements[a].getBaseElement()), a += 1;
                    i ? this.threeDElements[s].container.insertBefore(t, i) : this.threeDElements[s].container.appendChild(t);
                    break
                }
                s += 1
            }
        }, HybridRenderer.prototype.configAnimation = function(t) {
            var e = document.createElement("div"),
                s = this.animationItem.wrapper;
            e.style.width = t.w + "px", e.style.height = t.h + "px", this.resizerElem = e, styleDiv(e), e.style.transformStyle = e.style.webkitTransformStyle = e.style.mozTransformStyle = "flat", s.appendChild(e), e.style.overflow = "hidden";
            var r = document.createElementNS(svgNS, "svg");
            r.setAttribute("width", "1"), r.setAttribute("height", "1"), styleDiv(r), this.resizerElem.appendChild(r);
            var i = document.createElementNS(svgNS, "defs");
            r.appendChild(i), this.globalData.defs = i, this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem), this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem), this.globalData.elementLoaded = this.animationItem.elementLoaded.bind(this.animationItem), this.globalData.frameId = 0, this.globalData.compSize = {
                w: t.w,
                h: t.h
            }, this.globalData.frameRate = t.fr, this.layers = t.layers, this.globalData.fontManager = new FontManager, this.globalData.fontManager.addChars(t.chars), this.globalData.fontManager.addFonts(t.fonts, r), this.layerElement = this.resizerElem, this.build3dContainers(), this.updateContainerSize()
        }, HybridRenderer.prototype.destroy = function() {
            this.animationItem.wrapper.innerHTML = "", this.animationItem.container = null, this.globalData.defs = null;
            var t, e = this.layers ? this.layers.length : 0;
            for (t = 0; e > t; t++) this.elements[t].destroy();
            this.elements.length = 0, this.destroyed = !0, this.animationItem = null
        }, HybridRenderer.prototype.updateContainerSize = function() {
            var t, e, s, r, i = this.animationItem.wrapper.offsetWidth,
                a = this.animationItem.wrapper.offsetHeight,
                n = i / a,
                o = this.globalData.compSize.w / this.globalData.compSize.h;
            o > n ? (t = i / this.globalData.compSize.w, e = i / this.globalData.compSize.w, s = 0, r = (a - this.globalData.compSize.h * (i / this.globalData.compSize.w)) / 2) : (t = a / this.globalData.compSize.h, e = a / this.globalData.compSize.h, s = (i - this.globalData.compSize.w * (a / this.globalData.compSize.h)) / 2, r = 0), this.resizerElem.style.transform = this.resizerElem.style.webkitTransform = "matrix3d(" + t + ",0,0,0,0," + e + ",0,0,0,0,1,0," + s + "," + r + ",0,1)"
        }, HybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame, HybridRenderer.prototype.hide = function() {
            this.resizerElem.style.display = "none"
        }, HybridRenderer.prototype.show = function() {
            this.resizerElem.style.display = "block"
        }, HybridRenderer.prototype.initItems = function() {
            if (this.buildAllItems(), this.camera) this.camera.setup();
            else {
                var t, e = this.globalData.compSize.w,
                    s = this.globalData.compSize.h,
                    r = this.threeDElements.length;
                for (t = 0; r > t; t += 1) this.threeDElements[t].perspectiveElem.style.perspective = this.threeDElements[t].perspectiveElem.style.webkitPerspective = Math.sqrt(Math.pow(e, 2) + Math.pow(s, 2)) + "px"
            }
        }, HybridRenderer.prototype.searchExtraCompositions = function(t) {
            var e, s = t.length,
                r = document.createElement("div");
            for (e = 0; s > e; e += 1)
                if (t[e].xt) {
                    var i = this.createComp(t[e], r, this.globalData.comp, null);
                    i.initExpressions(), this.globalData.projectInterface.registerComposition(i)
                }
        }, MaskElement.prototype.getMaskProperty = function(t) {
            return this.viewData[t].prop
        }, MaskElement.prototype.prepareFrame = function() {
            var t, e = this.dynamicProperties.length;
            for (t = 0; e > t; t += 1) this.dynamicProperties[t].getValue()
        }, MaskElement.prototype.renderFrame = function(t) {
            var e, s = this.masksProperties.length;
            for (e = 0; s > e; e++)
                if ("n" !== this.masksProperties[e].mode && this.masksProperties[e].cl !== !1 && ((this.viewData[e].prop.mdf || this.firstFrame) && this.drawPath(this.masksProperties[e], this.viewData[e].prop.v, this.viewData[e]), this.viewData[e].invRect && (this.element.finalTransform.mProp.mdf || this.firstFrame) && (this.viewData[e].invRect.setAttribute("x", -t.props[12]), this.viewData[e].invRect.setAttribute("y", -t.props[13])), this.storedData[e].x && (this.storedData[e].x.mdf || this.firstFrame))) {
                    var r = this.storedData[e].expan;
                    this.storedData[e].x.v < 0 ? ("erode" !== this.storedData[e].lastOperator && (this.storedData[e].lastOperator = "erode", this.storedData[e].elem.setAttribute("filter", "url(#" + this.storedData[e].filterId + ")")), r.setAttribute("radius", -this.storedData[e].x.v)) : ("dilate" !== this.storedData[e].lastOperator && (this.storedData[e].lastOperator = "dilate", this.storedData[e].elem.setAttribute("filter", null)), this.storedData[e].elem.setAttribute("stroke-width", 2 * this.storedData[e].x.v))
                }
            this.firstFrame = !1
        }, MaskElement.prototype.getMaskelement = function() {
            return this.maskElement
        }, MaskElement.prototype.createLayerSolidPath = function() {
            var t = "M0,0 ";
            return t += " h" + this.globalData.compSize.w, t += " v" + this.globalData.compSize.h, t += " h-" + this.globalData.compSize.w, t += " v-" + this.globalData.compSize.h + " "
        }, MaskElement.prototype.drawPath = function(t, e, s) {
            var r, i, a = "";
            for (i = e.v.length, r = 1; i > r; r += 1) 1 == r && (a += " M" + bm_rnd(e.v[0][0]) + "," + bm_rnd(e.v[0][1])), a += " C" + bm_rnd(e.o[r - 1][0]) + "," + bm_rnd(e.o[r - 1][1]) + " " + bm_rnd(e.i[r][0]) + "," + bm_rnd(e.i[r][1]) + " " + bm_rnd(e.v[r][0]) + "," + bm_rnd(e.v[r][1]);
            t.cl && (a += " C" + bm_rnd(e.o[r - 1][0]) + "," + bm_rnd(e.o[r - 1][1]) + " " + bm_rnd(e.i[0][0]) + "," + bm_rnd(e.i[0][1]) + " " + bm_rnd(e.v[0][0]) + "," + bm_rnd(e.v[0][1])), s.lastPath !== a && (t.inv ? s.elem.setAttribute("d", this.solidPath + a) : s.elem.setAttribute("d", a), s.lastPath = a)
        }, MaskElement.prototype.getMask = function(t) {
            for (var e = 0, s = this.masksProperties.length; s > e;) {
                if (this.masksProperties[e].nm === t) return {
                    maskPath: this.viewData[e].prop.pv
                };
                e += 1
            }
        }, MaskElement.prototype.destroy = function() {
            this.element = null, this.globalData = null, this.maskElement = null, this.data = null, this.paths = null, this.masksProperties = null
        }, BaseElement.prototype.checkMasks = function() {
            if (!this.data.hasMask) return !1;
            for (var t = 0, e = this.data.masksProperties.length; e > t;) {
                if ("n" !== this.data.masksProperties[t].mode && this.data.masksProperties[t].cl !== !1) return !0;
                t += 1
            }
            return !1
        }, BaseElement.prototype.checkParenting = function() {
            void 0 !== this.data.parent && this.comp.buildElementParenting(this, this.data.parent)
        }, BaseElement.prototype.prepareFrame = function(t) {
            this.data.ip - this.data.st <= t && this.data.op - this.data.st > t ? this.isVisible !== !0 && (this.elemMdf = !0, this.globalData.mdf = !0, this.isVisible = !0, this.firstFrame = !0, this.data.hasMask && (this.maskManager.firstFrame = !0)) : this.isVisible !== !1 && (this.elemMdf = !0, this.globalData.mdf = !0, this.isVisible = !1);
            var e, s = this.dynamicProperties.length;
            for (e = 0; s > e; e += 1) this.dynamicProperties[e].getValue(), this.dynamicProperties[e].mdf && (this.elemMdf = !0, this.globalData.mdf = !0);
            return this.data.hasMask && this.maskManager.prepareFrame(t * this.data.sr), this.currentFrameNum = t * this.data.sr, this.isVisible
        }, BaseElement.prototype.globalToLocal = function(t) {
            var e = [];
            e.push(this.finalTransform);
            for (var s = !0, r = this.comp; s;) r.finalTransform ? (r.data.hasMask && e.splice(0, 0, r.finalTransform), r = r.comp) : s = !1;
            var i, a, n = e.length;
            for (i = 0; n > i; i += 1) a = e[i].mat.applyToPointArray(0, 0, 0), t = [t[0] - a[0], t[1] - a[1], 0];
            return t
        }, BaseElement.prototype.initExpressions = function() {
            this.layerInterface = LayerExpressionInterface(this), this.data.hasMask && this.layerInterface.registerMaskInterface(this.maskManager), 0 === this.data.ty || this.data.xt ? this.compInterface = CompExpressionInterface(this) : 4 === this.data.ty && (this.layerInterface.shapeInterface = ShapeExpressionInterface.createShapeInterface(this.shapesData, this.viewData, this.layerInterface))
        }, BaseElement.prototype.setBlendMode = function() {
            var t = "";
            switch (this.data.bm) {
                case 1:
                    t = "multiply";
                    break;
                case 2:
                    t = "screen";
                    break;
                case 3:
                    t = "overlay";
                    break;
                case 4:
                    t = "darken";
                    break;
                case 5:
                    t = "lighten";
                    break;
                case 6:
                    t = "color-dodge";
                    break;
                case 7:
                    t = "color-burn";
                    break;
                case 8:
                    t = "hard-light";
                    break;
                case 9:
                    t = "soft-light";
                    break;
                case 10:
                    t = "difference";
                    break;
                case 11:
                    t = "exclusion";
                    break;
                case 12:
                    t = "hue";
                    break;
                case 13:
                    t = "saturation";
                    break;
                case 14:
                    t = "color";
                    break;
                case 15:
                    t = "luminosity"
            }
            this.layerElement.style["mix-blend-mode"] = t
        }, BaseElement.prototype.init = function() {
            this.data.sr || (this.data.sr = 1), this.dynamicProperties = [], this.data.ef && expressionsPlugin && (this.effectsManager = expressionsPlugin.getEffectsManager(this.data, this, this.dynamicProperties), this.effect = this.effectsManager.bind(this.effectsManager)), this.hidden = !1, this.firstFrame = !0, this.isVisible = !1, this.currentFrameNum = -99999, this.lastNum = -99999, this.data.ks && (this.finalTransform = {
                mProp: PropertyFactory.getProp(this, this.data.ks, 2, null, this.dynamicProperties),
                matMdf: !1,
                opMdf: !1,
                mat: new Matrix,
                opacity: 1
            }, this.finalTransform.op = this.finalTransform.mProp.o, this.transform = this.finalTransform.mProp, 11 !== this.data.ty && this.createElements(), this.data.hasMask && this.addMasks(this.data)), this.elemMdf = !1
        }, BaseElement.prototype.getType = function() {
            return this.type
        }, BaseElement.prototype.resetHierarchy = function() {
            this.hierarchy ? this.hierarchy.length = 0 : this.hierarchy = []
        }, BaseElement.prototype.getHierarchy = function() {
            return this.hierarchy || (this.hierarchy = []), this.hierarchy
        }, BaseElement.prototype.getLayerSize = function() {
            return 5 === this.data.ty ? {
                w: this.data.textData.width,
                h: this.data.textData.height
            } : {
                w: this.data.width,
                h: this.data.height
            }
        }, BaseElement.prototype.hide = function() {}, BaseElement.prototype.mHelper = new Matrix, createElement(BaseElement, SVGBaseElement), SVGBaseElement.prototype.appendNodeToParent = function(t) {
            if (!this.data.hd || this.data.td)
                if (this.placeholder) {
                    var e = this.placeholder.phElement;
                    e.parentNode.insertBefore(t, e)
                } else this.parentContainer.appendChild(t)
        }, SVGBaseElement.prototype.createElements = function() {
            if (this.data.td) {
                if (3 == this.data.td) this.layerElement = document.createElementNS(svgNS, "mask"), this.layerElement.setAttribute("id", this.layerId), this.layerElement.setAttribute("mask-type", "luminance"), this.globalData.defs.appendChild(this.layerElement);
                else if (2 == this.data.td) {
                    var t = document.createElementNS(svgNS, "mask");
                    t.setAttribute("id", this.layerId), t.setAttribute("mask-type", "alpha");
                    var e = document.createElementNS(svgNS, "g");
                    t.appendChild(e), this.layerElement = document.createElementNS(svgNS, "g");
                    var s = document.createElementNS(svgNS, "filter"),
                        r = randomString(10);
                    s.setAttribute("id", r), s.setAttribute("filterUnits", "objectBoundingBox"), s.setAttribute("x", "0%"), s.setAttribute("y", "0%"), s.setAttribute("width", "100%"), s.setAttribute("height", "100%");
                    var i = document.createElementNS(svgNS, "feComponentTransfer");
                    i.setAttribute("in", "SourceGraphic"), s.appendChild(i);
                    var a = document.createElementNS(svgNS, "feFuncA");
                    a.setAttribute("type", "table"), a.setAttribute("tableValues", "1.0 0.0"), i.appendChild(a), this.globalData.defs.appendChild(s);
                    var n = document.createElementNS(svgNS, "rect");
                    n.setAttribute("width", this.comp.data ? this.comp.data.w : this.globalData.compSize.w), n.setAttribute("height", this.comp.data ? this.comp.data.h : this.globalData.compSize.h), n.setAttribute("x", "0"), n.setAttribute("y", "0"), n.setAttribute("fill", "#ffffff"), n.setAttribute("opacity", "0"), e.setAttribute("filter", "url(#" + r + ")"), e.appendChild(n), e.appendChild(this.layerElement), this.globalData.defs.appendChild(t)
                } else {
                    this.layerElement = document.createElementNS(svgNS, "g");
                    var o = document.createElementNS(svgNS, "mask");
                    o.setAttribute("id", this.layerId), o.setAttribute("mask-type", "alpha"), o.appendChild(this.layerElement), this.globalData.defs.appendChild(o)
                }
                this.data.hasMask && (this.maskedElement = this.layerElement)
            } else this.data.hasMask || this.data.tt ? (this.layerElement = document.createElementNS(svgNS, "g"), this.data.tt ? (this.matteElement = document.createElementNS(svgNS, "g"), this.matteElement.appendChild(this.layerElement), this.baseElement = this.matteElement) : this.baseElement = this.layerElement, this.data.hasMask && (this.maskedElement = this.layerElement)) : (this.layerElement = document.createElementNS(svgNS, "g"), this.baseElement = this.layerElement);
            if (!this.data.ln && !this.data.cl || 4 !== this.data.ty && 0 !== this.data.ty || (this.data.ln && this.layerElement.setAttribute("id", this.data.ln), this.data.cl && this.layerElement.setAttribute("class", this.data.cl)), 0 === this.data.ty && !this.checkMasks()) {
                var h = document.createElementNS(svgNS, "clipPath"),
                    l = document.createElementNS(svgNS, "path");
                l.setAttribute("d", "M0,0 L" + this.data.w + ",0 L" + this.data.w + "," + this.data.h + " L0," + this.data.h + "z");
                var p = "cp_" + randomString(8);
                h.setAttribute("id", p), this.layerElement.setAttribute("clip-path", "url(#" + p + ")"), h.appendChild(l), this.globalData.defs.appendChild(h)
            }
            0 !== this.data.bm && this.setBlendMode(), this.layerElement !== this.parentContainer && (this.placeholder = null), this.checkParenting()
        }, SVGBaseElement.prototype.setBlendMode = BaseElement.prototype.setBlendMode, SVGBaseElement.prototype.renderFrame = function(t) {
            if (3 === this.data.ty || this.data.hd) return !1;
            if (!this.isVisible) return this.isVisible;
            this.lastNum = this.currentFrameNum, this.finalTransform.opMdf = this.finalTransform.op.mdf, this.finalTransform.matMdf = this.finalTransform.mProp.mdf, this.finalTransform.opacity = this.finalTransform.op.v, this.firstFrame && (this.finalTransform.opMdf = !0, this.finalTransform.matMdf = !0);
            var e, s = this.finalTransform.mat;
            if (this.hierarchy) {
                var r, i = this.hierarchy.length;
                for (e = this.finalTransform.mProp.v.props, s.cloneFromProps(e), r = 0; i > r; r += 1) this.finalTransform.matMdf = !!this.hierarchy[r].finalTransform.mProp.mdf || this.finalTransform.matMdf, e = this.hierarchy[r].finalTransform.mProp.v.props, s.transform(e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9], e[10], e[11], e[12], e[13], e[14], e[15])
            } else this.isVisible && (t ? (e = this.finalTransform.mProp.v.props, s.cloneFromProps(e)) : s.cloneFromProps(this.finalTransform.mProp.v.props));
            return t && (e = t.mat.props, s.transform(e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9], e[10], e[11], e[12], e[13], e[14], e[15]), this.finalTransform.opacity *= t.opacity, this.finalTransform.opMdf = !!t.opMdf || this.finalTransform.opMdf, this.finalTransform.matMdf = !!t.matMdf || this.finalTransform.matMdf), this.finalTransform.matMdf && this.layerElement && this.layerElement.setAttribute("transform", s.to2dCSS()), this.finalTransform.opMdf && this.layerElement && this.layerElement.setAttribute("opacity", this.finalTransform.opacity), this.data.hasMask && this.maskManager.renderFrame(s), this.isVisible
        }, SVGBaseElement.prototype.destroy = function() {
            this.layerElement = null, this.parentContainer = null, this.matteElement && (this.matteElement = null), this.maskManager && this.maskManager.destroy()
        }, SVGBaseElement.prototype.getBaseElement = function() {
            return this.baseElement
        }, SVGBaseElement.prototype.addMasks = function(t) {
            this.maskManager = new MaskElement(t, this, this.globalData)
        }, SVGBaseElement.prototype.setMatte = function(t) {
            this.matteElement && this.matteElement.setAttribute("mask", "url(#" + t + ")")
        }, SVGBaseElement.prototype.setMatte = function(t) {
            this.matteElement && this.matteElement.setAttribute("mask", "url(#" + t + ")")
        }, SVGBaseElement.prototype.hide = function() {}, ITextElement.prototype.init = function() {
            this._parent.init.call(this), this.lettersChangedFlag = !1;
            var t = this.data;
            this.renderedLetters = Array.apply(null, {
                length: t.t.d.l ? t.t.d.l.length : 0
            }), this.viewData = {
                m: {
                    a: PropertyFactory.getProp(this, t.t.m.a, 1, 0, this.dynamicProperties)
                }
            };
            var e = this.data.t;
            if (e.a.length) {
                this.viewData.a = Array.apply(null, {
                    length: e.a.length
                });
                var s, r, i, a = e.a.length;
                for (s = 0; a > s; s += 1) i = e.a[s], r = {
                    a: {},
                    s: {}
                }, "r" in i.a && (r.a.r = PropertyFactory.getProp(this, i.a.r, 0, degToRads, this.dynamicProperties)), "rx" in i.a && (r.a.rx = PropertyFactory.getProp(this, i.a.rx, 0, degToRads, this.dynamicProperties)), "ry" in i.a && (r.a.ry = PropertyFactory.getProp(this, i.a.ry, 0, degToRads, this.dynamicProperties)), "sk" in i.a && (r.a.sk = PropertyFactory.getProp(this, i.a.sk, 0, degToRads, this.dynamicProperties)), "sa" in i.a && (r.a.sa = PropertyFactory.getProp(this, i.a.sa, 0, degToRads, this.dynamicProperties)), "s" in i.a && (r.a.s = PropertyFactory.getProp(this, i.a.s, 1, .01, this.dynamicProperties)), "a" in i.a && (r.a.a = PropertyFactory.getProp(this, i.a.a, 1, 0, this.dynamicProperties)), "o" in i.a && (r.a.o = PropertyFactory.getProp(this, i.a.o, 0, .01, this.dynamicProperties)), "p" in i.a && (r.a.p = PropertyFactory.getProp(this, i.a.p, 1, 0, this.dynamicProperties)), "sw" in i.a && (r.a.sw = PropertyFactory.getProp(this, i.a.sw, 0, 0, this.dynamicProperties)), "sc" in i.a && (r.a.sc = PropertyFactory.getProp(this, i.a.sc, 1, 0, this.dynamicProperties)), "fc" in i.a && (r.a.fc = PropertyFactory.getProp(this, i.a.fc, 1, 0, this.dynamicProperties)), "fh" in i.a && (r.a.fh = PropertyFactory.getProp(this, i.a.fh, 0, 0, this.dynamicProperties)), "fs" in i.a && (r.a.fs = PropertyFactory.getProp(this, i.a.fs, 0, .01, this.dynamicProperties)), "fb" in i.a && (r.a.fb = PropertyFactory.getProp(this, i.a.fb, 0, .01, this.dynamicProperties)), "t" in i.a && (r.a.t = PropertyFactory.getProp(this, i.a.t, 0, 0, this.dynamicProperties)), r.s = PropertyFactory.getTextSelectorProp(this, i.s, this.dynamicProperties), r.s.t = i.s.t, this.viewData.a[s] = r
            } else this.viewData.a = [];
            e.p && "m" in e.p ? (this.viewData.p = {
                f: PropertyFactory.getProp(this, e.p.f, 0, 0, this.dynamicProperties),
                l: PropertyFactory.getProp(this, e.p.l, 0, 0, this.dynamicProperties),
                r: e.p.r,
                m: this.maskManager.getMaskProperty(e.p.m)
            }, this.maskPath = !0) : this.maskPath = !1
        }, ITextElement.prototype.createPathShape = function(t, e) {
            var s, r, i, a, n = e.length,
                o = "";
            for (s = 0; n > s; s += 1) {
                for (i = e[s].ks.k.i.length, a = e[s].ks.k, r = 1; i > r; r += 1) 1 == r && (o += " M" + t.applyToPointStringified(a.v[0][0], a.v[0][1])), o += " C" + t.applyToPointStringified(a.o[r - 1][0], a.o[r - 1][1]) + " " + t.applyToPointStringified(a.i[r][0], a.i[r][1]) + " " + t.applyToPointStringified(a.v[r][0], a.v[r][1]);
                o += " C" + t.applyToPointStringified(a.o[r - 1][0], a.o[r - 1][1]) + " " + t.applyToPointStringified(a.i[0][0], a.i[0][1]) + " " + t.applyToPointStringified(a.v[0][0], a.v[0][1]), o += "z"
            }
            return o
        }, ITextElement.prototype.getMeasures = function() {
            var t, e, s, r, i = this.mHelper,
                a = this.renderType,
                n = this.data,
                o = n.t.d,
                h = o.l;
            if (this.maskPath) {
                var l = this.viewData.p.m;
                if (!this.viewData.p.n || this.viewData.p.mdf) {
                    var p = l.v;
                    this.viewData.p.r && (p = reversePath(p, l.closed));
                    var m = {
                        tLength: 0,
                        segments: []
                    };
                    r = p.v.length - 1;
                    var f, d = 0;
                    for (s = 0; r > s; s += 1) f = {
                        s: p.v[s],
                        e: p.v[s + 1],
                        to: [p.o[s][0] - p.v[s][0], p.o[s][1] - p.v[s][1]],
                        ti: [p.i[s + 1][0] - p.v[s + 1][0], p.i[s + 1][1] - p.v[s + 1][1]]
                    }, bez.buildBezierData(f), m.tLength += f.bezierData.segmentLength, m.segments.push(f), d += f.bezierData.segmentLength;
                    s = r, l.closed && (f = {
                        s: p.v[s],
                        e: p.v[0],
                        to: [p.o[s][0] - p.v[s][0], p.o[s][1] - p.v[s][1]],
                        ti: [p.i[0][0] - p.v[0][0], p.i[0][1] - p.v[0][1]]
                    }, bez.buildBezierData(f), m.tLength += f.bezierData.segmentLength, m.segments.push(f), d += f.bezierData.segmentLength), this.viewData.p.pi = m
                }
                var c, u, y, m = this.viewData.p.pi,
                    g = this.viewData.p.f.v,
                    v = 0,
                    b = 1,
                    E = 0,
                    P = !0,
                    k = m.segments;
                if (0 > g && l.closed)
                    for (m.tLength < Math.abs(g) && (g = -Math.abs(g) % m.tLength), v = k.length - 1, y = k[v].bezierData.points, b = y.length - 1; 0 > g;) g += y[b].partialLength, b -= 1, 0 > b && (v -= 1, y = k[v].bezierData.points, b = y.length - 1);
                y = k[v].bezierData.points, u = y[b - 1], c = y[b];
                var x, S, C = c.partialLength
            }
            r = h.length, t = 0, e = 0;
            var D, M, w, A, T, I = 1.2 * n.t.d.s * .714,
                F = !0,
                V = this.viewData,
                B = Array.apply(null, {
                    length: r
                });
            this.lettersChangedFlag = !1, A = V.a.length;
            var R, _, L, N, H, O, z, j, G, W, q, X, Y, Z, J, U, K = -1,
                $ = g,
                Q = v,
                tt = b,
                et = -1,
                st = 0;
            for (s = 0; r > s; s += 1)
                if (i.reset(), O = 1, h[s].n) t = 0, e += o.yOffset, e += F ? 1 : 0, g = $, F = !1, st = 0, this.maskPath && (v = Q, b = tt, y = k[v].bezierData.points, u = y[b - 1], c = y[b], C = c.partialLength, E = 0), B[s] = this.emptyProp;
                else {
                    if (this.maskPath) {
                        if (et !== h[s].line) {
                            switch (o.j) {
                                case 1:
                                    g += d - o.lineWidths[h[s].line];
                                    break;
                                case 2:
                                    g += (d - o.lineWidths[h[s].line]) / 2
                            }
                            et = h[s].line
                        }
                        K !== h[s].ind && (h[K] && (g += h[K].extra), g += h[s].an / 2, K = h[s].ind), g += V.m.a.v[0] * h[s].an / 200;
                        var rt = 0;
                        for (w = 0; A > w; w += 1) D = V.a[w].a, "p" in D && (M = V.a[w].s, _ = M.getMult(h[s].anIndexes[w], n.t.a[w].s.totalChars), rt += _.length ? D.p.v[0] * _[0] : D.p.v[0] * _);
                        for (P = !0; P;) E + C >= g + rt || !y ? (x = (g + rt - E) / c.partialLength, N = u.point[0] + (c.point[0] - u.point[0]) * x, H = u.point[1] + (c.point[1] - u.point[1]) * x, i.translate(0, -(V.m.a.v[1] * I / 100) + e), P = !1) : y && (E += c.partialLength, b += 1, b >= y.length && (b = 0, v += 1, k[v] ? y = k[v].bezierData.points : l.closed ? (b = 0, v = 0, y = k[v].bezierData.points) : (E -= c.partialLength, y = null)), y && (u = c, c = y[b], C = c.partialLength));
                        L = h[s].an / 2 - h[s].add, i.translate(-L, 0, 0)
                    } else L = h[s].an / 2 - h[s].add, i.translate(-L, 0, 0), i.translate(-V.m.a.v[0] * h[s].an / 200, -V.m.a.v[1] * I / 100, 0);
                    for (st += h[s].l / 2, w = 0; A > w; w += 1) D = V.a[w].a, "t" in D && (M = V.a[w].s, _ = M.getMult(h[s].anIndexes[w], n.t.a[w].s.totalChars), this.maskPath ? g += _.length ? D.t * _[0] : D.t * _ : t += _.length ? D.t.v * _[0] : D.t.v * _);
                    for (st += h[s].l / 2, o.strokeWidthAnim && (j = n.t.d.sw || 0), o.strokeColorAnim && (z = n.t.d.sc ? [n.t.d.sc[0], n.t.d.sc[1], n.t.d.sc[2]] : [0, 0, 0]), o.fillColorAnim && (G = [n.t.d.fc[0], n.t.d.fc[1], n.t.d.fc[2]]), w = 0; A > w; w += 1) D = V.a[w].a, "a" in D && (M = V.a[w].s, _ = M.getMult(h[s].anIndexes[w], n.t.a[w].s.totalChars), _.length ? i.translate(-D.a.v[0] * _[0], -D.a.v[1] * _[1], D.a.v[2] * _[2]) : i.translate(-D.a.v[0] * _, -D.a.v[1] * _, D.a.v[2] * _));
                    for (w = 0; A > w; w += 1) D = V.a[w].a, "s" in D && (M = V.a[w].s, _ = M.getMult(h[s].anIndexes[w], n.t.a[w].s.totalChars), _.length ? i.scale(1 + (D.s.v[0] - 1) * _[0], 1 + (D.s.v[1] - 1) * _[1], 1) : i.scale(1 + (D.s.v[0] - 1) * _, 1 + (D.s.v[1] - 1) * _, 1));
                    for (w = 0; A > w; w += 1) {
                        if (D = V.a[w].a, M = V.a[w].s, _ = M.getMult(h[s].anIndexes[w], n.t.a[w].s.totalChars), "sk" in D && (_.length ? i.skewFromAxis(-D.sk.v * _[0], D.sa.v * _[1]) : i.skewFromAxis(-D.sk.v * _, D.sa.v * _)), "r" in D && i.rotateZ(_.length ? -D.r.v * _[2] : -D.r.v * _), "ry" in D && i.rotateY(_.length ? D.ry.v * _[1] : D.ry.v * _), "rx" in D && i.rotateX(_.length ? D.rx.v * _[0] : D.rx.v * _), "o" in D && (O += _.length ? (D.o.v * _[0] - O) * _[0] : (D.o.v * _ - O) * _), o.strokeWidthAnim && "sw" in D && (j += _.length ? D.sw.v * _[0] : D.sw.v * _), o.strokeColorAnim && "sc" in D)
                            for (W = 0; 3 > W; W += 1) z[W] = Math.round(_.length ? 255 * (z[W] + (D.sc.v[W] - z[W]) * _[0]) : 255 * (z[W] + (D.sc.v[W] - z[W]) * _));
                        if (o.fillColorAnim) {
                            if ("fc" in D)
                                for (W = 0; 3 > W; W += 1) G[W] = _.length ? G[W] + (D.fc.v[W] - G[W]) * _[0] : G[W] + (D.fc.v[W] - G[W]) * _;
                            "fh" in D && (G = _.length ? addHueToRGB(G, D.fh.v * _[0]) : addHueToRGB(G, D.fh.v * _)), "fs" in D && (G = _.length ? addSaturationToRGB(G, D.fs.v * _[0]) : addSaturationToRGB(G, D.fs.v * _)), "fb" in D && (G = _.length ? addBrightnessToRGB(G, D.fb.v * _[0]) : addBrightnessToRGB(G, D.fb.v * _))
                        }
                    }
                    for (w = 0; A > w; w += 1) D = V.a[w].a, "p" in D && (M = V.a[w].s, _ = M.getMult(h[s].anIndexes[w], n.t.a[w].s.totalChars), this.maskPath ? _.length ? i.translate(0, D.p.v[1] * _[0], -D.p.v[2] * _[1]) : i.translate(0, D.p.v[1] * _, -D.p.v[2] * _) : _.length ? i.translate(D.p.v[0] * _[0], D.p.v[1] * _[1], -D.p.v[2] * _[2]) : i.translate(D.p.v[0] * _, D.p.v[1] * _, -D.p.v[2] * _));
                    if (o.strokeWidthAnim && (q = 0 > j ? 0 : j), o.strokeColorAnim && (X = "rgb(" + Math.round(255 * z[0]) + "," + Math.round(255 * z[1]) + "," + Math.round(255 * z[2]) + ")"), o.fillColorAnim && (Y = "rgb(" + Math.round(255 * G[0]) + "," + Math.round(255 * G[1]) + "," + Math.round(255 * G[2]) + ")"), this.maskPath) {
                        if (n.t.p.p) {
                            S = (c.point[1] - u.point[1]) / (c.point[0] - u.point[0]);
                            var it = 180 * Math.atan(S) / Math.PI;
                            c.point[0] < u.point[0] && (it += 180), i.rotate(-it * Math.PI / 180)
                        }
                        i.translate(N, H, 0), i.translate(V.m.a.v[0] * h[s].an / 200, V.m.a.v[1] * I / 100, 0), g -= V.m.a.v[0] * h[s].an / 200, h[s + 1] && K !== h[s + 1].ind && (g += h[s].an / 2, g += o.tr / 1e3 * n.t.d.s)
                    } else {
                        switch (i.translate(t, e, 0), o.ps && i.translate(o.ps[0], o.ps[1] + o.ascent, 0), o.j) {
                            case 1:
                                i.translate(o.justifyOffset + (o.boxWidth - o.lineWidths[h[s].line]), 0, 0);
                                break;
                            case 2:
                                i.translate(o.justifyOffset + (o.boxWidth - o.lineWidths[h[s].line]) / 2, 0, 0)
                        }
                        i.translate(L, 0, 0), i.translate(V.m.a.v[0] * h[s].an / 200, V.m.a.v[1] * I / 100, 0), t += h[s].l + o.tr / 1e3 * n.t.d.s
                    }
                    "html" === a ? Z = i.toCSS() : "svg" === a ? Z = i.to2dCSS() : J = [i.props[0], i.props[1], i.props[2], i.props[3], i.props[4], i.props[5], i.props[6], i.props[7], i.props[8], i.props[9], i.props[10], i.props[11], i.props[12], i.props[13], i.props[14], i.props[15]], U = O, R = this.renderedLetters[s], !R || R.o === U && R.sw === q && R.sc === X && R.fc === Y ? "svg" !== a && "html" !== a || R && R.m === Z ? "canvas" !== a || R && R.props[0] === J[0] && R.props[1] === J[1] && R.props[4] === J[4] && R.props[5] === J[5] && R.props[12] === J[12] && R.props[13] === J[13] ? T = R : (this.lettersChangedFlag = !0, T = new LetterProps(U, q, X, Y, null, J)) : (this.lettersChangedFlag = !0, T = new LetterProps(U, q, X, Y, Z)) : (this.lettersChangedFlag = !0, T = new LetterProps(U, q, X, Y, Z, J)), this.renderedLetters[s] = T
                }
        }, ITextElement.prototype.emptyProp = new LetterProps, createElement(SVGBaseElement, SVGTextElement), SVGTextElement.prototype.init = ITextElement.prototype.init, SVGTextElement.prototype.createPathShape = ITextElement.prototype.createPathShape, SVGTextElement.prototype.getMeasures = ITextElement.prototype.getMeasures, SVGTextElement.prototype.createElements = function() {
            this._parent.createElements.call(this);
            var t = this.data.t.d;
            t.fc ? this.layerElement.setAttribute("fill", "rgb(" + Math.round(255 * t.fc[0]) + "," + Math.round(255 * t.fc[1]) + "," + Math.round(255 * t.fc[2]) + ")") : this.layerElement.setAttribute("fill", "rgba(0,0,0,0)"), t.sc && (this.layerElement.setAttribute("stroke", "rgb(" + Math.round(255 * t.sc[0]) + "," + Math.round(255 * t.sc[1]) + "," + Math.round(255 * t.sc[2]) + ")"), this.layerElement.setAttribute("stroke-width", t.sw)), this.layerElement.setAttribute("font-size", t.s);
            var e = this.globalData.fontManager.getFontByName(t.f);
            if (e.fClass) this.layerElement.setAttribute("class", e.fClass);
            else {
                this.layerElement.setAttribute("font-family", e.fFamily);
                var s = t.fWeight,
                    r = t.fStyle;
                this.layerElement.setAttribute("font-style", r), this.layerElement.setAttribute("font-weight", s)
            }
            var i, a, n = t.l || [];
            if (a = n.length) {
                var o, h, l = this.mHelper,
                    p = "",
                    m = this.data.singleShape;
                if (m) var f = 0,
                    d = 0,
                    c = t.lineWidths,
                    u = t.boxWidth,
                    y = !0;
                for (i = 0; a > i; i += 1) {
                    if (this.globalData.fontManager.chars ? m && 0 !== i || (o = document.createElementNS(svgNS, "path")) : o = document.createElementNS(svgNS, "text"), o.setAttribute("stroke-linecap", "butt"), o.setAttribute("stroke-linejoin", "round"), o.setAttribute("stroke-miterlimit", "4"), m && n[i].n && (f = 0, d += t.yOffset, d += y ? 1 : 0, y = !1), l.reset(), this.globalData.fontManager.chars && l.scale(t.s / 100, t.s / 100), m) {
                        switch (t.ps && l.translate(t.ps[0], t.ps[1] + t.ascent, 0), t.j) {
                            case 1:
                                l.translate(t.justifyOffset + (u - c[n[i].line]), 0, 0);
                                break;
                            case 2:
                                l.translate(t.justifyOffset + (u - c[n[i].line]) / 2, 0, 0)
                        }
                        l.translate(f, d, 0)
                    }
                    if (this.globalData.fontManager.chars) {
                        var g, v = this.globalData.fontManager.getCharData(t.t.charAt(i), e.fStyle, this.globalData.fontManager.getFontByName(t.f).fFamily);
                        g = v ? v.data : null, g && g.shapes && (h = g.shapes[0].it, m || (p = ""), p += this.createPathShape(l, h), m || o.setAttribute("d", p)), m || this.layerElement.appendChild(o)
                    } else o.textContent = n[i].val, o.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve"), this.layerElement.appendChild(o), m && o.setAttribute("transform", l.to2dCSS());
                    m && (f += n[i].l), this.textSpans.push(o)
                }
                this.data.ln && this.layerElement.setAttribute("id", this.data.ln), this.data.cl && this.layerElement.setAttribute("class", this.data.cl), m && this.globalData.fontManager.chars && (o.setAttribute("d", p), this.layerElement.appendChild(o))
            }
        }, SVGTextElement.prototype.hide = function() {
            this.hidden || (this.layerElement.style.display = "none", this.hidden = !0)
        }, SVGTextElement.prototype.renderFrame = function(t) {
            var e = this._parent.renderFrame.call(this, t);
            if (e === !1) return void this.hide();
            if (this.hidden && (this.hidden = !1, this.layerElement.style.display = "block"), !this.data.singleShape && (this.getMeasures(), this.lettersChangedFlag)) {
                var s, r, i = this.renderedLetters,
                    a = this.data.t.d.l;
                r = a.length;
                var n;
                for (s = 0; r > s; s += 1) a[s].n || (n = i[s], this.textSpans[s].setAttribute("transform", n.m), this.textSpans[s].setAttribute("opacity", n.o), n.sw && this.textSpans[s].setAttribute("stroke-width", n.sw), n.sc && this.textSpans[s].setAttribute("stroke", n.sc), n.fc && this.textSpans[s].setAttribute("fill", n.fc));
                this.firstFrame && (this.firstFrame = !1)
            }
        }, SVGTextElement.prototype.destroy = function() {
            this._parent.destroy.call()
        }, createElement(SVGBaseElement, ICompElement), ICompElement.prototype.hide = function() {
            if (!this.hidden) {
                var t, e = this.elements.length;
                for (t = 0; e > t; t += 1) this.elements[t] && this.elements[t].hide();
                this.hidden = !0
            }
        }, ICompElement.prototype.prepareFrame = function(t) {
            if (this._parent.prepareFrame.call(this, t), this.isVisible !== !1 || this.data.xt) {
                var e = t;
                this.tm && (e = this.tm.v, e === this.data.op && (e = this.data.op - 1)), this.renderedFrame = e / this.data.sr;
                var s, r = this.elements.length;
                for (this.completeLayers || this.checkLayers(this.renderedFrame), s = 0; r > s; s += 1)(this.completeLayers || this.elements[s]) && this.elements[s].prepareFrame(e / this.data.sr - this.layers[s].st)
            }
        }, ICompElement.prototype.renderFrame = function(t) {
            var e, s = this._parent.renderFrame.call(this, t),
                r = this.layers.length;
            if (s === !1) return void this.hide();
            for (this.hidden = !1, e = 0; r > e; e += 1)(this.completeLayers || this.elements[e]) && this.elements[e].renderFrame();
            this.firstFrame && (this.firstFrame = !1)
        }, ICompElement.prototype.setElements = function(t) {
            this.elements = t
        }, ICompElement.prototype.getElements = function() {
            return this.elements
        }, ICompElement.prototype.destroy = function() {
            this._parent.destroy.call();
            var t, e = this.layers.length;
            for (t = 0; e > t; t += 1) this.elements[t] && this.elements[t].destroy()
        }, ICompElement.prototype.checkLayers = SVGRenderer.prototype.checkLayers, ICompElement.prototype.buildItem = SVGRenderer.prototype.buildItem, ICompElement.prototype.buildAllItems = SVGRenderer.prototype.buildAllItems, ICompElement.prototype.buildElementParenting = SVGRenderer.prototype.buildElementParenting, ICompElement.prototype.createItem = SVGRenderer.prototype.createItem, ICompElement.prototype.createImage = SVGRenderer.prototype.createImage, ICompElement.prototype.createComp = SVGRenderer.prototype.createComp, ICompElement.prototype.createSolid = SVGRenderer.prototype.createSolid, ICompElement.prototype.createShape = SVGRenderer.prototype.createShape, ICompElement.prototype.createText = SVGRenderer.prototype.createText, ICompElement.prototype.createBase = SVGRenderer.prototype.createBase, ICompElement.prototype.appendElementInPos = SVGRenderer.prototype.appendElementInPos, createElement(SVGBaseElement, IImageElement), IImageElement.prototype.createElements = function() {
            var t = this.globalData.getAssetsPath(this.assetData);
            this._parent.createElements.call(this), this.innerElem = document.createElementNS(svgNS, "image"), this.innerElem.setAttribute("width", this.assetData.w + "px"), this.innerElem.setAttribute("height", this.assetData.h + "px"), this.innerElem.setAttribute("preserveAspectRatio", "xMidYMid slice"), this.innerElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", t), this.maskedElement = this.innerElem, this.layerElement.appendChild(this.innerElem), this.data.ln && this.innerElem.setAttribute("id", this.data.ln), this.data.cl && this.innerElem.setAttribute("class", this.data.cl)
        }, IImageElement.prototype.hide = function() {
            this.hidden || (this.innerElem.style.display = "none", this.hidden = !0)
        }, IImageElement.prototype.renderFrame = function(t) {
            var e = this._parent.renderFrame.call(this, t);
            return e === !1 ? void this.hide() : (this.hidden && (this.hidden = !1, this.innerElem.style.display = "block"), void(this.firstFrame && (this.firstFrame = !1)))
        }, IImageElement.prototype.destroy = function() {
            this._parent.destroy.call(), this.innerElem = null
        }, createElement(SVGBaseElement, IShapeElement), IShapeElement.prototype.lcEnum = {
            1: "butt",
            2: "round",
            3: "butt"
        }, IShapeElement.prototype.ljEnum = {
            1: "miter",
            2: "round",
            3: "butt"
        }, IShapeElement.prototype.buildExpressionInterface = function() {}, IShapeElement.prototype.createElements = function() {
            this._parent.createElements.call(this), this.searchShapes(this.shapesData, this.viewData, this.layerElement, this.dynamicProperties, 0), (!this.data.hd || this.data.td) && styleUnselectableDiv(this.layerElement)
        }, IShapeElement.prototype.setGradientData = function(t, e, s) {
            var r, i = "gr_" + randomString(10);
            r = 1 === e.t ? document.createElementNS(svgNS, "linearGradient") : document.createElementNS(svgNS, "radialGradient"), r.setAttribute("id", i), r.setAttribute("spreadMethod", "pad"), r.setAttribute("gradientUnits", "userSpaceOnUse");
            var a, n, o, h = [];
            for (o = 4 * e.g.p, n = 0; o > n; n += 4) a = document.createElementNS(svgNS, "stop"), r.appendChild(a), h.push(a);
            t.setAttribute("gf" === e.ty ? "fill" : "stroke", "url(#" + i + ")"), this.globalData.defs.appendChild(r), s.gf = r, s.cst = h
        }, IShapeElement.prototype.setGradientOpacity = function(t, e, s) {
            if (t.g.k.k[0].s && t.g.k.k[0].s.length > 4 * t.g.p || t.g.k.k.length > 4 * t.g.p) {
                var r, i, a, n, o = document.createElementNS(svgNS, "mask"),
                    h = document.createElementNS(svgNS, "path");
                o.appendChild(h);
                var l = "op_" + randomString(10),
                    p = "mk_" + randomString(10);
                o.setAttribute("id", p), r = 1 === t.t ? document.createElementNS(svgNS, "linearGradient") : document.createElementNS(svgNS, "radialGradient"), r.setAttribute("id", l), r.setAttribute("spreadMethod", "pad"), r.setAttribute("gradientUnits", "userSpaceOnUse"), n = t.g.k.k[0].s ? t.g.k.k[0].s.length : t.g.k.k.length;
                var m = [];
                for (a = 4 * t.g.p; n > a; a += 2) i = document.createElementNS(svgNS, "stop"), i.setAttribute("stop-color", "rgb(255,255,255)"), r.appendChild(i), m.push(i);
                return h.setAttribute("gf" === t.ty ? "fill" : "stroke", "url(#" + l + ")"), this.globalData.defs.appendChild(r), this.globalData.defs.appendChild(o), e.of = r, e.ost = m, s.msElem = h, p
            }
        }, IShapeElement.prototype.searchShapes = function(t, e, s, r, i) {
            var a, n, o, h, l, p = t.length - 1,
                m = [],
                f = [];
            for (a = p; a >= 0; a -= 1)
                if ("fl" == t[a].ty || "st" == t[a].ty || "gf" == t[a].ty || "gs" == t[a].ty) {
                    e[a] = {}, h = {
                        type: t[a].ty,
                        d: "",
                        ld: "",
                        lvl: i,
                        transformers: [],
                        mdf: !1
                    };
                    var d = document.createElementNS(svgNS, "path");
                    if (e[a].o = PropertyFactory.getProp(this, t[a].o, 0, .01, r), ("st" == t[a].ty || "gs" == t[a].ty) && (d.setAttribute("stroke-linecap", this.lcEnum[t[a].lc] || "round"), d.setAttribute("stroke-linejoin", this.ljEnum[t[a].lj] || "round"), d.setAttribute("fill-opacity", "0"), 1 == t[a].lj && d.setAttribute("stroke-miterlimit", t[a].ml), e[a].w = PropertyFactory.getProp(this, t[a].w, 0, null, r), t[a].d)) {
                        var c = PropertyFactory.getDashProp(this, t[a].d, "svg", r);
                        c.k || (d.setAttribute("stroke-dasharray", c.dasharray), d.setAttribute("stroke-dashoffset", c.dashoffset)), e[a].d = c
                    }
                    if ("fl" == t[a].ty || "st" == t[a].ty) e[a].c = PropertyFactory.getProp(this, t[a].c, 1, 255, r), s.appendChild(d);
                    else {
                        e[a].g = PropertyFactory.getGradientProp(this, t[a].g, r), 2 == t[a].t && (e[a].h = PropertyFactory.getProp(this, t[a].h, 1, .01, r), e[a].a = PropertyFactory.getProp(this, t[a].a, 1, degToRads, r)), e[a].s = PropertyFactory.getProp(this, t[a].s, 1, null, r), e[a].e = PropertyFactory.getProp(this, t[a].e, 1, null, r), this.setGradientData(d, t[a], e[a], h);
                        var u = this.setGradientOpacity(t[a], e[a], h);
                        u && d.setAttribute("mask", "url(#" + u + ")"), e[a].elem = d, s.appendChild(d)
                    }
                    t[a].ln && d.setAttribute("id", t[a].ln), t[a].cl && d.setAttribute("class", t[a].cl), h.pElem = d, this.stylesList.push(h), e[a].style = h, m.push(h)
                } else if ("gr" == t[a].ty) {
                e[a] = {
                    it: []
                };
                var y = document.createElementNS(svgNS, "g");
                s.appendChild(y), e[a].gr = y, this.searchShapes(t[a].it, e[a].it, y, r, i + 1)
            } else if ("tr" == t[a].ty)
                for (e[a] = {
                        transform: {
                            op: PropertyFactory.getProp(this, t[a].o, 0, .01, r),
                            mProps: PropertyFactory.getProp(this, t[a], 2, null, r)
                        },
                        elements: []
                    }, l = e[a].transform, o = this.stylesList.length, n = 0; o > n; n += 1) this.stylesList[n].closed || this.stylesList[n].transformers.push(l);
            else if ("sh" == t[a].ty || "rc" == t[a].ty || "el" == t[a].ty || "sr" == t[a].ty) {
                e[a] = {
                    elements: [],
                    caches: [],
                    styles: [],
                    lStr: ""
                };
                var g = 4;
                for ("rc" == t[a].ty ? g = 5 : "el" == t[a].ty ? g = 6 : "sr" == t[a].ty && (g = 7), e[a].sh = ShapePropertyFactory.getShapeProp(this, t[a], g, r), e[a].lvl = i, this.shapes.push(e[a].sh), this.addShapeToModifiers(e[a].sh), o = this.stylesList.length, n = 0; o > n; n += 1) this.stylesList[n].closed || e[a].elements.push({
                    ty: this.stylesList[n].type,
                    st: this.stylesList[n]
                })
            } else if ("tm" == t[a].ty || "rd" == t[a].ty || "ms" == t[a].ty) {
                var v = ShapeModifiers.getModifier(t[a].ty);
                v.init(this, t[a], r), this.shapeModifiers.push(v), f.push(v), e[a] = v
            }
            for (p = m.length, a = 0; p > a; a += 1) m[a].closed = !0;
            for (p = f.length, a = 0; p > a; a += 1) f[a].closed = !0
        }, IShapeElement.prototype.addShapeToModifiers = function(t) {
            var e, s = this.shapeModifiers.length;
            for (e = 0; s > e; e += 1) this.shapeModifiers[e].addShape(t)
        }, IShapeElement.prototype.renderModifiers = function() {
            if (this.shapeModifiers.length) {
                var t, e = this.shapes.length;
                for (t = 0; e > t; t += 1) this.shapes[t].reset();
                for (e = this.shapeModifiers.length, t = e - 1; t >= 0; t -= 1) this.shapeModifiers[t].processShapes(this.firstFrame)
            }
        }, IShapeElement.prototype.renderFrame = function(t) {
            var e = this._parent.renderFrame.call(this, t);
            return e === !1 ? void this.hide() : (this.globalToLocal([0, 0, 0]), this.hidden = !1, this.renderModifiers(), void this.renderShape(null, null, !0, null))
        }, IShapeElement.prototype.hide = function() {
            if (!this.hidden) {
                var t, e = this.stylesList.length;
                for (t = e - 1; t >= 0; t -= 1) "0" !== this.stylesList[t].ld && (this.stylesList[t].ld = "0", this.stylesList[t].pElem.style.display = "none", this.stylesList[t].pElem.parentNode && (this.stylesList[t].parent = this.stylesList[t].pElem.parentNode));
                this.hidden = !0
            }
        }, IShapeElement.prototype.renderShape = function(t, e, s, r) {
            var i, a;
            if (!t)
                for (t = this.shapesData, a = this.stylesList.length, i = 0; a > i; i += 1) this.stylesList[i].d = "", this.stylesList[i].mdf = !1;
            e || (e = this.viewData), a = t.length - 1;
            var n;
            for (i = a; i >= 0; i -= 1) n = t[i].ty, "tr" == n ? ((this.firstFrame || e[i].transform.op.mdf && r) && r.setAttribute("opacity", e[i].transform.op.v), (this.firstFrame || e[i].transform.mProps.mdf && r) && r.setAttribute("transform", e[i].transform.mProps.v.to2dCSS())) : "sh" == n || "el" == n || "rc" == n || "sr" == n ? this.renderPath(t[i], e[i]) : "fl" == n ? this.renderFill(t[i], e[i]) : "gf" == n ? this.renderGradient(t[i], e[i]) : "gs" == n ? (this.renderGradient(t[i], e[i]), this.renderStroke(t[i], e[i])) : "st" == n ? this.renderStroke(t[i], e[i]) : "gr" == n && this.renderShape(t[i].it, e[i].it, !1, e[i].gr);
            if (s) {
                for (a = this.stylesList.length, i = 0; a > i; i += 1) "0" === this.stylesList[i].ld && (this.stylesList[i].ld = "1", this.stylesList[i].pElem.style.display = "block"), (this.stylesList[i].mdf || this.firstFrame) && (this.stylesList[i].pElem.setAttribute("d", this.stylesList[i].d), this.stylesList[i].msElem && this.stylesList[i].msElem.setAttribute("d", this.stylesList[i].d));
                this.firstFrame && (this.firstFrame = !1)
            }
        }, IShapeElement.prototype.renderPath = function(t, e) {
            var s, r, i, a, n, o, h, l, p = e.elements.length,
                m = e.lvl;
            for (l = 0; p > l; l += 1) {
                o = e.sh.mdf || this.firstFrame, n = "";
                var f = e.sh.paths;
                if (a = f.length, e.elements[l].st.lvl < m) {
                    var d, c, u = this.mHelper.reset(),
                        y = e.elements[l].st.lvl;
                    for (c = m - 1; c >= y; c -= 1) o = e.elements[l].st.transformers[c - y].mProps.mdf || o, d = e.elements[l].st.transformers[c - y].mProps.v.props, u.transform(d[0], d[1], d[2], d[3], d[4], d[5], d[6], d[7], d[8], d[9], d[10], d[11], d[12], d[13], d[14], d[15]);
                    if (o) {
                        for (i = 0; a > i; i += 1)
                            if (h = f[i], h && h.v) {
                                for (s = h.v.length, r = 1; s > r; r += 1) 1 == r && (n += " M" + u.applyToPointStringified(h.v[0][0], h.v[0][1])), n += " C" + u.applyToPointStringified(h.o[r - 1][0], h.o[r - 1][1]) + " " + u.applyToPointStringified(h.i[r][0], h.i[r][1]) + " " + u.applyToPointStringified(h.v[r][0], h.v[r][1]);
                                1 == s && (n += " M" + u.applyToPointStringified(h.v[0][0], h.v[0][1])), h.c && (n += " C" + u.applyToPointStringified(h.o[r - 1][0], h.o[r - 1][1]) + " " + u.applyToPointStringified(h.i[0][0], h.i[0][1]) + " " + u.applyToPointStringified(h.v[0][0], h.v[0][1]), n += "z")
                            }
                        e.caches[l] = n
                    } else n = e.caches[l]
                } else if (o) {
                    for (i = 0; a > i; i += 1)
                        if (h = f[i], h && h.v) {
                            for (s = h.v.length, r = 1; s > r; r += 1) 1 == r && (n += " M" + h.v[0].join(",")), n += " C" + h.o[r - 1].join(",") + " " + h.i[r].join(",") + " " + h.v[r].join(",");
                            1 == s && (n += " M" + h.v[0].join(",")), h.c && (n += " C" + h.o[r - 1].join(",") + " " + h.i[0].join(",") + " " + h.v[0].join(","), n += "z")
                        }
                    e.caches[l] = n
                } else n = e.caches[l];
                e.elements[l].st.d += n, e.elements[l].st.mdf = o || e.elements[l].st.mdf
            }
        }, IShapeElement.prototype.renderFill = function(t, e) {
            var s = e.style;
            (e.c.mdf || this.firstFrame) && s.pElem.setAttribute("fill", "rgb(" + bm_floor(e.c.v[0]) + "," + bm_floor(e.c.v[1]) + "," + bm_floor(e.c.v[2]) + ")"), (e.o.mdf || this.firstFrame) && s.pElem.setAttribute("fill-opacity", e.o.v)
        }, IShapeElement.prototype.renderGradient = function(t, e) {
            var s = e.gf,
                r = e.of,
                i = e.s.v,
                a = e.e.v;
            if (e.o.mdf || this.firstFrame) {
                var n = "gf" === t.ty ? "fill-opacity" : "stroke-opacity";
                e.elem.setAttribute(n, e.o.v)
            }
            if (e.s.mdf || this.firstFrame) {
                var o = 1 === t.t ? "x1" : "cx",
                    h = "x1" === o ? "y1" : "cy";
                s.setAttribute(o, i[0]), s.setAttribute(h, i[1]), r && (r.setAttribute(o, i[0]), r.setAttribute(h, i[1]))
            }
            var l, p, m, f;
            if (e.g.cmdf || this.firstFrame) {
                l = e.cst;
                var d = e.g.c;
                for (m = l.length, p = 0; m > p; p += 1) f = l[p], f.setAttribute("offset", d[4 * p] + "%"), f.setAttribute("stop-color", "rgb(" + d[4 * p + 1] + "," + d[4 * p + 2] + "," + d[4 * p + 3] + ")")
            }
            if (r && (e.g.omdf || this.firstFrame)) {
                l = e.ost;
                var c = e.g.o;
                for (m = l.length, p = 0; m > p; p += 1) f = l[p], f.setAttribute("offset", c[2 * p] + "%"), f.setAttribute("stop-opacity", c[2 * p + 1])
            }
            if (1 === t.t)(e.e.mdf || this.firstFrame) && (s.setAttribute("x2", a[0]), s.setAttribute("y2", a[1]), r && (r.setAttribute("x2", a[0]), r.setAttribute("y2", a[1])));
            else {
                var u;
                if ((e.s.mdf || e.e.mdf || this.firstFrame) && (u = Math.sqrt(Math.pow(i[0] - a[0], 2) + Math.pow(i[1] - a[1], 2)), s.setAttribute("r", u), r && r.setAttribute("r", u)), e.e.mdf || e.h.mdf || e.a.mdf || this.firstFrame) {
                    u || (u = Math.sqrt(Math.pow(i[0] - a[0], 2) + Math.pow(i[1] - a[1], 2)));
                    var y = Math.atan2(a[1] - i[1], a[0] - i[0]),
                        g = e.h.v >= 1 ? .99 : e.h.v <= -1 ? -.99 : e.h.v,
                        v = u * g,
                        b = Math.cos(y + e.a.v) * v + i[0],
                        E = Math.sin(y + e.a.v) * v + i[1];
                    s.setAttribute("fx", b), s.setAttribute("fy", E), r && (r.setAttribute("fx", b), r.setAttribute("fy", E))
                }
            }
        }, IShapeElement.prototype.renderStroke = function(t, e) {
            var s = e.style,
                r = e.d;
            r && r.k && (r.mdf || this.firstFrame) && (s.pElem.setAttribute("stroke-dasharray", r.dasharray), s.pElem.setAttribute("stroke-dashoffset", r.dashoffset)), e.c && (e.c.mdf || this.firstFrame) && s.pElem.setAttribute("stroke", "rgb(" + bm_floor(e.c.v[0]) + "," + bm_floor(e.c.v[1]) + "," + bm_floor(e.c.v[2]) + ")"), (e.o.mdf || this.firstFrame) && s.pElem.setAttribute("stroke-opacity", e.o.v), (e.w.mdf || this.firstFrame) && (s.pElem.setAttribute("stroke-width", e.w.v), s.msElem && s.msElem.setAttribute("stroke-width", e.w.v))
        }, IShapeElement.prototype.destroy = function() {
            this._parent.destroy.call(), this.shapeData = null, this.viewData = null, this.parentContainer = null, this.placeholder = null
        }, createElement(SVGBaseElement, ISolidElement), ISolidElement.prototype.createElements = function() {
            this._parent.createElements.call(this);
            var t = document.createElementNS(svgNS, "rect");
            t.setAttribute("width", this.data.sw), t.setAttribute("height", this.data.sh), t.setAttribute("fill", this.data.sc), this.layerElement.appendChild(t), this.innerElem = t, this.data.ln && this.innerElem.setAttribute("id", this.data.ln), this.data.cl && this.innerElem.setAttribute("class", this.data.cl)
        }, ISolidElement.prototype.hide = IImageElement.prototype.hide, ISolidElement.prototype.renderFrame = IImageElement.prototype.renderFrame, ISolidElement.prototype.destroy = IImageElement.prototype.destroy, createElement(BaseElement, CVBaseElement), CVBaseElement.prototype.createElements = function() {
            this.checkParenting()
        }, CVBaseElement.prototype.checkBlendMode = function(t) {
            if (t.blendMode !== this.data.bm) {
                t.blendMode = this.data.bm;
                var e = "";
                switch (this.data.bm) {
                    case 0:
                        e = "normal";
                        break;
                    case 1:
                        e = "multiply";
                        break;
                    case 2:
                        e = "screen";
                        break;
                    case 3:
                        e = "overlay";
                        break;
                    case 4:
                        e = "darken";
                        break;
                    case 5:
                        e = "lighten";
                        break;
                    case 6:
                        e = "color-dodge";
                        break;
                    case 7:
                        e = "color-burn";
                        break;
                    case 8:
                        e = "hard-light";
                        break;
                    case 9:
                        e = "soft-light";
                        break;
                    case 10:
                        e = "difference";
                        break;
                    case 11:
                        e = "exclusion";
                        break;
                    case 12:
                        e = "hue";
                        break;
                    case 13:
                        e = "saturation";
                        break;
                    case 14:
                        e = "color";
                        break;
                    case 15:
                        e = "luminosity"
                }
                t.canvasContext.globalCompositeOperation = e
            }
        }, CVBaseElement.prototype.renderFrame = function(t) {
            if (3 === this.data.ty) return !1;
            if (this.checkBlendMode(0 === this.data.ty ? this.parentGlobalData : this.globalData), !this.isVisible) return this.isVisible;
            this.finalTransform.opMdf = this.finalTransform.op.mdf, this.finalTransform.matMdf = this.finalTransform.mProp.mdf, this.finalTransform.opacity = this.finalTransform.op.v;
            var e, s = this.finalTransform.mat;
            if (this.hierarchy) {
                var r, i = this.hierarchy.length;
                for (e = this.finalTransform.mProp.v.props, s.cloneFromProps(e), r = 0; i > r; r += 1) this.finalTransform.matMdf = !!this.hierarchy[r].finalTransform.mProp.mdf || this.finalTransform.matMdf, e = this.hierarchy[r].finalTransform.mProp.v.props, s.transform(e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9], e[10], e[11], e[12], e[13], e[14], e[15])
            } else t ? (e = this.finalTransform.mProp.v.props, s.cloneFromProps(e)) : s.cloneFromProps(this.finalTransform.mProp.v.props);
            return t && (e = t.mat.props, s.transform(e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9], e[10], e[11], e[12], e[13], e[14], e[15]), this.finalTransform.opacity *= t.opacity, this.finalTransform.opMdf = !!t.opMdf || this.finalTransform.opMdf, this.finalTransform.matMdf = !!t.matMdf || this.finalTransform.matMdf), this.data.hasMask && (this.globalData.renderer.save(!0), this.maskManager.renderFrame(0 === this.data.ty ? null : s)), this.data.hd && (this.isVisible = !1), this.isVisible
        }, CVBaseElement.prototype.addMasks = function(t) {
            this.maskManager = new CVMaskElement(t, this, this.globalData)
        }, CVBaseElement.prototype.destroy = function() {
            this.canvasContext = null, this.data = null, this.globalData = null, this.maskManager && this.maskManager.destroy()
        }, CVBaseElement.prototype.mHelper = new Matrix, createElement(CVBaseElement, CVCompElement), CVCompElement.prototype.ctxTransform = CanvasRenderer.prototype.ctxTransform, CVCompElement.prototype.ctxOpacity = CanvasRenderer.prototype.ctxOpacity, CVCompElement.prototype.save = CanvasRenderer.prototype.save, CVCompElement.prototype.restore = CanvasRenderer.prototype.restore, CVCompElement.prototype.reset = function() {
            this.contextData.cArrPos = 0, this.contextData.cTr.reset(), this.contextData.cO = 1
        }, CVCompElement.prototype.resize = function(t) {
            var e = Math.max(t.sx, t.sy);
            this.canvas.width = this.data.w * e, this.canvas.height = this.data.h * e, this.transformCanvas = {
                sc: e,
                w: this.data.w * e,
                h: this.data.h * e,
                props: [e, 0, 0, 0, 0, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]
            };
            var s, r = this.elements.length;
            for (s = 0; r > s; s += 1) this.elements[s] && 0 === this.elements[s].data.ty && this.elements[s].resize(t)
        }, CVCompElement.prototype.prepareFrame = function(t) {
            if (this.globalData.frameId = this.parentGlobalData.frameId, this.globalData.mdf = !1, this._parent.prepareFrame.call(this, t), this.isVisible !== !1 || this.data.xt) {
                var e = t;
                this.tm && (e = this.tm.v, e === this.data.op && (e = this.data.op - 1)), this.renderedFrame = e / this.data.sr;
                var s, r = this.elements.length;
                for (this.completeLayers || this.checkLayers(t), s = 0; r > s; s += 1)(this.completeLayers || this.elements[s]) && (this.elements[s].prepareFrame(e / this.data.sr - this.layers[s].st), 0 === this.elements[s].data.ty && this.elements[s].globalData.mdf && (this.globalData.mdf = !0));
                this.globalData.mdf && !this.data.xt && (this.canvasContext.clearRect(0, 0, this.data.w, this.data.h), this.ctxTransform(this.transformCanvas.props))
            }
        }, CVCompElement.prototype.renderFrame = function(t) {
            if (this._parent.renderFrame.call(this, t) !== !1) {
                if (this.globalData.mdf) {
                    var e, s = this.layers.length;
                    for (e = s - 1; e >= 0; e -= 1)(this.completeLayers || this.elements[e]) && this.elements[e].renderFrame()
                }
                this.data.hasMask && this.globalData.renderer.restore(!0), this.firstFrame && (this.firstFrame = !1), this.parentGlobalData.renderer.save(), this.parentGlobalData.renderer.ctxTransform(this.finalTransform.mat.props), this.parentGlobalData.renderer.ctxOpacity(this.finalTransform.opacity), this.parentGlobalData.renderer.canvasContext.drawImage(this.canvas, 0, 0, this.data.w, this.data.h), this.parentGlobalData.renderer.restore(), this.globalData.mdf && this.reset()
            }
        }, CVCompElement.prototype.setElements = function(t) {
            this.elements = t
        }, CVCompElement.prototype.getElements = function() {
            return this.elements
        }, CVCompElement.prototype.destroy = function() {
            var t, e = this.layers.length;
            for (t = e - 1; t >= 0; t -= 1) this.elements[t].destroy();
            this.layers = null, this.elements = null, this._parent.destroy.call()
        }, CVCompElement.prototype.checkLayers = CanvasRenderer.prototype.checkLayers, CVCompElement.prototype.buildItem = CanvasRenderer.prototype.buildItem, CVCompElement.prototype.buildAllItems = CanvasRenderer.prototype.buildAllItems, CVCompElement.prototype.createItem = CanvasRenderer.prototype.createItem, CVCompElement.prototype.createImage = CanvasRenderer.prototype.createImage, CVCompElement.prototype.createComp = CanvasRenderer.prototype.createComp, CVCompElement.prototype.createSolid = CanvasRenderer.prototype.createSolid, CVCompElement.prototype.createShape = CanvasRenderer.prototype.createShape, CVCompElement.prototype.createText = CanvasRenderer.prototype.createText, CVCompElement.prototype.createBase = CanvasRenderer.prototype.createBase, CVCompElement.prototype.buildElementParenting = CanvasRenderer.prototype.buildElementParenting, createElement(CVBaseElement, CVImageElement), CVImageElement.prototype.createElements = function() {
            var t = function() {
                    if (this.globalData.elementLoaded(), this.assetData.w !== this.img.width || this.assetData.h !== this.img.height) {
                        var t = document.createElement("canvas");
                        t.width = this.assetData.w, t.height = this.assetData.h;
                        var e, s, r = t.getContext("2d"),
                            i = this.img.width,
                            a = this.img.height,
                            n = i / a,
                            o = this.assetData.w / this.assetData.h;
                        n > o ? (s = a, e = s * o) : (e = i, s = e / o), r.drawImage(this.img, (i - e) / 2, (a - s) / 2, e, s, 0, 0, this.assetData.w, this.assetData.h), this.img = t
                    }
                }.bind(this),
                e = function() {
                    this.failed = !0, this.globalData.elementLoaded()
                }.bind(this);
            this.img = new Image, this.img.addEventListener("load", t, !1), this.img.addEventListener("error", e, !1);
            var s = this.globalData.getAssetsPath(this.assetData);
            this.img.src = s, this._parent.createElements.call(this)
        }, CVImageElement.prototype.renderFrame = function(t) {
            if (!this.failed && this._parent.renderFrame.call(this, t) !== !1) {
                var e = this.canvasContext;
                this.globalData.renderer.save();
                var s = this.finalTransform.mat.props;
                this.globalData.renderer.ctxTransform(s), this.globalData.renderer.ctxOpacity(this.finalTransform.opacity), e.drawImage(this.img, 0, 0), this.globalData.renderer.restore(this.data.hasMask), this.firstFrame && (this.firstFrame = !1)
            }
        }, CVImageElement.prototype.destroy = function() {
            this.img = null, this._parent.destroy.call()
        }, CVMaskElement.prototype.getMaskProperty = function(t) {
            return this.viewData[t]
        }, CVMaskElement.prototype.prepareFrame = function(t) {
            var e, s = this.dynamicProperties.length;
            for (e = 0; s > e; e += 1) this.dynamicProperties[e].getValue(t), this.dynamicProperties[e].mdf && (this.element.globalData.mdf = !0)
        }, CVMaskElement.prototype.renderFrame = function(t) {
            var e, s, r, i, a, n = this.element.canvasContext,
                o = this.data.masksProperties.length,
                h = !1;
            for (e = 0; o > e; e++)
                if ("n" !== this.masksProperties[e].mode) {
                    h === !1 && (n.beginPath(), h = !0), this.masksProperties[e].inv && (n.moveTo(0, 0), n.lineTo(this.element.globalData.compWidth, 0), n.lineTo(this.element.globalData.compWidth, this.element.globalData.compHeight), n.lineTo(0, this.element.globalData.compHeight), n.lineTo(0, 0)), a = this.viewData[e].v, s = t ? t.applyToPointArray(a.v[0][0], a.v[0][1], 0) : a.v[0], n.moveTo(s[0], s[1]);
                    var l, p = a.v.length;
                    for (l = 1; p > l; l++) s = t ? t.applyToPointArray(a.o[l - 1][0], a.o[l - 1][1], 0) : a.o[l - 1], r = t ? t.applyToPointArray(a.i[l][0], a.i[l][1], 0) : a.i[l], i = t ? t.applyToPointArray(a.v[l][0], a.v[l][1], 0) : a.v[l], n.bezierCurveTo(s[0], s[1], r[0], r[1], i[0], i[1]);
                    s = t ? t.applyToPointArray(a.o[l - 1][0], a.o[l - 1][1], 0) : a.o[l - 1], r = t ? t.applyToPointArray(a.i[0][0], a.i[0][1], 0) : a.i[0], i = t ? t.applyToPointArray(a.v[0][0], a.v[0][1], 0) : a.v[0], n.bezierCurveTo(s[0], s[1], r[0], r[1], i[0], i[1])
                }
            h && n.clip()
        }, CVMaskElement.prototype.getMask = function(t) {
            for (var e = 0, s = this.masksProperties.length; s > e;) {
                if (this.masksProperties[e].nm === t) return {
                    maskPath: this.viewData[e].pv
                };
                e += 1
            }
        }, CVMaskElement.prototype.destroy = function() {
            this.element = null
        }, createElement(CVBaseElement, CVShapeElement), CVShapeElement.prototype.lcEnum = {
            1: "butt",
            2: "round",
            3: "butt"
        }, CVShapeElement.prototype.ljEnum = {
            1: "miter",
            2: "round",
            3: "butt"
        }, CVShapeElement.prototype.transformHelper = {
            opacity: 1,
            mat: new Matrix,
            matMdf: !1,
            opMdf: !1
        }, CVShapeElement.prototype.dashResetter = [], CVShapeElement.prototype.createElements = function() {
            this._parent.createElements.call(this), this.searchShapes(this.shapesData, this.viewData, this.dynamicProperties)
        }, CVShapeElement.prototype.searchShapes = function(t, e, s) {
            var r, i, a, n, o = t.length - 1,
                h = [],
                l = [];
            for (r = o; r >= 0; r -= 1)
                if ("fl" == t[r].ty || "st" == t[r].ty) {
                    if (n = {
                            type: t[r].ty,
                            elements: []
                        }, e[r] = {}, ("fl" == t[r].ty || "st" == t[r].ty) && (e[r].c = PropertyFactory.getProp(this, t[r].c, 1, 255, s), e[r].c.k || (n.co = "rgb(" + bm_floor(e[r].c.v[0]) + "," + bm_floor(e[r].c.v[1]) + "," + bm_floor(e[r].c.v[2]) + ")")), e[r].o = PropertyFactory.getProp(this, t[r].o, 0, .01, s), "st" == t[r].ty && (n.lc = this.lcEnum[t[r].lc] || "round", n.lj = this.ljEnum[t[r].lj] || "round", 1 == t[r].lj && (n.ml = t[r].ml), e[r].w = PropertyFactory.getProp(this, t[r].w, 0, null, s), e[r].w.k || (n.wi = e[r].w.v), t[r].d)) {
                        var p = PropertyFactory.getDashProp(this, t[r].d, "canvas", s);
                        e[r].d = p, e[r].d.k || (n.da = e[r].d.dasharray, n.do = e[r].d.dashoffset)
                    }
                    this.stylesList.push(n), e[r].style = n, h.push(e[r].style)
                } else if ("gr" == t[r].ty) e[r] = {
                it: []
            }, this.searchShapes(t[r].it, e[r].it, s);
            else if ("tr" == t[r].ty) e[r] = {
                transform: {
                    mat: new Matrix,
                    opacity: 1,
                    matMdf: !1,
                    opMdf: !1,
                    op: PropertyFactory.getProp(this, t[r].o, 0, .01, s),
                    mProps: PropertyFactory.getProp(this, t[r], 2, null, s)
                },
                elements: []
            };
            else if ("sh" == t[r].ty || "rc" == t[r].ty || "el" == t[r].ty || "sr" == t[r].ty) {
                e[r] = {
                    nodes: [],
                    trNodes: [],
                    tr: [0, 0, 0, 0, 0, 0]
                };
                var m = 4;
                "rc" == t[r].ty ? m = 5 : "el" == t[r].ty ? m = 6 : "sr" == t[r].ty && (m = 7), e[r].sh = ShapePropertyFactory.getShapeProp(this, t[r], m, s), this.shapes.push(e[r].sh), this.addShapeToModifiers(e[r].sh), a = this.stylesList.length;
                var f = !1,
                    d = !1;
                for (i = 0; a > i; i += 1) this.stylesList[i].closed || (this.stylesList[i].elements.push(e[r]), "st" === this.stylesList[i].type ? f = !0 : d = !0);
                e[r].st = f, e[r].fl = d
            } else if ("tm" == t[r].ty || "rd" == t[r].ty) {
                var c = ShapeModifiers.getModifier(t[r].ty);
                c.init(this, t[r], s), this.shapeModifiers.push(c), l.push(c), e[r] = c
            }
            for (o = h.length, r = 0; o > r; r += 1) h[r].closed = !0;
            for (o = l.length, r = 0; o > r; r += 1) l[r].closed = !0
        }, CVShapeElement.prototype.addShapeToModifiers = IShapeElement.prototype.addShapeToModifiers, CVShapeElement.prototype.renderModifiers = IShapeElement.prototype.renderModifiers, CVShapeElement.prototype.renderFrame = function(t) {
            this._parent.renderFrame.call(this, t) !== !1 && (this.transformHelper.mat.reset(), this.transformHelper.opacity = this.finalTransform.opacity, this.transformHelper.matMdf = !1, this.transformHelper.opMdf = this.finalTransform.opMdf, this.renderModifiers(), this.renderShape(this.transformHelper, null, null, !0), this.data.hasMask && this.globalData.renderer.restore(!0))
        }, CVShapeElement.prototype.renderShape = function(t, e, s, r) {
            var i, a;
            if (!e)
                for (e = this.shapesData, a = this.stylesList.length, i = 0; a > i; i += 1) this.stylesList[i].d = "", this.stylesList[i].mdf = !1;
            s || (s = this.viewData), a = e.length - 1;
            var n, o;
            for (n = t, i = a; i >= 0; i -= 1)
                if ("tr" == e[i].ty) {
                    n = s[i].transform;
                    var h = s[i].transform.mProps.v.props;
                    if (n.matMdf = n.mProps.mdf, n.opMdf = n.op.mdf, o = n.mat, o.cloneFromProps(h), t) {
                        var l = t.mat.props;
                        n.opacity = t.opacity, n.opacity *= s[i].transform.op.v, n.matMdf = !!t.matMdf || n.matMdf, n.opMdf = !!t.opMdf || n.opMdf, o.transform(l[0], l[1], l[2], l[3], l[4], l[5], l[6], l[7], l[8], l[9], l[10], l[11], l[12], l[13], l[14], l[15])
                    } else n.opacity = n.op.o
                } else "sh" == e[i].ty || "el" == e[i].ty || "rc" == e[i].ty || "sr" == e[i].ty ? this.renderPath(e[i], s[i], n) : "fl" == e[i].ty ? this.renderFill(e[i], s[i], n) : "st" == e[i].ty ? this.renderStroke(e[i], s[i], n) : "gr" == e[i].ty ? this.renderShape(n, e[i].it, s[i].it) : "tm" == e[i].ty;
            if (r) {
                a = this.stylesList.length;
                var p, m, f, d, c, u, y, g = this.globalData.renderer,
                    v = this.globalData.canvasContext;
                for (g.save(), g.ctxTransform(this.finalTransform.mat.props), i = 0; a > i; i += 1)
                    if (y = this.stylesList[i].type, "st" !== y || 0 !== this.stylesList[i].wi) {
                        for (g.save(), c = this.stylesList[i].elements, "st" === y ? (v.strokeStyle = this.stylesList[i].co, v.lineWidth = this.stylesList[i].wi, v.lineCap = this.stylesList[i].lc, v.lineJoin = this.stylesList[i].lj, v.miterLimit = this.stylesList[i].ml || 0) : v.fillStyle = this.stylesList[i].co, g.ctxOpacity(this.stylesList[i].coOp), "st" !== y && v.beginPath(), m = c.length, p = 0; m > p; p += 1) {
                            for ("st" === y && (v.beginPath(), this.stylesList[i].da ? (v.setLineDash(this.stylesList[i].da), v.lineDashOffset = this.stylesList[i].do, this.globalData.isDashed = !0) : this.globalData.isDashed && (v.setLineDash(this.dashResetter), this.globalData.isDashed = !1)), u = c[p].trNodes, d = u.length, f = 0; d > f; f += 1) "m" == u[f].t ? v.moveTo(u[f].p[0], u[f].p[1]) : "c" == u[f].t ? v.bezierCurveTo(u[f].p1[0], u[f].p1[1], u[f].p2[0], u[f].p2[1], u[f].p3[0], u[f].p3[1]) : v.closePath();
                            "st" === y && v.stroke()
                        }
                        "st" !== y && v.fill(), g.restore()
                    }
                g.restore(), this.firstFrame && (this.firstFrame = !1)
            }
        }, CVShapeElement.prototype.renderPath = function(t, e, s) {
            var r, i, a, n, o = s.matMdf || e.sh.mdf || this.firstFrame;
            if (o) {
                var h = e.sh.paths;
                n = h.length;
                var l = e.trNodes;
                for (l.length = 0, a = 0; n > a; a += 1) {
                    var p = h[a];
                    if (p && p.v) {
                        for (r = p.v.length, i = 1; r > i; i += 1) 1 == i && l.push({
                            t: "m",
                            p: s.mat.applyToPointArray(p.v[0][0], p.v[0][1], 0)
                        }), l.push({
                            t: "c",
                            p1: s.mat.applyToPointArray(p.o[i - 1][0], p.o[i - 1][1], 0),
                            p2: s.mat.applyToPointArray(p.i[i][0], p.i[i][1], 0),
                            p3: s.mat.applyToPointArray(p.v[i][0], p.v[i][1], 0)
                        });
                        1 == r && l.push({
                            t: "m",
                            p: s.mat.applyToPointArray(p.v[0][0], p.v[0][1], 0)
                        }), p.c && (l.push({
                            t: "c",
                            p1: s.mat.applyToPointArray(p.o[i - 1][0], p.o[i - 1][1], 0),
                            p2: s.mat.applyToPointArray(p.i[0][0], p.i[0][1], 0),
                            p3: s.mat.applyToPointArray(p.v[0][0], p.v[0][1], 0)
                        }), l.push({
                            t: "z"
                        })), e.lStr = l
                    }
                }
                if (e.st)
                    for (i = 0; 16 > i; i += 1) e.tr[i] = s.mat.props[i];
                e.trNodes = l
            }
        }, CVShapeElement.prototype.renderFill = function(t, e, s) {
            var r = e.style;
            (e.c.mdf || this.firstFrame) && (r.co = "rgb(" + bm_floor(e.c.v[0]) + "," + bm_floor(e.c.v[1]) + "," + bm_floor(e.c.v[2]) + ")"), (e.o.mdf || s.opMdf || this.firstFrame) && (r.coOp = e.o.v * s.opacity)
        }, CVShapeElement.prototype.renderStroke = function(t, e, s) {
            var r = e.style,
                i = e.d;
            i && (i.mdf || this.firstFrame) && (r.da = i.dasharray, r.do = i.dashoffset), (e.c.mdf || this.firstFrame) && (r.co = "rgb(" + bm_floor(e.c.v[0]) + "," + bm_floor(e.c.v[1]) + "," + bm_floor(e.c.v[2]) + ")"), (e.o.mdf || s.opMdf || this.firstFrame) && (r.coOp = e.o.v * s.opacity), (e.w.mdf || this.firstFrame) && (r.wi = e.w.v)
        }, CVShapeElement.prototype.destroy = function() {
            this.shapesData = null, this.globalData = null, this.canvasContext = null, this.stylesList.length = 0, this.viewData.length = 0, this._parent.destroy.call()
        }, createElement(CVBaseElement, CVSolidElement), CVSolidElement.prototype.renderFrame = function(t) {
            if (this._parent.renderFrame.call(this, t) !== !1) {
                var e = this.canvasContext;
                this.globalData.renderer.save(), this.globalData.renderer.ctxTransform(this.finalTransform.mat.props), this.globalData.renderer.ctxOpacity(this.finalTransform.opacity), e.fillStyle = this.data.sc, e.fillRect(0, 0, this.data.sw, this.data.sh), this.globalData.renderer.restore(this.data.hasMask), this.firstFrame && (this.firstFrame = !1)
            }
        }, createElement(CVBaseElement, CVTextElement), CVTextElement.prototype.init = ITextElement.prototype.init, CVTextElement.prototype.getMeasures = ITextElement.prototype.getMeasures, CVTextElement.prototype.getMult = ITextElement.prototype.getMult, CVTextElement.prototype.tHelper = document.createElement("canvas").getContext("2d"), CVTextElement.prototype.createElements = function() {
            this._parent.createElements.call(this);
            var t = this.data.t.d,
                e = !1;
            t.fc ? (e = !0, this.values.fill = "rgb(" + Math.round(255 * t.fc[0]) + "," + Math.round(255 * t.fc[1]) + "," + Math.round(255 * t.fc[2]) + ")") : this.values.fill = "rgba(0,0,0,0)", this.fill = e;
            var s = !1;
            t.sc && (s = !0, this.values.stroke = "rgb(" + Math.round(255 * t.sc[0]) + "," + Math.round(255 * t.sc[1]) + "," + Math.round(255 * t.sc[2]) + ")", this.values.sWidth = t.sw);
            var r, i, a = this.globalData.fontManager.getFontByName(t.f),
                n = t.l,
                o = this.mHelper;
            this.stroke = s, this.values.fValue = t.s + "px " + this.globalData.fontManager.getFontByName(t.f).fFamily, i = t.t.length, this.tHelper.font = this.values.fValue;
            var h, l, p, m, f, d, c, u, y, g, v = this.data.singleShape;
            if (v) var b = 0,
                E = 0,
                P = t.lineWidths,
                k = t.boxWidth,
                x = !0;
            for (r = 0; i > r; r += 1) {
                h = this.globalData.fontManager.getCharData(t.t.charAt(r), a.fStyle, this.globalData.fontManager.getFontByName(t.f).fFamily);
                var l;
                if (l = h ? h.data : null, o.reset(), v && n[r].n && (b = 0, E += t.yOffset, E += x ? 1 : 0, x = !1), l && l.shapes) {
                    if (f = l.shapes[0].it, c = f.length, o.scale(t.s / 100, t.s / 100), v) {
                        switch (t.ps && o.translate(t.ps[0], t.ps[1] + t.ascent, 0), t.j) {
                            case 1:
                                o.translate(t.justifyOffset + (k - P[n[r].line]), 0, 0);
                                break;
                            case 2:
                                o.translate(t.justifyOffset + (k - P[n[r].line]) / 2, 0, 0)
                        }
                        o.translate(b, E, 0)
                    }
                    for (y = new Array(c), d = 0; c > d; d += 1) {
                        for (m = f[d].ks.k.i.length, u = f[d].ks.k, g = [], p = 1; m > p; p += 1) 1 == p && g.push(o.applyToX(u.v[0][0], u.v[0][1], 0), o.applyToY(u.v[0][0], u.v[0][1], 0)), g.push(o.applyToX(u.o[p - 1][0], u.o[p - 1][1], 0), o.applyToY(u.o[p - 1][0], u.o[p - 1][1], 0), o.applyToX(u.i[p][0], u.i[p][1], 0), o.applyToY(u.i[p][0], u.i[p][1], 0), o.applyToX(u.v[p][0], u.v[p][1], 0), o.applyToY(u.v[p][0], u.v[p][1], 0));
                        g.push(o.applyToX(u.o[p - 1][0], u.o[p - 1][1], 0), o.applyToY(u.o[p - 1][0], u.o[p - 1][1], 0), o.applyToX(u.i[0][0], u.i[0][1], 0), o.applyToY(u.i[0][0], u.i[0][1], 0), o.applyToX(u.v[0][0], u.v[0][1], 0), o.applyToY(u.v[0][0], u.v[0][1], 0)), y[d] = g
                    }
                } else y = [];
                v && (b += n[r].l), this.textSpans.push({
                    elem: y
                })
            }
        }, CVTextElement.prototype.renderFrame = function(t) {
            if (this._parent.renderFrame.call(this, t) !== !1) {
                var e = this.canvasContext,
                    s = this.finalTransform.mat.props;
                this.globalData.renderer.save(), this.globalData.renderer.ctxTransform(s), this.globalData.renderer.ctxOpacity(this.finalTransform.opacity), e.font = this.values.fValue, e.lineCap = "butt", e.lineJoin = "miter", e.miterLimit = 4, this.data.singleShape || this.getMeasures();
                var r, i, a, n, o, h, l = this.renderedLetters,
                    p = this.data.t.d.l;
                i = p.length;
                var m, f, d, c = null,
                    u = null,
                    y = null;
                for (r = 0; i > r; r += 1)
                    if (!p[r].n) {
                        if (m = l[r], m && (this.globalData.renderer.save(), this.globalData.renderer.ctxTransform(m.props), this.globalData.renderer.ctxOpacity(m.o)), this.fill) {
                            for (m && m.fc ? c !== m.fc && (c = m.fc, e.fillStyle = m.fc) : c !== this.values.fill && (c = this.values.fill, e.fillStyle = this.values.fill), f = this.textSpans[r].elem, n = f.length, this.globalData.canvasContext.beginPath(), a = 0; n > a; a += 1)
                                for (d = f[a], h = d.length, this.globalData.canvasContext.moveTo(d[0], d[1]), o = 2; h > o; o += 6) this.globalData.canvasContext.bezierCurveTo(d[o], d[o + 1], d[o + 2], d[o + 3], d[o + 4], d[o + 5]);
                            this.globalData.canvasContext.closePath(), this.globalData.canvasContext.fill()
                        }
                        if (this.stroke) {
                            for (m && m.sw ? y !== m.sw && (y = m.sw, e.lineWidth = m.sw) : y !== this.values.sWidth && (y = this.values.sWidth, e.lineWidth = this.values.sWidth), m && m.sc ? u !== m.sc && (u = m.sc, e.strokeStyle = m.sc) : u !== this.values.stroke && (u = this.values.stroke, e.strokeStyle = this.values.stroke), f = this.textSpans[r].elem, n = f.length, this.globalData.canvasContext.beginPath(), a = 0; n > a; a += 1)
                                for (d = f[a], h = d.length, this.globalData.canvasContext.moveTo(d[0], d[1]), o = 2; h > o; o += 6) this.globalData.canvasContext.bezierCurveTo(d[o], d[o + 1], d[o + 2], d[o + 3], d[o + 4], d[o + 5]);
                            this.globalData.canvasContext.closePath(), this.globalData.canvasContext.stroke()
                        }
                        m && this.globalData.renderer.restore()
                    }
                this.globalData.renderer.restore(this.data.hasMask), this.firstFrame && (this.firstFrame = !1)
            }
        }, createElement(BaseElement, HBaseElement), HBaseElement.prototype.checkBlendMode = function() {}, HBaseElement.prototype.setBlendMode = BaseElement.prototype.setBlendMode, HBaseElement.prototype.getBaseElement = function() {
            return this.baseElement
        }, HBaseElement.prototype.createElements = function() {
            this.data.hasMask ? (this.layerElement = document.createElementNS(svgNS, "svg"), this.baseElement = this.layerElement, this.maskedElement = this.layerElement) : this.layerElement = this.parentContainer, !this.data.ln || 4 !== this.data.ty && 0 !== this.data.ty || (this.layerElement === this.parentContainer && (this.layerElement = document.createElementNS(svgNS, "g"), this.baseElement = this.layerElement), this.layerElement.setAttribute("id", this.data.ln)), this.setBlendMode(), this.layerElement !== this.parentContainer && (this.placeholder = null), this.checkParenting()
        }, HBaseElement.prototype.renderFrame = function(t) {
            if (3 === this.data.ty) return !1;
            if (this.currentFrameNum === this.lastNum || !this.isVisible) return this.isVisible;
            this.lastNum = this.currentFrameNum, this.data.hasMask && this.maskManager.renderFrame(), this.finalTransform.opMdf = this.finalTransform.op.mdf, this.finalTransform.matMdf = this.finalTransform.mProp.mdf, this.finalTransform.opacity = this.finalTransform.op.v, this.firstFrame && (this.finalTransform.opMdf = !0, this.finalTransform.matMdf = !0);
            var e, s = this.finalTransform.mat;
            if (this.hierarchy) {
                var r, i = this.hierarchy.length;
                for (e = this.finalTransform.mProp.v.props, s.cloneFromProps(e), r = 0; i > r; r += 1) this.finalTransform.matMdf = !!this.hierarchy[r].finalTransform.mProp.mdf || this.finalTransform.matMdf,
                    e = this.hierarchy[r].finalTransform.mProp.v.props, s.transform(e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9], e[10], e[11], e[12], e[13], e[14], e[15])
            } else this.isVisible && this.finalTransform.matMdf && (t ? (e = this.finalTransform.mProp.v.props, s.cloneFromProps(e)) : s.cloneFromProps(this.finalTransform.mProp.v.props));
            return t && (e = t.mat.props, s.cloneFromProps(e), this.finalTransform.opacity *= t.opacity, this.finalTransform.opMdf = !!t.opMdf || this.finalTransform.opMdf, this.finalTransform.matMdf = !!t.matMdf || this.finalTransform.matMdf), this.finalTransform.matMdf && (this.layerElement.style.transform = this.layerElement.style.webkitTransform = s.toCSS(), this.finalMat = s), this.finalTransform.opMdf && (this.layerElement.style.opacity = this.finalTransform.opacity), this.isVisible
        }, HBaseElement.prototype.destroy = function() {
            this.layerElement = null, this.parentContainer = null, this.matteElement && (this.matteElement = null), this.maskManager && (this.maskManager.destroy(), this.maskManager = null)
        }, HBaseElement.prototype.getDomElement = function() {
            return this.layerElement
        }, HBaseElement.prototype.addMasks = function(t) {
            this.maskManager = new MaskElement(t, this, this.globalData)
        }, HBaseElement.prototype.hide = function() {}, HBaseElement.prototype.setMatte = function() {}, HBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting, createElement(HBaseElement, HSolidElement), HSolidElement.prototype.createElements = function() {
            var t = document.createElement("div");
            styleDiv(t);
            var e = document.createElementNS(svgNS, "svg");
            e.setAttribute("width", this.data.sw), e.setAttribute("height", this.data.sh), t.appendChild(e), this.layerElement = t, this.baseElement = t, this.innerElem = t, this.data.ln && this.innerElem.setAttribute("id", this.data.ln), 0 !== this.data.bm && this.setBlendMode();
            var s = document.createElementNS(svgNS, "rect");
            s.setAttribute("width", this.data.sw), s.setAttribute("height", this.data.sh), s.setAttribute("fill", this.data.sc), e.appendChild(s), this.data.hasMask && (this.maskedElement = s), this.checkParenting()
        }, HSolidElement.prototype.hide = IImageElement.prototype.hide, HSolidElement.prototype.renderFrame = IImageElement.prototype.renderFrame, HSolidElement.prototype.destroy = IImageElement.prototype.destroy, createElement(HBaseElement, HCompElement), HCompElement.prototype.createElements = function() {
            var t = document.createElement("div");
            if (styleDiv(t), this.data.ln && t.setAttribute("id", this.data.ln), t.style.clip = "rect(0px, " + this.data.w + "px, " + this.data.h + "px, 0px)", this.data.hasMask) {
                var e = document.createElementNS(svgNS, "svg");
                e.setAttribute("width", this.data.w), e.setAttribute("height", this.data.h);
                var s = document.createElementNS(svgNS, "g");
                e.appendChild(s), t.appendChild(e), this.maskedElement = s, this.baseElement = t, this.layerElement = s
            } else this.layerElement = t, this.baseElement = this.layerElement;
            this.checkParenting()
        }, HCompElement.prototype.hide = ICompElement.prototype.hide, HCompElement.prototype.prepareFrame = ICompElement.prototype.prepareFrame, HCompElement.prototype.setElements = ICompElement.prototype.setElements, HCompElement.prototype.getElements = ICompElement.prototype.getElements, HCompElement.prototype.destroy = ICompElement.prototype.destroy, HCompElement.prototype.renderFrame = function(t) {
            var e, s = this._parent.renderFrame.call(this, t),
                r = this.layers.length;
            if (s === !1) return void this.hide();
            for (this.hidden = !1, e = 0; r > e; e += 1)(this.completeLayers || this.elements[e]) && this.elements[e].renderFrame();
            this.firstFrame && (this.firstFrame = !1)
        }, HCompElement.prototype.checkLayers = BaseRenderer.prototype.checkLayers, HCompElement.prototype.buildItem = HybridRenderer.prototype.buildItem, HCompElement.prototype.buildAllItems = BaseRenderer.prototype.buildAllItems, HCompElement.prototype.createItem = HybridRenderer.prototype.createItem, HCompElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting, HCompElement.prototype.createImage = HybridRenderer.prototype.createImage, HCompElement.prototype.createComp = HybridRenderer.prototype.createComp, HCompElement.prototype.createSolid = HybridRenderer.prototype.createSolid, HCompElement.prototype.createShape = HybridRenderer.prototype.createShape, HCompElement.prototype.createText = HybridRenderer.prototype.createText, HCompElement.prototype.createBase = HybridRenderer.prototype.createBase, HCompElement.prototype.appendElementInPos = HybridRenderer.prototype.appendElementInPos, createElement(HBaseElement, HShapeElement);
        var parent = HShapeElement.prototype._parent;
        extendPrototype(IShapeElement, HShapeElement), HShapeElement.prototype._parent = parent, HShapeElement.prototype.createElements = function() {
            var t = document.createElement("div");
            styleDiv(t);
            var e = document.createElementNS(svgNS, "svg"),
                s = this.comp.data ? this.comp.data : this.globalData.compSize;
            if (e.setAttribute("width", s.w), e.setAttribute("height", s.h), this.data.hasMask) {
                var r = document.createElementNS(svgNS, "g");
                t.appendChild(e), e.appendChild(r), this.maskedElement = r, this.layerElement = r, this.shapesContainer = r
            } else t.appendChild(e), this.layerElement = e, this.shapesContainer = document.createElementNS(svgNS, "g"), this.layerElement.appendChild(this.shapesContainer);
            this.data.hd || (this.baseElement = t), this.innerElem = t, this.data.ln && this.innerElem.setAttribute("id", this.data.ln), this.searchShapes(this.shapesData, this.viewData, this.layerElement, this.dynamicProperties, 0), this.buildExpressionInterface(), this.layerElement = t, this.shapeCont = e, 0 !== this.data.bm && this.setBlendMode(), this.checkParenting()
        }, HShapeElement.prototype.renderFrame = function(t) {
            var e = this._parent.renderFrame.call(this, t);
            if (e === !1) return void this.hide();
            if (this.hidden = !1, this.renderModifiers(), this.addedTransforms.mdf = this.finalTransform.matMdf, this.addedTransforms.mats.length = 1, this.addedTransforms.mats[0] = this.finalTransform.mat, this.renderShape(null, null, !0, null), this.isVisible && (this.elemMdf || this.firstFrame)) {
                var s = this.shapeCont.getBBox();
                this.currentBBox.w !== s.width && (this.currentBBox.w = s.width, this.shapeCont.setAttribute("width", s.width)), this.currentBBox.h !== s.height && (this.currentBBox.h = s.height, this.shapeCont.setAttribute("height", s.height)), (this.currentBBox.w !== s.width || this.currentBBox.h !== s.height || this.currentBBox.x !== s.x || this.currentBBox.y !== s.y) && (this.currentBBox.w = s.width, this.currentBBox.h = s.height, this.currentBBox.x = s.x, this.currentBBox.y = s.y, this.shapeCont.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h), this.shapeCont.style.transform = this.shapeCont.style.webkitTransform = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)")
            }
        }, createElement(HBaseElement, HTextElement), HTextElement.prototype.init = ITextElement.prototype.init, HTextElement.prototype.getMeasures = ITextElement.prototype.getMeasures, HTextElement.prototype.createPathShape = ITextElement.prototype.createPathShape, HTextElement.prototype.createElements = function() {
            this.isMasked = this.checkMasks();
            var t = this.data.t.d,
                e = document.createElement("div");
            if (styleDiv(e), this.layerElement = e, this.isMasked) {
                this.renderType = "svg";
                var s = document.createElementNS(svgNS, "svg");
                this.cont = s, this.compW = this.comp.data ? this.comp.data.w : this.globalData.compSize.w, this.compH = this.comp.data ? this.comp.data.h : this.globalData.compSize.h, s.setAttribute("width", this.compW), s.setAttribute("height", this.compH);
                var r = document.createElementNS(svgNS, "g");
                s.appendChild(r), e.appendChild(s), this.maskedElement = r, this.innerElem = r
            } else this.renderType = "html", this.innerElem = e;
            this.baseElement = e, this.innerElem.style.color = this.innerElem.style.fill = t.fc ? "rgb(" + Math.round(255 * t.fc[0]) + "," + Math.round(255 * t.fc[1]) + "," + Math.round(255 * t.fc[2]) + ")" : "rgba(0,0,0,0)", t.sc && (this.innerElem.style.stroke = "rgb(" + Math.round(255 * t.sc[0]) + "," + Math.round(255 * t.sc[1]) + "," + Math.round(255 * t.sc[2]) + ")", this.innerElem.style.strokeWidth = t.sw + "px");
            var i = this.globalData.fontManager.getFontByName(t.f);
            if (!this.globalData.fontManager.chars)
                if (this.innerElem.style.fontSize = t.s + "px", this.innerElem.style.lineHeight = t.s + "px", i.fClass) this.innerElem.className = i.fClass;
                else {
                    this.innerElem.style.fontFamily = i.fFamily;
                    var a = t.fWeight,
                        n = t.fStyle;
                    this.innerElem.style.fontStyle = n, this.innerElem.style.fontWeight = a
                }
            var o, h, l = t.l;
            h = l.length;
            var p, m, f, d, c = this.mHelper,
                u = "";
            for (o = 0; h > o; o += 1) {
                if (this.globalData.fontManager.chars ? (p = document.createElementNS(svgNS, "path"), this.isMasked || (m = document.createElement("div"), f = document.createElementNS(svgNS, "svg"), f.appendChild(p), styleDiv(m)), p.setAttribute("stroke-linecap", "butt"), p.setAttribute("stroke-linejoin", "round"), p.setAttribute("stroke-miterlimit", "4")) : this.isMasked ? p = document.createElementNS(svgNS, "text") : (m = document.createElement("span"), styleDiv(m), p = document.createElement("span"), styleDiv(p), m.appendChild(p)), this.globalData.fontManager.chars) {
                    var y, g = this.globalData.fontManager.getCharData(t.t.charAt(o), i.fStyle, this.globalData.fontManager.getFontByName(t.f).fFamily);
                    if (y = g ? g.data : null, c.reset(), y && y.shapes && (d = y.shapes[0].it, c.scale(t.s / 100, t.s / 100), u = this.createPathShape(c, d), p.setAttribute("d", u)), this.isMasked) this.innerElem.appendChild(p);
                    else if (this.innerElem.appendChild(m), y && y.shapes) {
                        document.body.appendChild(f);
                        var v = f.getBBox();
                        f.setAttribute("width", v.width), f.setAttribute("height", v.height), f.setAttribute("viewBox", v.x + " " + v.y + " " + v.width + " " + v.height), f.style.transform = f.style.webkitTransform = "translate(" + v.x + "px," + v.y + "px)", l[o].yOffset = v.y, m.appendChild(f)
                    } else f.setAttribute("width", 1), f.setAttribute("height", 1)
                } else p.textContent = l[o].val, p.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve"), this.isMasked ? this.innerElem.appendChild(p) : (this.innerElem.appendChild(m), p.style.transform = p.style.webkitTransform = "translate3d(0," + -t.s / 1.2 + "px,0)");
                this.textSpans.push(this.isMasked ? p : m), this.textPaths.push(p)
            }
        }, HTextElement.prototype.hide = SVGTextElement.prototype.hide, HTextElement.prototype.renderFrame = function(t) {
            var e = this._parent.renderFrame.call(this, t);
            if (e === !1) return void this.hide();
            if (this.hidden && (this.hidden = !1, this.innerElem.style.display = "block"), this.data.singleShape) {
                if (!this.firstFrame) return;
                this.isMasked && this.finalTransform.matMdf && (this.cont.setAttribute("viewBox", -this.finalTransform.mProp.p.v[0] + " " + -this.finalTransform.mProp.p.v[1] + " " + this.compW + " " + this.compH), this.cont.style.transform = this.cont.style.webkitTransform = "translate(" + -this.finalTransform.mProp.p.v[0] + "px," + -this.finalTransform.mProp.p.v[1] + "px)")
            }
            if (this.getMeasures(), this.lettersChangedFlag) {
                var s, r, i = this.renderedLetters,
                    a = this.data.t.d.l;
                r = a.length;
                var n;
                for (s = 0; r > s; s += 1) a[s].n || (n = i[s], this.isMasked ? this.textSpans[s].setAttribute("transform", n.m) : this.textSpans[s].style.transform = this.textSpans[s].style.webkitTransform = n.m, this.textSpans[s].style.opacity = n.o, n.sw && this.textPaths[s].setAttribute("stroke-width", n.sw), n.sc && this.textPaths[s].setAttribute("stroke", n.sc), n.fc && (this.textPaths[s].setAttribute("fill", n.fc), this.textPaths[s].style.color = n.fc));
                if (this.isVisible && (this.elemMdf || this.firstFrame) && this.innerElem.getBBox) {
                    var o = this.innerElem.getBBox();
                    this.currentBBox.w !== o.width && (this.currentBBox.w = o.width, this.cont.setAttribute("width", o.width)), this.currentBBox.h !== o.height && (this.currentBBox.h = o.height, this.cont.setAttribute("height", o.height)), (this.currentBBox.w !== o.width || this.currentBBox.h !== o.height || this.currentBBox.x !== o.x || this.currentBBox.y !== o.y) && (this.currentBBox.w = o.width, this.currentBBox.h = o.height, this.currentBBox.x = o.x, this.currentBBox.y = o.y, this.cont.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h), this.cont.style.transform = this.cont.style.webkitTransform = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)")
                }
                this.firstFrame && (this.firstFrame = !1)
            }
        }, HTextElement.prototype.destroy = SVGTextElement.prototype.destroy, createElement(HBaseElement, HImageElement), HImageElement.prototype.createElements = function() {
            var t = this.globalData.getAssetsPath(this.assetData),
                e = new Image;
            if (this.data.hasMask) {
                var s = document.createElement("div");
                styleDiv(s);
                var r = document.createElementNS(svgNS, "svg");
                r.setAttribute("width", this.assetData.w), r.setAttribute("height", this.assetData.h), s.appendChild(r), this.imageElem = document.createElementNS(svgNS, "image"), this.imageElem.setAttribute("width", this.assetData.w + "px"), this.imageElem.setAttribute("height", this.assetData.h + "px"), this.imageElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", t), r.appendChild(this.imageElem), this.layerElement = s, this.baseElement = s, this.innerElem = s, this.maskedElement = this.imageElem
            } else styleDiv(e), this.layerElement = e, this.baseElement = e, this.innerElem = e;
            e.src = t, this.data.ln && this.innerElem.setAttribute("id", this.data.ln), this.checkParenting()
        }, HImageElement.prototype.hide = HSolidElement.prototype.hide, HImageElement.prototype.renderFrame = HSolidElement.prototype.renderFrame, HImageElement.prototype.destroy = HSolidElement.prototype.destroy, createElement(HBaseElement, HCameraElement), HCameraElement.prototype.setup = function() {
            var t, e, s = this.comp.threeDElements.length;
            for (t = 0; s > t; t += 1) e = this.comp.threeDElements[t], e.perspectiveElem.style.perspective = e.perspectiveElem.style.webkitPerspective = this.pe.v + "px", e.container.style.transformOrigin = e.container.style.mozTransformOrigin = e.container.style.webkitTransformOrigin = "0px 0px 0px", e.perspectiveElem.style.transform = e.perspectiveElem.style.webkitTransform = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)"
        }, HCameraElement.prototype.createElements = function() {}, HCameraElement.prototype.hide = function() {}, HCameraElement.prototype.renderFrame = function() {
            var t, e, s = this.firstFrame;
            if (this.hierarchy)
                for (e = this.hierarchy.length, t = 0; e > t; t += 1) s = !!this.hierarchy[t].finalTransform.mProp.mdf || s;
            if (s || this.p && this.p.mdf || this.px && (this.px.mdf || this.py.mdf || this.pz.mdf) || this.rx.mdf || this.ry.mdf || this.rz.mdf || this.or.mdf || this.a && this.a.mdf) {
                if (this.mat.reset(), this.p ? this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]) : this.mat.translate(-this.px.v, -this.py.v, this.pz.v), this.a) {
                    var r = [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]],
                        i = Math.sqrt(Math.pow(r[0], 2) + Math.pow(r[1], 2) + Math.pow(r[2], 2)),
                        a = [r[0] / i, r[1] / i, r[2] / i],
                        n = Math.sqrt(a[2] * a[2] + a[0] * a[0]),
                        o = Math.atan2(a[1], n),
                        h = Math.atan2(a[0], -a[2]);
                    this.mat.rotateY(h).rotateX(-o)
                }
                if (this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v), this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]), this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0), this.mat.translate(0, 0, this.pe.v), this.hierarchy) {
                    var l;
                    for (e = this.hierarchy.length, t = 0; e > t; t += 1) l = this.hierarchy[t].finalTransform.mProp.iv.props, this.mat.transform(l[0], l[1], l[2], l[3], l[4], l[5], l[6], l[7], l[8], l[9], l[10], l[11], -l[12], -l[13], l[14], l[15])
                }
                e = this.comp.threeDElements.length;
                var p;
                for (t = 0; e > t; t += 1) p = this.comp.threeDElements[t], p.container.style.transform = p.container.style.webkitTransform = this.mat.toCSS()
            }
            this.firstFrame = !1
        }, HCameraElement.prototype.destroy = function() {};
        var animationManager = function() {
                function t(e) {
                    var s = 0,
                        r = e.target;
                    for (r.removeEventListener("destroy", t); P > s;) v[s].animation === r && (v.splice(s, 1), s -= 1, P -= 1), s += 1
                }

                function e(e, s) {
                    if (!e) return null;
                    for (var r = 0; P > r;) {
                        if (v[r].elem == e && null !== v[r].elem) return v[r].animation;
                        r += 1
                    }
                    var i = new AnimationItem;
                    return i.setData(e, s), i.addEventListener("destroy", t), v.push({
                        elem: e,
                        animation: i
                    }), P += 1, i
                }

                function s(e) {
                    var s = new AnimationItem;
                    return s.setParams(e), s.addEventListener("destroy", t), v.push({
                        elem: null,
                        animation: s
                    }), P += 1, s
                }

                function r(t, e) {
                    var s;
                    for (s = 0; P > s; s += 1) v[s].animation.setSpeed(t, e)
                }

                function i(t, e) {
                    var s;
                    for (s = 0; P > s; s += 1) v[s].animation.setDirection(t, e)
                }

                function a(t) {
                    var e;
                    for (e = 0; P > e; e += 1) v[e].animation.play(t)
                }

                function n(t, e) {
                    E = !1, b = Date.now();
                    var s;
                    for (s = 0; P > s; s += 1) v[s].animation.moveFrame(t, e)
                }

                function o(t) {
                    var e, s = t - b;
                    for (e = 0; P > e; e += 1) v[e].animation.advanceTime(s);
                    b = t, requestAnimationFrame(o)
                }

                function h(t) {
                    b = t, requestAnimationFrame(o)
                }

                function l(t) {
                    var e;
                    for (e = 0; P > e; e += 1) v[e].animation.pause(t)
                }

                function p(t, e, s) {
                    var r;
                    for (r = 0; P > r; r += 1) v[r].animation.goToAndStop(t, e, s)
                }

                function m(t) {
                    var e;
                    for (e = 0; P > e; e += 1) v[e].animation.stop(t)
                }

                function f(t) {
                    var e;
                    for (e = 0; P > e; e += 1) v[e].animation.togglePause(t)
                }

                function d(t) {
                    var e;
                    for (e = 0; P > e; e += 1) v[e].animation.destroy(t)
                }

                function c(t, s, r) {
                    var i, a = document.getElementsByClassName("bodymovin"),
                        n = a.length;
                    for (i = 0; n > i; i += 1) r && a[i].setAttribute("data-bm-type", r), e(a[i], t);
                    if (s && 0 === n) {
                        r || (r = "svg");
                        var o = document.getElementsByTagName("body")[0];
                        o.innerHTML = "";
                        var h = document.createElement("div");
                        h.style.width = "100%", h.style.height = "100%", h.setAttribute("data-bm-type", r), o.appendChild(h), e(h, t)
                    }
                }

                function u() {
                    var t;
                    for (t = 0; P > t; t += 1) v[t].animation.resize()
                }

                function y() {
                    requestAnimationFrame(h)
                }
                var g = {},
                    v = [],
                    b = 0,
                    E = !0,
                    P = 0;
                return setTimeout(y, 0), g.registerAnimation = e, g.loadAnimation = s, g.setSpeed = r, g.setDirection = i, g.play = a, g.moveFrame = n, g.pause = l, g.stop = m, g.togglePause = f, g.searchAnimations = c, g.resize = u, g.start = y, g.goToAndStop = p, g.destroy = d, g
            }(),
            AnimationItem = function() {
                this._cbs = [], this.name = "", this.path = "", this.isLoaded = !1, this.currentFrame = 0, this.currentRawFrame = 0, this.totalFrames = 0, this.frameRate = 0, this.frameMult = 0, this.playSpeed = 1, this.playDirection = 1, this.pendingElements = 0, this.playCount = 0, this.prerenderFramesFlag = !0, this.animationData = {}, this.layers = [], this.assets = [], this.isPaused = !0, this.autoplay = !1, this.loop = !0, this.renderer = null, this.animationID = randomString(10), this.scaleMode = "fit", this.assetsPath = "", this.timeCompleted = 0, this.segmentPos = 0, this.subframeEnabled = subframeEnabled, this.segments = [], this.pendingSegment = !1, this.projectInterface = ProjectInterface()
            };
        AnimationItem.prototype.setParams = function(t) {
            var e = this;
            t.context && (this.context = t.context), (t.wrapper || t.container) && (this.wrapper = t.wrapper || t.container);
            var s = t.animType ? t.animType : t.renderer ? t.renderer : "svg";
            switch (s) {
                case "canvas":
                    this.renderer = new CanvasRenderer(this, t.rendererSettings);
                    break;
                case "svg":
                    this.renderer = new SVGRenderer(this, t.rendererSettings);
                    break;
                case "hybrid":
                case "html":
                default:
                    this.renderer = new HybridRenderer(this, t.rendererSettings)
            }
            if (this.renderer.setProjectInterface(this.projectInterface), this.animType = s, "" === t.loop || null === t.loop || (this.loop = t.loop !== !1 && (t.loop === !0 || parseInt(t.loop))), this.autoplay = !("autoplay" in t) || t.autoplay, this.name = t.name ? t.name : "", this.prerenderFramesFlag = !("prerender" in t) || t.prerender, this.autoloadSegments = !t.hasOwnProperty("autoloadSegments") || t.autoloadSegments, t.animationData) e.configAnimation(t.animationData);
            else if (t.path) {
                "json" != t.path.substr(-4) && ("/" != t.path.substr(-1, 1) && (t.path += "/"), t.path += "data.json");
                var r = new XMLHttpRequest;
                this.path = -1 != t.path.lastIndexOf("\\") ? t.path.substr(0, t.path.lastIndexOf("\\") + 1) : t.path.substr(0, t.path.lastIndexOf("/") + 1), this.assetsPath = t.assetsPath, this.fileName = t.path.substr(t.path.lastIndexOf("/") + 1), this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf(".json")), r.open("GET", t.path, !0), r.send(), r.onreadystatechange = function() {
                    if (4 == r.readyState)
                        if (200 == r.status) e.configAnimation(JSON.parse(r.responseText));
                        else try {
                            var t = JSON.parse(r.responseText);
                            e.configAnimation(t)
                        } catch (s) {}
                }
            }
        }, AnimationItem.prototype.setData = function(t, e) {
            var s = {
                    wrapper: t,
                    animationData: e ? "object" == typeof e ? e : JSON.parse(e) : null
                },
                r = t.attributes;
            s.path = r.getNamedItem("data-animation-path") ? r.getNamedItem("data-animation-path").value : r.getNamedItem("data-bm-path") ? r.getNamedItem("data-bm-path").value : r.getNamedItem("bm-path") ? r.getNamedItem("bm-path").value : "", s.animType = r.getNamedItem("data-anim-type") ? r.getNamedItem("data-anim-type").value : r.getNamedItem("data-bm-type") ? r.getNamedItem("data-bm-type").value : r.getNamedItem("bm-type") ? r.getNamedItem("bm-type").value : r.getNamedItem("data-bm-renderer") ? r.getNamedItem("data-bm-renderer").value : r.getNamedItem("bm-renderer") ? r.getNamedItem("bm-renderer").value : "canvas";
            var i = r.getNamedItem("data-anim-loop") ? r.getNamedItem("data-anim-loop").value : r.getNamedItem("data-bm-loop") ? r.getNamedItem("data-bm-loop").value : r.getNamedItem("bm-loop") ? r.getNamedItem("bm-loop").value : "";
            "" === i || (s.loop = "false" !== i && ("true" === i || parseInt(i)));
            var a = r.getNamedItem("data-anim-autoplay") ? r.getNamedItem("data-anim-autoplay").value : r.getNamedItem("data-bm-autoplay") ? r.getNamedItem("data-bm-autoplay").value : !r.getNamedItem("bm-autoplay") || r.getNamedItem("bm-autoplay").value;
            s.autoplay = "false" !== a, s.name = r.getNamedItem("data-name") ? r.getNamedItem("data-name").value : r.getNamedItem("data-bm-name") ? r.getNamedItem("data-bm-name").value : r.getNamedItem("bm-name") ? r.getNamedItem("bm-name").value : "";
            var n = r.getNamedItem("data-anim-prerender") ? r.getNamedItem("data-anim-prerender").value : r.getNamedItem("data-bm-prerender") ? r.getNamedItem("data-bm-prerender").value : r.getNamedItem("bm-prerender") ? r.getNamedItem("bm-prerender").value : "";
            "false" === n && (s.prerender = !1), this.setParams(s)
        }, AnimationItem.prototype.includeLayers = function(t) {
            t.op > this.animationData.op && (this.animationData.op = t.op, this.totalFrames = Math.floor(t.op - this.animationData.ip), this.animationData.tf = this.totalFrames);
            var e, s, r = this.animationData.layers,
                i = r.length,
                a = t.layers,
                n = a.length;
            for (s = 0; n > s; s += 1)
                for (e = 0; i > e;) {
                    if (r[e].id == a[s].id) {
                        r[e] = a[s];
                        break
                    }
                    e += 1
                }
            if ((t.chars || t.fonts) && (this.renderer.globalData.fontManager.addChars(t.chars), this.renderer.globalData.fontManager.addFonts(t.fonts, this.renderer.globalData.defs)), t.assets)
                for (i = t.assets.length, e = 0; i > e; e += 1) this.animationData.assets.push(t.assets[e]);
            dataManager.completeData(this.animationData, this.renderer.globalData.fontManager), this.renderer.includeLayers(t.layers), expressionsPlugin && expressionsPlugin.initExpressions(this), this.renderer.renderFrame(null), this.loadNextSegment()
        }, AnimationItem.prototype.loadNextSegment = function() {
            var t = this.animationData.segments;
            if (!t || 0 === t.length || !this.autoloadSegments) return this.trigger("data_ready"), void(this.timeCompleted = this.animationData.tf);
            var e = t.shift();
            this.timeCompleted = e.time * this.frameRate;
            var s = new XMLHttpRequest,
                r = this,
                i = this.path + this.fileName + "_" + this.segmentPos + ".json";
            this.segmentPos += 1, s.open("GET", i, !0), s.send(), s.onreadystatechange = function() {
                if (4 == s.readyState)
                    if (200 == s.status) r.includeLayers(JSON.parse(s.responseText));
                    else try {
                        var t = JSON.parse(s.responseText);
                        r.includeLayers(t)
                    } catch (e) {}
            }
        }, AnimationItem.prototype.loadSegments = function() {
            var t = this.animationData.segments;
            t || (this.timeCompleted = this.animationData.tf), this.loadNextSegment()
        }, AnimationItem.prototype.configAnimation = function(t) {
            this.animationData = t, this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip), this.animationData.tf = this.totalFrames, this.renderer.configAnimation(t), t.assets || (t.assets = []), t.comps && (t.assets = t.assets.concat(t.comps), t.comps = null), this.renderer.searchExtraCompositions(t.assets), this.layers = this.animationData.layers, this.assets = this.animationData.assets, this.frameRate = this.animationData.fr, this.firstFrame = Math.round(this.animationData.ip), this.frameMult = this.animationData.fr / 1e3, this.trigger("config_ready"), this.imagePreloader = new ImagePreloader, this.imagePreloader.setAssetsPath(this.assetsPath), this.imagePreloader.setPath(this.path), this.imagePreloader.loadAssets(t.assets), this.loadSegments(), this.updaFrameModifier(), this.renderer.globalData.fontManager ? this.waitForFontsLoaded() : (dataManager.completeData(this.animationData, this.renderer.globalData.fontManager), this.checkLoaded())
        }, AnimationItem.prototype.waitForFontsLoaded = function() {
            function t() {
                this.renderer.globalData.fontManager.loaded ? (dataManager.completeData(this.animationData, this.renderer.globalData.fontManager), this.checkLoaded()) : setTimeout(t.bind(this), 20)
            }
            return function() {
                t.bind(this)()
            }
        }(), AnimationItem.prototype.addPendingElement = function() {
            this.pendingElements += 1
        }, AnimationItem.prototype.elementLoaded = function() {
            this.pendingElements--, this.checkLoaded()
        }, AnimationItem.prototype.checkLoaded = function() {
            0 === this.pendingElements && (expressionsPlugin && expressionsPlugin.initExpressions(this), this.renderer.initItems(), this.trigger("DOMLoaded"), this.isLoaded = !0, this.gotoFrame(), this.autoplay && this.play())
        }, AnimationItem.prototype.resize = function() {
            this.renderer.updateContainerSize()
        }, AnimationItem.prototype.setSubframe = function(t) {
            this.subframeEnabled = !!t
        }, AnimationItem.prototype.gotoFrame = function() {
            this.currentFrame = this.subframeEnabled ? this.currentRawFrame : Math.floor(this.currentRawFrame), this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted && (this.currentFrame = this.timeCompleted), this.trigger("enterFrame"), this.renderFrame()
        }, AnimationItem.prototype.renderFrame = function() {
            this.isLoaded !== !1 && this.renderer.renderFrame(this.currentFrame + this.firstFrame)
        }, AnimationItem.prototype.play = function(t) {
            t && this.name != t || this.isPaused === !0 && (this.isPaused = !1)
        }, AnimationItem.prototype.pause = function(t) {
            t && this.name != t || this.isPaused === !1 && (this.isPaused = !0)
        }, AnimationItem.prototype.togglePause = function(t) {
            t && this.name != t || (this.isPaused === !0 ? (this.isPaused = !1, this.play()) : (this.isPaused = !0, this.pause()))
        }, AnimationItem.prototype.stop = function(t) {
            t && this.name != t || (this.isPaused = !0, this.currentFrame = this.currentRawFrame = 0, this.playCount = 0, this.gotoFrame())
        }, AnimationItem.prototype.goToAndStop = function(t, e, s) {
            s && this.name != s || (this.setCurrentRawFrameValue(e ? t : t * this.frameModifier), this.isPaused = !0)
        }, AnimationItem.prototype.goToAndPlay = function(t, e, s) {
            this.goToAndStop(t, e, s), this.play()
        }, AnimationItem.prototype.advanceTime = function(t) {
            return this.pendingSegment ? (this.pendingSegment = !1, this.adjustSegment(this.segments.shift()), void(this.isPaused && this.play())) : void(this.isPaused !== !0 && this.isLoaded !== !1 && this.setCurrentRawFrameValue(this.currentRawFrame + t * this.frameModifier))
        }, AnimationItem.prototype.updateAnimation = function(t) {
            this.setCurrentRawFrameValue(this.totalFrames * t)
        }, AnimationItem.prototype.moveFrame = function(t, e) {
            e && this.name != e || this.setCurrentRawFrameValue(this.currentRawFrame + t)
        }, AnimationItem.prototype.adjustSegment = function(t) {
            this.playCount = 0, t[1] < t[0] ? (this.frameModifier > 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(-1)), this.totalFrames = t[0] - t[1], this.firstFrame = t[1], this.setCurrentRawFrameValue(this.totalFrames - .01)) : t[1] > t[0] && (this.frameModifier < 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(1)), this.totalFrames = t[1] - t[0], this.firstFrame = t[0], this.setCurrentRawFrameValue(0)), this.trigger("segmentStart")
        }, AnimationItem.prototype.setSegment = function(t, e) {
            var s = -1;
            this.isPaused && (this.currentRawFrame + this.firstFrame < t ? s = t : this.currentRawFrame + this.firstFrame > e && (s = e - t - .01)), this.firstFrame = t, this.totalFrames = e - t, -1 !== s && this.goToAndStop(s, !0)
        }, AnimationItem.prototype.playSegments = function(t, e) {
            if ("object" == typeof t[0]) {
                var s, r = t.length;
                for (s = 0; r > s; s += 1) this.segments.push(t[s])
            } else this.segments.push(t);
            e && this.adjustSegment(this.segments.shift()), this.isPaused && this.play()
        }, AnimationItem.prototype.resetSegments = function(t) {
            this.segments.length = 0, this.segments.push([this.animationData.ip * this.frameRate, Math.floor(this.animationData.op - this.animationData.ip + this.animationData.ip * this.frameRate)]), t && this.adjustSegment(this.segments.shift())
        }, AnimationItem.prototype.checkSegments = function() {
            this.segments.length && (this.pendingSegment = !0)
        }, AnimationItem.prototype.remove = function(t) {
            t && this.name != t || this.renderer.destroy()
        }, AnimationItem.prototype.destroy = function(t) {
            t && this.name != t || this.renderer && this.renderer.destroyed || (this.renderer.destroy(), this.trigger("destroy"), this._cbs = null)
        }, AnimationItem.prototype.setCurrentRawFrameValue = function(t) {
            if (this.currentRawFrame = t, this.currentRawFrame >= this.totalFrames) {
                if (this.checkSegments(), this.loop === !1) return this.currentRawFrame = this.totalFrames - .01, this.gotoFrame(), this.pause(), void this.trigger("complete");
                if (this.trigger("loopComplete"), this.playCount += 1, this.loop !== !0 && this.playCount == this.loop || this.pendingSegment) return this.currentRawFrame = this.totalFrames - .01, this.gotoFrame(), this.pause(), void this.trigger("complete");
                this.currentRawFrame = this.currentRawFrame % this.totalFrames
            } else if (this.currentRawFrame < 0) return this.checkSegments(), this.playCount -= 1, this.playCount < 0 && (this.playCount = 0), this.loop === !1 || this.pendingSegment ? (this.currentRawFrame = 0, this.gotoFrame(), this.pause(), void this.trigger("complete")) : (this.trigger("loopComplete"), this.currentRawFrame = (this.totalFrames + this.currentRawFrame) % this.totalFrames, void this.gotoFrame());
            this.gotoFrame()
        }, AnimationItem.prototype.setSpeed = function(t) {
            this.playSpeed = t, this.updaFrameModifier()
        }, AnimationItem.prototype.setDirection = function(t) {
            this.playDirection = 0 > t ? -1 : 1, this.updaFrameModifier()
        }, AnimationItem.prototype.updaFrameModifier = function() {
            this.frameModifier = this.frameMult * this.playSpeed * this.playDirection
        }, AnimationItem.prototype.getPath = function() {
            return this.path
        }, AnimationItem.prototype.getAssetsPath = function(t) {
            var e = "";
            if (this.assetsPath) {
                var s = t.p; - 1 !== s.indexOf("images/") && (s = s.split("/")[1]), e = this.assetsPath + s
            } else e = this.path, e += t.u ? t.u : "", e += t.p;
            return e
        }, AnimationItem.prototype.getAssetData = function(t) {
            for (var e = 0, s = this.assets.length; s > e;) {
                if (t == this.assets[e].id) return this.assets[e];
                e += 1
            }
        }, AnimationItem.prototype.hide = function() {
            this.renderer.hide()
        }, AnimationItem.prototype.show = function() {
            this.renderer.show()
        }, AnimationItem.prototype.getAssets = function() {
            return this.assets
        }, AnimationItem.prototype.trigger = function(t) {
            if (this._cbs[t]) switch (t) {
                case "enterFrame":
                    this.triggerEvent(t, new BMEnterFrameEvent(t, this.currentFrame, this.totalFrames, this.frameMult));
                    break;
                case "loopComplete":
                    this.triggerEvent(t, new BMCompleteLoopEvent(t, this.loop, this.playCount, this.frameMult));
                    break;
                case "complete":
                    this.triggerEvent(t, new BMCompleteEvent(t, this.frameMult));
                    break;
                case "segmentStart":
                    this.triggerEvent(t, new BMSegmentStartEvent(t, this.firstFrame, this.totalFrames));
                    break;
                case "destroy":
                    this.triggerEvent(t, new BMDestroyEvent(t, this));
                    break;
                default:
                    this.triggerEvent(t)
            }
            "enterFrame" === t && this.onEnterFrame && this.onEnterFrame.call(this, new BMEnterFrameEvent(t, this.currentFrame, this.totalFrames, this.frameMult)), "loopComplete" === t && this.onLoopComplete && this.onLoopComplete.call(this, new BMCompleteLoopEvent(t, this.loop, this.playCount, this.frameMult)), "complete" === t && this.onComplete && this.onComplete.call(this, new BMCompleteEvent(t, this.frameMult)), "segmentStart" === t && this.onSegmentStart && this.onSegmentStart.call(this, new BMSegmentStartEvent(t, this.firstFrame, this.totalFrames)), "destroy" === t && this.onDestroy && this.onDestroy.call(this, new BMDestroyEvent(t, this))
        }, AnimationItem.prototype.addEventListener = _addEventListener, AnimationItem.prototype.removeEventListener = _removeEventListener, AnimationItem.prototype.triggerEvent = _triggerEvent;
        var Expressions = function() {
            function t(t) {
                t.renderer.compInterface = CompExpressionInterface(t.renderer), t.renderer.globalData.projectInterface.registerComposition(t.renderer)
            }

            function e(t, e, s) {
                return new EffectsManager(t, e, s)
            }
            var s = {};
            return s.initExpressions = t, s.getEffectsManager = e, s
        }();
        expressionsPlugin = Expressions,
            function() {
                function t() {
                    return this.pv
                }

                function e(t) {
                    for (var e, s, r = 0, i = this.keyframes.length - 1, a = 1, n = !0, o = 0, h = "object" == typeof this.pv ? [this.pv.length] : 0; n;) {
                        if (e = this.keyframes[r], s = this.keyframes[r + 1], r == i - 1 && t >= s.t - o) {
                            e.h && (e = s);
                            break
                        }
                        if (s.t - o > t) break;
                        i - 1 > r ? r += a : n = !1
                    }
                    var l, p, m, f, d, c = 0;
                    if (e.to) {
                        e.bezierData || bez.buildBezierData(e);
                        var u = e.bezierData;
                        if (t >= s.t - o || t < e.t - o) {
                            var y = t >= s.t - o ? u.points.length - 1 : 0;
                            for (p = u.points[y].point.length, l = 0; p > l; l += 1) h[l] = u.points[y].point[l]
                        } else {
                            e.__fnct ? d = e.__fnct : (d = BezierFactory.getBezierEasing(e.o.x, e.o.y, e.i.x, e.i.y, e.n).get, e.__fnct = d), m = d((t - (e.t - o)) / (s.t - o - (e.t - o)));
                            var g, v = u.segmentLength * m,
                                b = 0;
                            for (a = 1, n = !0, f = u.points.length; n;) {
                                if (b += u.points[c].partialLength * a, 0 === v || 0 === m || c == u.points.length - 1) {
                                    for (p = u.points[c].point.length, l = 0; p > l; l += 1) h[l] = u.points[c].point[l];
                                    break
                                }
                                if (v >= b && v < b + u.points[c + 1].partialLength) {
                                    for (g = (v - b) / u.points[c + 1].partialLength, p = u.points[c].point.length, l = 0; p > l; l += 1) h[l] = u.points[c].point[l] + (u.points[c + 1].point[l] - u.points[c].point[l]) * g;
                                    break
                                }
                                f - 1 > c && 1 == a || c > 0 && -1 == a ? c += a : n = !1
                            }
                        }
                    } else {
                        var E, P, k, x, S, C = !1;
                        for (i = e.s.length, r = 0; i > r; r += 1) {
                            if (1 !== e.h && (e.o.x instanceof Array ? (C = !0, e.__fnct || (e.__fnct = []), e.__fnct[r] || (E = e.o.x[r] || e.o.x[0], P = e.o.y[r] || e.o.y[0], k = e.i.x[r] || e.i.x[0], x = e.i.y[r] || e.i.y[0])) : (C = !1, e.__fnct || (E = e.o.x, P = e.o.y, k = e.i.x, x = e.i.y)), C ? e.__fnct[r] ? d = e.__fnct[r] : (d = BezierFactory.getBezierEasing(E, P, k, x).get, e.__fnct[r] = d) : e.__fnct ? d = e.__fnct : (d = BezierFactory.getBezierEasing(E, P, k, x).get, e.__fnct = d), m = t >= s.t - o ? 1 : t < e.t - o ? 0 : d((t - (e.t - o)) / (s.t - o - (e.t - o)))), this.sh && 1 !== e.h) {
                                var D = e.s[r],
                                    M = e.e[r]; - 180 > D - M ? D += 360 : D - M > 180 && (D -= 360), S = D + (M - D) * m
                            } else S = 1 === e.h ? e.s[r] : e.s[r] + (e.e[r] - e.s[r]) * m;
                            1 === i ? h = S : h[r] = S
                        }
                    }
                    return h
                }

                function s(t) {
                    if (void 0 !== this.vel) return this.vel;
                    var e = .01;
                    t *= this.elem.globalData.frameRate;
                    var s, r = this.getValueAtTime(t),
                        i = this.getValueAtTime(t + e);
                    if (r.length) {
                        s = Array.apply(null, {
                            length: r.length
                        });
                        var a;
                        for (a = 0; a < r.length; a += 1) s[a] = this.elem.globalData.frameRate * ((i[a] - r[a]) / e)
                    } else s = (i - r) / e;
                    return s
                }

                function r(t) {
                    this.propertyGroup = t
                }

                function i(t, e, s) {
                    e.x && (s.k = !0, s.x = !0, s.getValue && (s.getPreValue = s.getValue), s.getValue = ExpressionManager.initiateExpression.bind(s)(t, e, s))
                }
                var a = function() {
                        function a(t, e) {
                            return this.textIndex = t + 1, this.textTotal = e, this.getValue(), this.v
                        }
                        return function(n, o) {
                            this.pv = 1, this.comp = n.comp, this.elem = n, this.mult = .01, this.type = "textSelector", this.textTotal = o.totalChars, this.selectorValue = 100, this.lastValue = [1, 1, 1], i.bind(this)(n, o, this), this.getMult = a, this.getVelocityAtTime = s, this.getValueAtTime = this.kf ? e : t, this.setGroupProperty = r
                        }
                    }(),
                    n = PropertyFactory.getProp;
                PropertyFactory.getProp = function(a, o, h, l, p) {
                    var m = n(a, o, h, l, p);
                    m.getVelocityAtTime = s, m.getValueAtTime = m.kf ? e : t, m.setGroupProperty = r;
                    var f = m.k;
                    return void 0 !== o.ix && Object.defineProperty(m, "propertyIndex", {
                        get: function() {
                            return o.ix
                        }
                    }), i(a, o, m), !f && m.x && p.push(m), m
                };
                var o = ShapePropertyFactory.getShapeProp;
                ShapePropertyFactory.getShapeProp = function(t, e, s, i, a) {
                    var n = o(t, e, s, i, a),
                        h = "tm" === n.ty ? n.prop : n;
                    return h.setGroupProperty = r, void 0 !== e.ix && Object.defineProperty(h, "propertyIndex", {
                        get: function() {
                            return e.ix
                        }
                    }), n
                };
                var h = PropertyFactory.getTextSelectorProp;
                PropertyFactory.getTextSelectorProp = function(t, e, s) {
                    return 1 === e.t ? new a(t, e, s) : h(t, e, s)
                }
            }();
        var ExpressionManager = function() {
                function duplicatePropertyValue(t) {
                    if ("number" == typeof t) return t;
                    if (t.i) return JSON.parse(JSON.stringify(t));
                    var e, s = Array.apply(null, {
                            length: t.length
                        }),
                        r = t.length;
                    for (e = 0; r > e; e += 1) s[e] = t[e];
                    return s
                }

                function $bm_neg(t) {
                    var e = typeof t;
                    if ("number" === e || "boolean" === e) return -t;
                    if ("object" === e) {
                        var s, r = t.length,
                            i = [];
                        for (s = 0; r > s; s += 1) i[s] = -t[s];
                        return i
                    }
                }

                function sum(t, e) {
                    var s = typeof t,
                        r = typeof e;
                    if ("string" === s || "string" === r) return t + e;
                    if (!("number" !== s && "boolean" !== s || "number" !== r && "boolean" !== r)) return t + e;
                    if ("object" === s && ("number" === r || "boolean" === r)) return t[0] = t[0] + e, t;
                    if (("number" === s || "boolean" === s) && "object" === r) return e[0] = t + e[0], e;
                    if ("object" === s && "object" === r) {
                        for (var i = 0, a = t.length, n = e.length, o = []; a > i || n > i;) o[i] = "number" == typeof t[i] && "number" == typeof e[i] ? t[i] + e[i] : void 0 == e[i] ? t[i] : t[i] || e[i], i += 1;
                        return o
                    }
                    return 0
                }

                function sub(t, e) {
                    var s = typeof t,
                        r = typeof e;
                    if (!("number" !== s && "boolean" !== s || "number" !== r && "boolean" !== r)) return t - e;
                    if ("object" === s && ("number" === r || "boolean" === r)) return t[0] = t[0] - e, t;
                    if (("number" === s || "boolean" === s) && "object" === r) return e[0] = t - e[0], e;
                    if ("object" === s && "object" === r) {
                        for (var i = 0, a = t.length, n = e.length, o = []; a > i || n > i;) o[i] = "number" == typeof t[i] && "number" == typeof e[i] ? t[i] - e[i] : void 0 == e[i] ? t[i] : t[i] || e[i], i += 1;
                        return o
                    }
                    return 0
                }

                function mul(t, e) {
                    var s = typeof t,
                        r = typeof e;
                    if (!("number" !== s && "boolean" !== s || "number" !== r && "boolean" !== r)) return t * e;
                    var i, a;
                    if ("object" === s && ("number" === r || "boolean" === r)) {
                        for (a = t.length, arr = Array.apply(null, {
                                length: a
                            }), i = 0; a > i; i += 1) arr[i] = t[i] * e;
                        return arr
                    }
                    if (("number" === s || "boolean" === s) && "object" === r) {
                        for (a = e.length, arr = Array.apply(null, {
                                length: a
                            }), i = 0; a > i; i += 1) arr[i] = t * e[i];
                        return arr
                    }
                    return 0
                }

                function div(t, e) {
                    var s = typeof t,
                        r = typeof e;
                    if (!("number" !== s && "boolean" !== s || "number" !== r && "boolean" !== r)) return t / e;
                    var i, a;
                    if ("object" === s && ("number" === r || "boolean" === r)) {
                        for (a = t.length, arr = Array.apply(null, {
                                length: a
                            }), i = 0; a > i; i += 1) arr[i] = t[i] / e;
                        return arr
                    }
                    if (("number" === s || "boolean" === s) && "object" === r) {
                        for (a = e.length, arr = Array.apply(null, {
                                length: a
                            }), i = 0; a > i; i += 1) arr[i] = t / e[i];
                        return arr
                    }
                    return 0
                }

                function clamp(t, e, s) {
                    if (e > s) {
                        var r = s;
                        s = e, e = r
                    }
                    return Math.min(Math.max(t, e), s)
                }

                function radiansToDegrees(t) {
                    return t / degToRads
                }

                function degreesToRadians(t) {
                    return t * degToRads
                }

                function length(t, e) {
                    e || (e = helperLengthArray);
                    var s, r = Math.min(t.length, e.length),
                        i = 0;
                    for (s = 0; r > s; s += 1) i += Math.pow(e[s] - t[s], 2);
                    return Math.sqrt(i)
                }

                function rgbToHsl(t) {
                    var e, s, r = t[0],
                        i = t[1],
                        a = t[2],
                        n = Math.max(r, i, a),
                        o = Math.min(r, i, a),
                        h = (n + o) / 2;
                    if (n == o) e = s = 0;
                    else {
                        var l = n - o;
                        switch (s = h > .5 ? l / (2 - n - o) : l / (n + o), n) {
                            case r:
                                e = (i - a) / l + (a > i ? 6 : 0);
                                break;
                            case i:
                                e = (a - r) / l + 2;
                                break;
                            case a:
                                e = (r - i) / l + 4
                        }
                        e /= 6
                    }
                    return [e, s, h, t[3]]
                }

                function hslToRgb(t) {
                    function e(t, e, s) {
                        return 0 > s && (s += 1), s > 1 && (s -= 1), 1 / 6 > s ? t + 6 * (e - t) * s : .5 > s ? e : 2 / 3 > s ? t + (e - t) * (2 / 3 - s) * 6 : t
                    }
                    var s, r, i, a = t[0],
                        n = t[1],
                        o = t[2];
                    if (0 == n) s = r = i = o;
                    else {
                        var h = .5 > o ? o * (1 + n) : o + n - o * n,
                            l = 2 * o - h;
                        s = e(l, h, a + 1 / 3), r = e(l, h, a), i = e(l, h, a - 1 / 3)
                    }
                    return [s, r, i, t[3]]
                }

                function linear(t, e, s, r, i) {
                    if (void 0 === r || void 0 === i) return linear(t, 0, 1, e, s);
                    if (e >= t) return r;
                    if (t >= s) return i;
                    var a = s === e ? 0 : t / (s - e);
                    if (!r.length) return r + (i - r) * a;
                    var n, o = r.length,
                        h = Array.apply(null, {
                            length: o
                        });
                    for (n = 0; o > n; n += 1) h[n] = r[n] + (i[n] - r[n]) * a;
                    return h
                }

                function seedRandom(t) {
                    BMMath.seedrandom(t)
                }

                function random(t, e) {
                    if (void 0 === e && (void 0 === t ? (t = 0, e = 1) : (e = t, t = void 0)), e.length) {
                        var s, r = e.length;
                        t || (t = Array.apply(null, {
                            length: r
                        }));
                        var i = Array.apply(null, {
                                length: r
                            }),
                            a = BMMath.random();
                        for (s = 0; r > s; s += 1) i[s] = t[s] + a * (e[s] - t[s]);
                        return i
                    }
                    void 0 === t && (t = 0);
                    var n = BMMath.random();
                    return t + n * (e - t)
                }

                function initiateExpression(elem, data, property) {
                    function effect(t) {
                        return elem.effectsManager(t)
                    }

                    function lookAt(t, e) {
                        var s = [e[0] - t[0], e[1] - t[1], e[2] - t[2]],
                            r = Math.atan2(s[0], Math.sqrt(s[1] * s[1] + s[2] * s[2])) / degToRads,
                            i = -Math.atan2(s[1], s[2]) / degToRads;
                        return [i, r, 0]
                    }

                    function easeOut(t, e, s) {
                        return -(s - e) * t * (t - 2) + e
                    }

                    function nearestKey(t) {
                        var e, s, r, i = data.k.length;
                        if (data.k.length && "number" != typeof data.k[0]) {
                            for (s = -1, t *= elem.comp.globalData.frameRate, e = 0; i - 1 > e; e += 1) {
                                if (t === data.k[e].t) {
                                    s = e + 1, r = data.k[e].t;
                                    break
                                }
                                if (t > data.k[e].t && t < data.k[e + 1].t) {
                                    t - data.k[e].t > data.k[e + 1].t - t ? (s = e + 2, r = data.k[e + 1].t) : (s = e + 1, r = data.k[e].t);
                                    break
                                }
                            } - 1 === s && (s = e + 1, r = data.k[e].t)
                        } else s = 0, r = 0;
                        var a = {};
                        return a.index = s, a.time = r / elem.comp.globalData.frameRate, a
                    }

                    function key(t) {
                        if (!data.k.length || "number" == typeof data.k[0]) return {
                            time: 0
                        };
                        t -= 1;
                        var e, s = {
                            time: data.k[t].t / elem.comp.globalData.frameRate
                        };
                        e = t === data.k.length - 1 ? data.k[t - 1].e : data.k[t].s;
                        var r, i = e.length;
                        for (r = 0; i > r; r += 1) s[r] = e[r];
                        return s
                    }

                    function framesToTime(t, e) {
                        return e || (e = elem.comp.globalData.frameRate), t / e
                    }

                    function timeToFrames(t, e) {
                        return t || (t = time), e || (e = elem.comp.globalData.frameRate), t * e
                    }

                    function execute() {
                        if (this.frameExpressionId !== elem.globalData.frameId || "textSelector" === this.type) {
                            if (this.lock) return this.v = duplicatePropertyValue(this.pv), !0;
                            "textSelector" === this.type && (textIndex = this.textIndex, textTotal = this.textTotal, selectorValue = this.selectorValue), transform || (transform = elem.transform), thisLayer || (thisLayer = elem.layerInterface, thisComp = elem.comp.compInterface), 4 !== elemType || content || (content = thisLayer("ADBE Root Vectors Group")), this.lock = !0, this.getPreValue && this.getPreValue(), value = this.pv, time = this.comp.renderedFrame / this.comp.globalData.frameRate, needsVelocity && (velocity = velocityAtTime(time)), bindedFn(), this.frameExpressionId = elem.globalData.frameId;
                            var t, e;
                            if (this.mult)
                                if ("number" == typeof this.v) this.v *= this.mult;
                                else
                                    for (e = this.v.length, value === this.v && (this.v = 2 === e ? [value[0], value[1]] : [value[0], value[1], value[2]]), t = 0; e > t; t += 1) this.v[t] *= this.mult;
                            if ("number" == typeof this.v) this.lastValue !== this.v && (this.lastValue = this.v, this.mdf = !0);
                            else if (this.v.i) this.mdf = !0;
                            else
                                for (e = this.v.length, t = 0; e > t; t += 1) this.v[t] !== this.lastValue[t] && (this.lastValue[t] = this.v[t], this.mdf = !0);
                            this.lock = !1
                        }
                    }
                    var val = data.x,
                        needsVelocity = -1 !== val.indexOf("velocity"),
                        elemType = elem.data.ty,
                        transform, content, effect, thisComp = elem.comp,
                        thisProperty = property;
                    elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate;
                    var inPoint = elem.data.ip / elem.comp.globalData.frameRate,
                        outPoint = elem.data.op / elem.comp.globalData.frameRate,
                        thisLayer, thisComp, fnStr = "var fn = function(){" + val + ";this.v = $bm_rt;}";
                    eval(fnStr);
                    var bindedFn = fn.bind(this),
                        numKeys = data.k ? data.k.length : 0,
                        wiggle = function(t, e) {
                            var s, r, i = this.pv.length ? this.pv.length : 1,
                                a = Array.apply(null, {
                                    len: i
                                });
                            for (r = 0; i > r; r += 1) a[r] = 0;
                            t = 5;
                            var n = Math.floor(time * t);
                            for (s = 0, r = 0; n > s;) {
                                for (r = 0; i > r; r += 1) a[r] += -e + 2 * e * BMMath.random();
                                s += 1
                            }
                            var o = time * t,
                                h = o - Math.floor(o),
                                l = Array.apply({
                                    length: i
                                });
                            for (r = 0; i > r; r += 1) l[r] = this.pv[r] + a[r] + (-e + 2 * e * BMMath.random()) * h;
                            return l
                        }.bind(this),
                        loopIn = function(t, e, s) {
                            if (!this.k) return this.pv;
                            var r = time * elem.comp.globalData.frameRate,
                                i = this.keyframes,
                                a = i[0].t;
                            if (r >= a) return this.pv;
                            var n, o;
                            s ? (n = e ? Math.abs(elem.comp.globalData.frameRate * e) : Math.max(0, this.elem.data.op - a), o = a + n) : ((!e || e > i.length - 1) && (e = i.length - 1), o = i[e].t, n = o - a);
                            var h, l, p;
                            if ("pingpong" === t) {
                                var m = Math.floor((a - r) / n);
                                if (m % 2 === 0) return this.getValueAtTime((a - r) % n + a)
                            } else {
                                if ("offset" === t) {
                                    var f = this.getValueAtTime(a),
                                        d = this.getValueAtTime(o),
                                        c = this.getValueAtTime(n - (a - r) % n + a),
                                        u = Math.floor((a - r) / n) + 1;
                                    if (this.pv.length) {
                                        for (p = new Array(f.length), l = p.length, h = 0; l > h; h += 1) p[h] = c[h] - (d[h] - f[h]) * u;
                                        return p
                                    }
                                    return c - (d - f) * u
                                }
                                if ("continue" === t) {
                                    var y = this.getValueAtTime(a),
                                        g = this.getValueAtTime(a + .001);
                                    if (this.pv.length) {
                                        for (p = new Array(y.length), l = p.length, h = 0; l > h; h += 1) p[h] = y[h] + (y[h] - g[h]) * (a - r) / 5e-4;
                                        return p
                                    }
                                    return y + (y - g) * (a - r) / 5e-4
                                }
                            }
                            return this.getValueAtTime(n - (a - r) % n + a)
                        }.bind(this),
                        loopInDuration = function(t, e) {
                            return loopIn(t, e, !0)
                        }.bind(this),
                        loopOut = function(t, e, s) {
                            if (!this.k) return this.pv;
                            var r = time * elem.comp.globalData.frameRate,
                                i = this.keyframes,
                                a = i[i.length - 1].t;
                            if (a >= r) return this.pv;
                            var n, o;
                            s ? (n = e ? Math.abs(a - elem.comp.globalData.frameRate * e) : Math.max(0, a - this.elem.data.ip), o = a - n) : ((!e || e > i.length - 1) && (e = i.length - 1), o = i[i.length - 1 - e].t, n = a - o);
                            var h, l, p;
                            if ("pingpong" === t) {
                                var m = Math.floor((r - o) / n);
                                if (m % 2 !== 0) return this.getValueAtTime(n - (r - o) % n + o)
                            } else {
                                if ("offset" === t) {
                                    var f = this.getValueAtTime(o),
                                        d = this.getValueAtTime(a),
                                        c = this.getValueAtTime((r - o) % n + o),
                                        u = Math.floor((r - o) / n);
                                    if (this.pv.length) {
                                        for (p = new Array(f.length), l = p.length, h = 0; l > h; h += 1) p[h] = (d[h] - f[h]) * u + c[h];
                                        return p
                                    }
                                    return (d - f) * u + c
                                }
                                if ("continue" === t) {
                                    var y = this.getValueAtTime(a),
                                        g = this.getValueAtTime(a - .001);
                                    if (this.pv.length) {
                                        for (p = new Array(y.length), l = p.length, h = 0; l > h; h += 1) p[h] = y[h] + (y[h] - g[h]) * (r - a) / 5e-4;
                                        return p
                                    }
                                    return y + (y - g) * (r - a) / 5e-4
                                }
                            }
                            return this.getValueAtTime((r - o) % n + o)
                        }.bind(this),
                        loop_out = loopOut,
                        loopOutDuration = function(t, e) {
                            return loopOut(t, e, !0)
                        }.bind(this),
                        valueAtTime = function(t) {
                            return this.getValueAtTime(t * elem.comp.globalData.frameRate)
                        }.bind(this),
                        velocityAtTime = function(t) {
                            return this.getVelocityAtTime(t)
                        }.bind(this),
                        comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface),
                        time, velocity, value, textIndex, textTotal, selectorValue, index = elem.data.ind + 1,
                        hasParent = !(!elem.hierarchy || !elem.hierarchy.length);
                    return execute
                }
                var ob = {},
                    Math = BMMath,
                    helperLengthArray = [0, 0, 0, 0, 0, 0];
                return ob.initiateExpression = initiateExpression, ob
            }(),
            ShapeExpressionInterface = function() {
                function t(t, e, s) {
                    return m(t, e, s)
                }

                function e(t, e, s) {
                    return d(t, e, s)
                }

                function s(t, e, s) {
                    return c(t, e, s)
                }

                function r(t, e, s) {
                    return u(t, e, s)
                }

                function i(t, e, s) {
                    return y(t, e, s)
                }

                function a(t, e, s) {
                    return g(t, e, s)
                }

                function n(t, e, s) {
                    return v(t, e, s)
                }

                function o(t, e, s) {
                    return b(t, e, s)
                }

                function h(t, e, s) {
                    return E(t, e, s)
                }

                function l(t, e, s) {
                    var r, i = [],
                        a = t ? t.length : 0;
                    for (r = 0; a > r; r += 1) "gr" == t[r].ty ? i.push(ShapeExpressionInterface.createGroupInterface(t[r], e[r], s)) : "fl" == t[r].ty ? i.push(ShapeExpressionInterface.createFillInterface(t[r], e[r], s)) : "st" == t[r].ty ? i.push(ShapeExpressionInterface.createStrokeInterface(t[r], e[r], s)) : "tm" == t[r].ty ? i.push(ShapeExpressionInterface.createTrimInterface(t[r], e[r], s)) : "tr" == t[r].ty || ("el" == t[r].ty ? i.push(ShapeExpressionInterface.createEllipseInterface(t[r], e[r], s)) : "sr" == t[r].ty ? i.push(ShapeExpressionInterface.createStarInterface(t[r], e[r], s)) : "sh" == t[r].ty && i.push(ShapeExpressionInterface.createPathInterface(t[r], e[r], s)));
                    return i
                }
                var p = {
                        createShapeInterface: t,
                        createGroupInterface: e,
                        createTrimInterface: i,
                        createStrokeInterface: r,
                        createTransformInterface: a,
                        createEllipseInterface: n,
                        createStarInterface: o,
                        createPathInterface: h,
                        createFillInterface: s
                    },
                    m = function() {
                        return function(t, e, s) {
                            function r(t) {
                                if ("number" == typeof t) return i[t - 1];
                                for (var e = 0, s = i.length; s > e;) {
                                    if (i[e]._name === t) return i[e];
                                    e += 1
                                }
                            }
                            var i;
                            return r.propertyGroup = s, i = l(t, e, r), r
                        }
                    }(),
                    f = function() {
                        return function(t, e, s) {
                            var r, i = function(t) {
                                if ("number" == typeof t) return r[t - 1];
                                for (var e = 0, s = r.length; s > e;) {
                                    if (r[e]._name === t) return r[e];
                                    e += 1
                                }
                            };
                            return i.propertyGroup = function(t) {
                                return 1 === t ? i : s(t - 1)
                            }, r = l(t.it, e.it, i.propertyGroup), i
                        }
                    }(),
                    d = function() {
                        return function(t, e, s) {
                            var r = function(t) {
                                switch (t) {
                                    case "ADBE Vectors Group":
                                    case 2:
                                        return r.content;
                                    case "ADBE Vector Transform Group":
                                    case 3:
                                    default:
                                        return r.transform
                                }
                            };
                            r.propertyGroup = function(t) {
                                return 1 === t ? r : s(t - 1)
                            };
                            var i = f(t, e, r.propertyGroup),
                                a = ShapeExpressionInterface.createTransformInterface(t.it[t.it.length - 1], e.it[e.it.length - 1], r.propertyGroup);
                            return r.content = i, r.transform = a, Object.defineProperty(r, "_name", {
                                get: function() {
                                    return t.nm
                                }
                            }), r.nm = t.nm, r
                        }
                    }(),
                    c = function() {
                        return function(t, e, s) {
                            e.c.setGroupProperty(s), e.o.setGroupProperty(s);
                            var r = {get color() {
                                    return e.c.k && e.c.getValue(), [e.c.v[0] / e.c.mult, e.c.v[1] / e.c.mult, e.c.v[2] / e.c.mult, 1]
                                },
                                get opacity() {
                                    return e.o.k && e.o.getValue(), e.o.v
                                },
                                _name: t.nm
                            };
                            return r
                        }
                    }(),
                    u = function() {
                        return function(t, e, s) {
                            function r(t) {
                                return 1 === t ? i : s(t - 1)
                            }
                            e.c.setGroupProperty(r), e.o.setGroupProperty(r), e.w.setGroupProperty(r);
                            var i = {get color() {
                                    return e.c.k && e.c.getValue(), [e.c.v[0] / e.c.mult, e.c.v[1] / e.c.mult, e.c.v[2] / e.c.mult, 1]
                                },
                                get opacity() {
                                    return e.o.k && e.o.getValue(), e.o.v
                                },
                                get strokeWidth() {
                                    return e.w.k && e.w.getValue(), e.w.v
                                },
                                dashOb: {},
                                get dash() {
                                    var r, i = e.d,
                                        a = t.d,
                                        n = a.length;
                                    for (r = 0; n > r; r += 1) i.dataProps[r].p.k && i.dataProps[r].p.getValue(), i.dataProps[r].p.setGroupProperty(s), this.dashOb[a[r].nm] = i.dataProps[r].p.v;
                                    return this.dashOb
                                },
                                _name: t.nm
                            };
                            return i
                        }
                    }(),
                    y = function() {
                        return function(t, e, s) {
                            function r(t) {
                                return 1 == t ? i : s(--t)
                            }

                            function i(e) {
                                return e === t.e.ix ? i.end : e === t.s.ix ? i.start : e === t.o.ix ? i.offset : void 0
                            }
                            return r.propertyIndex = t.ix, e.s.setGroupProperty(r), e.e.setGroupProperty(r), e.o.setGroupProperty(r), i.propertyIndex = t.ix, Object.defineProperty(i, "start", {
                                get: function() {
                                    return e.s.k && e.s.getValue(), e.s.v / e.s.mult
                                }
                            }), Object.defineProperty(i, "end", {
                                get: function() {
                                    return e.e.k && e.e.getValue(), e.e.v / e.e.mult
                                }
                            }), Object.defineProperty(i, "offset", {
                                get: function() {
                                    return e.o.k && e.o.getValue(), e.o.v
                                }
                            }), Object.defineProperty(i, "_name", {
                                get: function() {
                                    return t.nm
                                }
                            }), i
                        }
                    }(),
                    g = function() {
                        return function(t, e, s) {
                            function r(t) {
                                return 1 == t ? i : s(--t)
                            }

                            function i(e) {
                                return t.a.ix === e ? i.anchorPoint : t.o.ix === e ? i.opacity : t.p.ix === e ? i.position : t.r.ix === e ? i.rotation : t.s.ix === e ? i.scale : t.sk && t.sk.ix === e ? i.skew : t.sa && t.sa.ix === e ? i.skewAxis : void 0
                            }
                            e.transform.mProps.o.setGroupProperty(r), e.transform.mProps.p.setGroupProperty(r), e.transform.mProps.a.setGroupProperty(r), e.transform.mProps.s.setGroupProperty(r), e.transform.mProps.r.setGroupProperty(r), e.transform.mProps.sk && (e.transform.mProps.sk.setGroupProperty(r), e.transform.mProps.sa.setGroupProperty(r)), e.transform.op.setGroupProperty(r), Object.defineProperty(i, "opacity", {
                                get: function() {
                                    return e.transform.mProps.o.k && e.transform.mProps.o.getValue(), e.transform.mProps.o.v / e.transform.mProps.o.mult
                                }
                            }), Object.defineProperty(i, "position", {
                                get: function() {
                                    return e.transform.mProps.p.k && e.transform.mProps.p.getValue(), [e.transform.mProps.p.v[0], e.transform.mProps.p.v[1]]
                                }
                            }), Object.defineProperty(i, "anchorPoint", {
                                get: function() {
                                    return e.transform.mProps.a.k && e.transform.mProps.a.getValue(), [e.transform.mProps.a.v[0], e.transform.mProps.a.v[1]]
                                }
                            });
                            var a = [];
                            return Object.defineProperty(i, "scale", {
                                get: function() {
                                    return e.transform.mProps.s.k && e.transform.mProps.s.getValue(), a[0] = e.transform.mProps.s.v[0] / e.transform.mProps.s.mult, a[1] = e.transform.mProps.s.v[1] / e.transform.mProps.s.mult, a
                                }
                            }), Object.defineProperty(i, "rotation", {
                                get: function() {
                                    return e.transform.mProps.r.k && e.transform.mProps.r.getValue(), e.transform.mProps.r.v / e.transform.mProps.r.mult
                                }
                            }), Object.defineProperty(i, "skew", {
                                get: function() {
                                    return e.transform.mProps.sk.k && e.transform.mProps.sk.getValue(), e.transform.mProps.sk.v
                                }
                            }), Object.defineProperty(i, "skewAxis", {
                                get: function() {
                                    return e.transform.mProps.sa.k && e.transform.mProps.sa.getValue(), e.transform.mProps.sa.v
                                }
                            }), Object.defineProperty(i, "_name", {
                                get: function() {
                                    return t.nm
                                }
                            }), i.ty = "tr", i
                        }
                    }(),
                    v = function() {
                        return function(t, e, s) {
                            function r(t) {
                                return 1 == t ? r : s(--t)
                            }

                            function i(e) {
                                return t.p.ix === e ? i.position : t.s.ix === e ? i.size : void 0
                            }
                            r.propertyIndex = t.ix;
                            var a = "tm" === e.sh.ty ? e.sh.prop : e.sh;
                            return a.s.setGroupProperty(r), a.p.setGroupProperty(r), Object.defineProperty(i, "size", {
                                get: function() {
                                    return a.s.k && a.s.getValue(), [a.s.v[0], a.s.v[1]]
                                }
                            }), Object.defineProperty(i, "position", {
                                get: function() {
                                    return a.p.k && a.p.getValue(), [a.p.v[0], a.p.v[1]]
                                }
                            }), Object.defineProperty(i, "_name", {
                                get: function() {
                                    return t.nm
                                }
                            }), i
                        }
                    }(),
                    b = function() {
                        return function(t, e, s) {
                            function r(t) {
                                return 1 == t ? r : s(--t)
                            }

                            function i(e) {
                                return t.p.ix === e ? i.position : t.r.ix === e ? i.rotation : t.pt.ix === e ? i.points : t.or.ix === e || "ADBE Vector Star Outer Radius" === e ? i.outerRadius : t.os.ix === e ? i.outerRoundness : !t.ir || t.ir.ix !== e && "ADBE Vector Star Inner Radius" !== e ? t.is && t.is.ix === e ? i.innerRoundness : void 0 : i.innerRadius
                            }
                            var a = "tm" === e.sh.ty ? e.sh.prop : e.sh;
                            return r.propertyIndex = t.ix, a.or.setGroupProperty(r), a.os.setGroupProperty(r), a.pt.setGroupProperty(r), a.p.setGroupProperty(r), a.r.setGroupProperty(r), t.ir && (a.ir.setGroupProperty(r), a.is.setGroupProperty(r)), Object.defineProperty(i, "position", {
                                get: function() {
                                    return a.p.k && a.p.getValue(), a.p.v
                                }
                            }), Object.defineProperty(i, "rotation", {
                                get: function() {
                                    return a.r.k && a.r.getValue(), a.r.v / a.r.mult
                                }
                            }), Object.defineProperty(i, "points", {
                                get: function() {
                                    return a.pt.k && a.pt.getValue(), a.pt.v
                                }
                            }), Object.defineProperty(i, "outerRadius", {
                                get: function() {
                                    return a.or.k && a.or.getValue(), a.or.v
                                }
                            }), Object.defineProperty(i, "outerRoundness", {
                                get: function() {
                                    return a.os.k && a.os.getValue(), a.os.v / a.os.mult
                                }
                            }), Object.defineProperty(i, "innerRadius", {
                                get: function() {
                                    return a.ir ? (a.ir.k && a.ir.getValue(), a.ir.v) : 0
                                }
                            }), Object.defineProperty(i, "innerRoundness", {
                                get: function() {
                                    return a.is ? (a.is.k && a.is.getValue(), a.is.v / a.is.mult) : 0
                                }
                            }), Object.defineProperty(i, "_name", {
                                get: function() {
                                    return t.nm
                                }
                            }), i
                        }
                    }(),
                    E = function() {
                        return function(t, e, s) {
                            var r = "tm" === e.sh.ty ? e.sh.prop : e.sh;
                            r.setGroupProperty(s);
                            var i = {get shape() {
                                    return r.k && r.getValue(), r.v
                                },
                                get path() {
                                    return r.k && r.getValue(), r.v
                                },
                                _name: t.nm
                            };
                            return i
                        }
                    }();
                return p
            }(),
            LayerExpressionInterface = function() {
                function t(t) {
                    var e = new Matrix;
                    if (e.reset(), this._elem.finalTransform.mProp.applyToMatrix(e), this._elem.hierarchy && this._elem.hierarchy.length) {
                        var s, r = this._elem.hierarchy.length;
                        for (s = 0; r > s; s += 1) this._elem.hierarchy[s].finalTransform.mProp.applyToMatrix(e);
                        return e.applyToPointArray(t[0], t[1], t[2] || 0)
                    }
                    return e.applyToPointArray(t[0], t[1], t[2] || 0)
                }
                return function(e) {
                    function s(t) {
                        r.mask = t.getMask.bind(t)
                    }

                    function r(t) {
                        switch (t) {
                            case "ADBE Root Vectors Group":
                            case 2:
                                return r.shapeInterface;
                            case "Transform":
                            case "transform":
                                return i;
                            case 4:
                                return e.effectsManager
                        }
                    }
                    var i = TransformExpressionInterface(e.transform);
                    return r.toWorld = t, r.toComp = t, r._elem = e, Object.defineProperty(r, "hasParent", {
                        get: function() {
                            return !!e.hierarchy
                        }
                    }), Object.defineProperty(r, "parent", {
                        get: function() {
                            return e.hierarchy[0].layerInterface
                        }
                    }), Object.defineProperty(r, "rotation", {
                        get: function() {
                            return i.rotation
                        }
                    }), Object.defineProperty(r, "scale", {
                        get: function() {
                            return i.scale
                        }
                    }), Object.defineProperty(r, "position", {
                        get: function() {
                            return i.position
                        }
                    }), Object.defineProperty(r, "anchorPoint", {
                        get: function() {
                            return i.anchorPoint
                        }
                    }), Object.defineProperty(r, "transform", {
                        get: function() {
                            return i
                        }
                    }), Object.defineProperty(r, "_name", {
                        value: e.data.nm
                    }), Object.defineProperty(r, "content", {
                        get: function() {
                            return r.shapeInterface
                        }
                    }), r.effect = e.effectsManager, r.active = !0, r.registerMaskInterface = s, r
                }
            }(),
            CompExpressionInterface = function() {
                return function(t) {
                    function e(e) {
                        for (var s = 0, r = t.layers.length; r > s;) {
                            if (t.layers[s].nm === e) return t.elements[s].layerInterface;
                            s += 1
                        }
                    }
                    return e.layer = e, e.pixelAspect = 1, e.height = t.globalData.compSize.h, e.width = t.globalData.compSize.w, e.pixelAspect = 1, e.frameDuration = 1 / t.globalData.frameRate, e
                }
            }(),
            TransformExpressionInterface = function() {
                return function(t) {
                    function e(s) {
                        switch (s) {
                            case "scale":
                            case "Scale":
                                return console.log("transformtransform", t), console.log("_thisFunction", e.scale), e.scale;
                            case "rotation":
                            case "Rotation":
                                return e.rotation;
                            case "position":
                            case "Position":
                                return e.position;
                            case "anchorPoint":
                            case "AnchorPoint":
                                return e.anchorPoint
                        }
                    }
                    return Object.defineProperty(e, "rotation", {
                        get: function() {
                            return t.rotation
                        }
                    }), Object.defineProperty(e, "scale", {
                        get: function() {
                            return t.scale
                        }
                    }), Object.defineProperty(e, "position", {
                        get: function() {
                            return t.position
                        }
                    }), Object.defineProperty(e, "anchorPoint", {
                        get: function() {
                            return t.anchorPoint
                        }
                    }), e
                }
            }(),
            ProjectInterface = function() {
                function t(t) {
                    this.compositions.push(t)
                }
                return function() {
                    function e(t) {
                        for (var e = 0, s = this.compositions.length; s > e;) {
                            if (this.compositions[e].data && this.compositions[e].data.nm === t) return this.compositions[e].prepareFrame(this.currentFrame), this.compositions[e].compInterface;
                            e += 1
                        }
                        console.log(this.compositions)
                    }
                    return e.compositions = [], e.currentFrame = 0, e.registerComposition = t, e
                }
            }();
        SliderEffect.prototype.proxyFunction = function() {
            if (this.p.k && this.p.getValue(), "number" == typeof this.p.v) return this.p.v;
            var t, e = this.p.v.length,
                s = Array.apply(null, {
                    length: e
                });
            for (t = 0; e > t; t += 1) s[t] = this.p.v[t];
            return s
        }, AngleEffect.prototype.proxyFunction = SliderEffect.prototype.proxyFunction, ColorEffect.prototype.proxyFunction = SliderEffect.prototype.proxyFunction, PointEffect.prototype.proxyFunction = SliderEffect.prototype.proxyFunction, CheckboxEffect.prototype.proxyFunction = SliderEffect.prototype.proxyFunction;
        var bodymovinjs = {};
        bodymovinjs.play = play, bodymovinjs.pause = pause, bodymovinjs.togglePause = togglePause, bodymovinjs.setSpeed = setSpeed, bodymovinjs.setDirection = setDirection, bodymovinjs.stop = stop, bodymovinjs.moveFrame = moveFrame, bodymovinjs.searchAnimations = searchAnimations, bodymovinjs.registerAnimation = registerAnimation, bodymovinjs.loadAnimation = loadAnimation, bodymovinjs.setSubframeRendering = setSubframeRendering, bodymovinjs.resize = resize, bodymovinjs.start = start, bodymovinjs.goToAndStop = goToAndStop, bodymovinjs.destroy = destroy, bodymovinjs.setQuality = setQuality, bodymovinjs.installPlugin = installPlugin, bodymovinjs.__getFactory = getFactory, bodymovinjs.version = "4.4.12";
        var standalone = "__[STANDALONE]__",
            animationData = "__[ANIMATIONDATA]__",
            renderer = "";
        if (standalone) {
            var scripts = document.getElementsByTagName("script"),
                index = scripts.length - 1,
                myScript = scripts[index],
                queryString = myScript.src.replace(/^[^\?]+\??/, "");
            renderer = getQueryVariable("renderer")
        }
        var readyStateCheckInterval = setInterval(checkReady, 100);
        return bodymovinjs
    }),
    function(d) {
        var g, c, f;
        return g = {
            speed: 700,
            pause: 4e3,
            showItems: 1,
            mousePause: !0,
            height: 0,
            animate: !0,
            margin: 0,
            padding: 0,
            startPaused: !1,
            autoAppend: !0
        }, c = {
            moveUp: function(a, b) {
                return c.showNextItem(a, b, "up")
            },
            moveDown: function(a, b) {
                return c.showNextItem(a, b, "down")
            },
            nextItemState: function(a, b) {
                var e, c;
                return c = a.element.children("ul"), e = a.itemHeight, 0 < a.options.height && (e = c.children("li:first").height()), e += a.options.margin + 2 * a.options.padding, {
                    height: e,
                    options: a.options,
                    el: a.element,
                    obj: c,
                    selector: "up" === b ? "li:first" : "li:last",
                    dir: b
                }
            },
            showNextItem: function(a, b, e) {
                var d;
                return d = c.nextItemState(a, e), d.el.trigger("vticker.beforeTick"), e = d.obj.children(d.selector).clone(!0), "down" === d.dir && d.obj.css("top", "-" + d.height + "px").prepend(e), b && b.animate ? a.animating || c.animateNextItem(d, a) : c.nonAnimatedNextItem(d), "up" === d.dir && a.options.autoAppend && e.appendTo(d.obj), d.el.trigger("vticker.afterTick")
            },
            animateNextItem: function(a, b) {
                return b.animating = !0, a.obj.animate("up" === a.dir ? {
                    top: "-=" + a.height + "px"
                } : {
                    top: 0
                }, b.options.speed, function() {
                    return d(a.obj).children(a.selector).remove(), d(a.obj).css("top", "0px"), b.animating = !1
                })
            },
            nonAnimatedNextItem: function(a) {
                return a.obj.children(a.selector).remove(), a.obj.css("top", "0px")
            },
            nextUsePause: function() {
                var a, b;
                if (b = d(this).data("state"), a = b.options, !b.isPaused && !c.hasSingleItem(b)) return f.next.call(this, {
                    animate: a.animate
                })
            },
            startInterval: function() {
                var a, b;
                return b = d(this).data("state"), a = b.options, b.intervalId = setInterval(function(a) {
                    return function() {
                        return c.nextUsePause.call(a)
                    }
                }(this), a.pause)
            },
            stopInterval: function() {
                var a;
                if (a = d(this).data("state")) return a.intervalId && clearInterval(a.intervalId), a.intervalId = void 0
            },
            restartInterval: function() {
                return c.stopInterval.call(this), c.startInterval.call(this)
            },
            getState: function(a, b) {
                var c;
                if (!(c = d(b).data("state"))) throw Error("vTicker: No state available from " + a);
                return c
            },
            isAnimatingOrSingleItem: function(a) {
                return a.animating || this.hasSingleItem(a)
            },
            hasMultipleItems: function(a) {
                return 1 < a.itemCount
            },
            hasSingleItem: function(a) {
                return !c.hasMultipleItems(a)
            },
            bindMousePausing: function(a) {
                return function(a, e) {
                    return a.bind("mouseenter", function() {
                        if (!e.isPaused) return e.pausedByCode = !0, c.stopInterval.call(this), f.pause.call(this, !0)
                    }).bind("mouseleave", function() {
                        if (!e.isPaused || e.pausedByCode) return e.pausedByCode = !1, f.pause.call(this, !1), c.startInterval.call(this)
                    })
                }
            }(this),
            setItemLayout: function(a, b, c) {
                var f;
                return a.css({
                    overflow: "hidden",
                    position: "relative"
                }).children("ul").css({
                    position: "absolute",
                    margin: 0,
                    padding: 0
                }).children("li").css({
                    margin: c.margin,
                    padding: c.padding
                }), isNaN(c.height) || 0 === c.height ? (a.children("ul").children("li").each(function() {
                    if (d(this).height() > b.itemHeight) return b.itemHeight = d(this).height()
                }), a.children("ul").children("li").each(function() {
                    return d(this).height(b.itemHeight)
                }), f = c.margin + 2 * c.padding, a.height((b.itemHeight + f) * c.showItems + c.margin)) : a.height(c.height)
            },
            defaultStateAttribs: function(a, b) {
                return {
                    itemCount: a.children("ul").children("li").length,
                    itemHeight: 0,
                    itemMargin: 0,
                    element: a,
                    animating: !1,
                    options: b,
                    isPaused: b.startPaused,
                    pausedByCode: !1
                }
            }
        }, f = {
            init: function(a) {
                var b, e;
                if (d(this).data("state") && f.stop.call(this), b = jQuery.extend({}, g), a = d.extend(b, a), b = d(this), e = c.defaultStateAttribs(b, a), d(this).data("state", e), c.setItemLayout(b, e, a), a.startPaused || c.startInterval.call(this), a.mousePause) return c.bindMousePausing(b, e)
            },
            pause: function(a) {
                var b;
                return b = c.getState("pause", this), !!c.hasMultipleItems(b) && (b.isPaused = a, b = b.element, a ? (d(this).addClass("paused"), b.trigger("vticker.pause")) : (d(this).removeClass("paused"), b.trigger("vticker.resume")))
            },
            next: function(a) {
                var b;
                return b = c.getState("next", this), !c.isAnimatingOrSingleItem(b) && (c.restartInterval.call(this), c.moveUp(b, a))
            },
            prev: function(a) {
                var b;
                return b = c.getState("prev", this), !c.isAnimatingOrSingleItem(b) && (c.restartInterval.call(this), c.moveDown(b, a))
            },
            stop: function() {
                return c.getState("stop", this), c.stopInterval.call(this)
            },
            remove: function() {
                var a;
                return a = c.getState("remove", this), c.stopInterval.call(this), a = a.element, a.unbind(), a.remove()
            }
        }, d.fn.vTicker = function(a) {
            return f[a] ? f[a].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != typeof a && a ? d.error("Method " + a + " does not exist on jQuery.vTicker") : f.init.apply(this, arguments)
        }
    }(jQuery);
var keys = {
    37: 1,
    38: 1,
    39: 1,
    40: 1
};